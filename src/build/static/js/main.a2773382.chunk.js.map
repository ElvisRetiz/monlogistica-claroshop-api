{"version":3,"sources":["context/AppContext.js","assets/logo_largo_negro.svg","components/AppMenu.jsx","assets/icono_blanco.svg","components/Navbar.jsx","components/Layout.jsx","config.js","components/CatalogWarehouse.jsx","components/CatalogArea.jsx","components/CatalogDriver.jsx","components/CatalogCustomer.jsx","components/CatalogUser.jsx","components/CatalogZip.jsx","components/CatalogBranch.jsx","components/CatalogParameters.jsx","components/CatalogZone.jsx","containers/Catalogs.jsx","components/GuideDelivered.jsx","components/GuideInTransit.jsx","components/GuideInWarehouse.jsx","components/GuideRegistration.jsx","components/GuideReturned.jsx","components/GuideReturnRegistration.jsx","components/GuideReturnToCustomer.jsx","components/GuideTracking.jsx","containers/Guides.jsx","assets/logo_largo_completo_negro_sub.svg","containers/Log.jsx","components/Modal.jsx","components/TableNewOrder.jsx","components/TableAssignOrder.jsx","components/TableCollectedOrder.jsx","components/TableInWarehouseOrder.jsx","containers/Orders.jsx","containers/DriverOrders.jsx","containers/DriverGuides.jsx","hooks/useInitialState.js","components/ReportControl.jsx","components/ReportReturns.jsx","components/ReportTimes.jsx","containers/Reports.jsx","containers/DriverReturns.jsx","components/Guides/CollectOrders.jsx","components/Guides/HandleGuides.jsx","components/Guides/ToCollect.jsx","components/Guides/InWarehouse.jsx","components/Guides/TrackingGuides.jsx","containers/ApplicationFull.jsx","routes/index.jsx","index.js"],"names":["AppContext","React","createContext","Container","styled","div","props","visibleMenu","BtnMenu","button","ImgMenu","img","Item","ItemText","p","AppMenu","useContext","state","user","toggleMenu","handleClick","onClick","src","Logo","alt","id","tittle","path","access","map","option","includes","tipo","to","style","textDecoration","color","useStyles","makeStyles","root","nav","BadgeContainer","Badge","BadgeText","Navbar","classes","className","Main","ChildrenContainer","Layout","children","config","urlBase","TableContainer","DeleteButton","EditButton","CustomButton","CustomButtonOutline","CatalogWarehouse","useState","elements","setElements","selectElement","setSelectElement","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","codigoAgregarRef","useRef","descripcionAgregarRef","useEffect","a","fetch","response","json","warehouses","fetchData","handleCloseAddModal","handleCloseEditModal","handleCloseDeleteModal","handleDelete","almacen","method","data","type","Error","message","filter","element","toast","success","error","handleAdd","newElement","current","value","descripcion","headers","body","JSON","stringify","concat","handleEdit","newsElements","activo","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","InputGroup","size","Text","FormControl","ref","maxLength","Footer","disabled","onChange","event","target","Table","striped","hover","responsive","length","CatalogArea","zonaAgregarRef","areas","area","console","log","zona","CatalogDriver","empresaAgregarRef","chofer","nombre","empresa","handleEditChange","name","CatalogCustomer","direccionAgregarRef","numeroExtAgregarRef","numeroIntAgregarRef","coloniaAgregarRef","ciudadAgregarRef","estadoAgregarRef","codigoPostalAgregarRef","rfcAgregarRef","contactoAgregarRef","conTelefonoAgregarRef","conEmailAgregarRef","nombreCortoAgregarRef","customers","cliente","razonSocial","direccion","numeroExt","numeroInt","colonia","ciudad","estado","codigoPostal","rfc","contacto","conTelefono","conEmail","nombreCorto","dayjs","extend","utc","CatalogUser","drivers","setDrivers","passwordAgregarRef","correoAgregarRef","tipoAgregarRef","choferRef","users","choferes","usuario","password","correo","dentro","ultimoAcceso","Form","Select","driver","format","CatalogZip","setAreas","responseA","responseB","zips","zip","CatalogBranch","setCustomers","setWarehouses","clienteRef","sucursalRef","descripcionlRef","direccionRef","numeroExtRef","numeroIntRef","coloniaRef","ciudadRef","estadoRef","codigoPostalRef","contactoRef","conTelefonoRef","conEmailRef","almacenRef","responseC","responseW","sucursal","customer","warehouse","readOnly","branch","CatalogParameters","parametros","setParametros","limiteRef","handleChange","limite","Row","Col","e","CantidadDevoluciones","CatalogZone","zonas","Tittle","h3","Box","NavContainer","NavApp","NavElement","isActive","catalogos","opciones","Catalogs","setOption","handleOption","catalogo","description","GuideDelivered","fecha","Date","guides","setGuides","local","selectedInitDate","setSelectedInitDate","selectedFinDate","setSelectedFinDate","dateIniRef","dateFiniRef","responseD","fetchOrders","handleChangeDate","dateIni","setDate","getDate","dateFin","max","min","bordered","header","guide","RecibeFecha","guia","RecibePersona","choferEntrega","estatus","BoxTwo","BtnAssign","TextBtn","Display","initialState","markedOrders","selectedOrders","reducer","action","payload","selectedOrder","orden","GuideInTransit","useReducer","dispach","assignShow","setAssignShow","setAlmacenes","handleAssignClose","handlingUnassignment","promises","sO","Promise","all","responses","newOrders","order","Group","Label","marginRight","orders","checked","handleAllChange","FechaEntregaChofer","TableContainerTwo","PrintButton","AssignContainer","RowSelected","tr","OptionsButtons","markedGuides","selectedGuides","selectedGuide","zones","GuideInWarehouse","guias","setGuias","almacenes","setChoferes","guiasChofer","setGuiasChofer","setShow","posicionRef","handleClose","handleShow","handleChangeDriver","assignedGuides","handleAssignmentGuide","requests","index","posicion","newGuides","responseG","handleChangeWarehouse","newGuidesList","onDragEnd","result","source","destination","droppableId","list","startIndex","endIndex","splice","removed","reorder","xs","contenedor","document","getElementById","innerHTML","w","window","open","write","close","focus","print","display","justifyContent","padding","zone","areasInZone","guidesInZone","indexOf","fechaEntregaAlmacen","variant","droppableProvider","droppableProps","innerRef","draggableId","draggableProvider","draggableProps","dragHandleProps","placeholder","fullscreen","as","Control","colSpan","guiaChofer","GuideRegistration","setGuide","setOrders","setDriver","guiaRef","handleEnter","key","handleRegistry","mode","ordenes","autoFocus","onKeyUp","Button","FloatingLabel","controlId","label","choferRecoleccion","numeroPedido","nombreClienteFinal","referencias","telefono","GuideReturned","GuideReturnRegistration","guidesReturn","setGuidesReturn","handleReturnToWarehouse","responseReturn","g","handleReturnToCustomer","d","GuideReturnToCustomer","GuideTracking","setOrder","orderRef","handleSubmit","fechaRecoleccion","fechaDevueltaAlmacen","ordersOptions","Guides","oP","Input","input","BtnLog","Log","history","useHistory","userRef","passwordRef","signUser","handleSignUser","push","NewOrderModal","fechaRef","paquetesRef","loading","setLoading","setMessage","clientes","setClientes","clienteActivo","setClienteActivo","sucursales","setSucursales","sucursalActiva","setSucursalActiva","branches","branchesByClient","b","handleOrder","paquetes","usuarioCaptura","res","customerFiltered","c","parseInt","branchFiltered","handleChangeBranch","selected","BtnAdd","OutlineBtn","BtnDelete","TableNewOrder","setBranches","addShow","setAddShow","activeWarehouse","setActiveWarehouse","warehouseRef","allCheckboxRef","elementToBeDeleted","setElementToBeDeleted","fetchDrivers","handlingAssignment","handleDeleteOrder","orderNumber","ordersBySelectedWarehouse","HoverElement","td","TableAssignOrder","modifyShow","setModifyShow","setSelectedOrder","amountRef","handleModifyClose","handleEditOrder","filteredOrders","o","OverlayTrigger","placement","overlay","Popover","TableCollectedOrder","paquetesReales","TableInWarehouseOrder","Orders","orderOption","TextModal","CameraArea","ScanCodeButton","SignField","DriverOrders","selectedElement","setSelectedElement","scanGuide","setScanGuide","showGuideModal","setShowGuideModal","showMessage","setShowMessage","guidesCollected","setGuidesCollected","quaggaInit","setQuaggaInit","signCanvas","nombreFirmaRef","responseO","Quagga","stop","handleGuideModalClose","handleGuideRegistration","postObject","handleOrderRegistration","isEmpty","quienValida","firmaValida","getTrimmedCanvas","toDataURL","replace","onDetected","codeResult","code","toUpperCase","init","inputStream","querySelector","constraints","aspectRatio","facingMode","locator","patchSize","halfSample","numOfWorkers","frequency","decoder","readers","locate","err","start","flexDirection","alignItems","Spinner","animation","canvasProps","width","height","clear","ImgGContainer","visible","DriverGuides","showFotoCasa","setShowFotoCasa","showFotoIfe","setShowFotoIfe","showFotoOtro","setShowFotoOtro","quienRecibeRef","fotoCasaRef","fotoIfeRef","fotoOtroRef","setBody","motivoRef","showModalReturn","setShowModalReturn","showModalVerify","setShowModalVerify","badGuideMessage","setBadGuideMessage","reader","FileReader","onload","readAsDataURL","files","newBody","recibePersona","responseRG","handleCloseModalReturn","handleShowModalReturn","handleCloseModalVerify","handleReturn","motivo","md","accept","capture","href","Alert","Heading","delay","onError","onScan","useInitialState","signedUser","setState","ReportControl","setData","margin","table","filename","sheet","buttonText","choferRecolecta","origen","destino","motivoDevolucion","ReportReturns","ReportTimes","recoleccionAlmacen","almacenChofer","choferCliente","choferAlmacen","almacenDevolucion","Reports","DriverReturns","AddGuideButton","RemoveGuideButton","ListContainer","IconContainer","CollectOrders","guidesOfSelectedOrder","setGuidesOfSelectedOrder","setFilteredOrders","pendingGuidesToCollect","setPendingGuidesToCollect","showEdit","setShowEdit","showAddGuide","setShowAddGuide","responseCustomers","responseBranches","responseDrivers","responseWarehouses","responseOrders","handleCloseEdit","handleShowEdit","orderToBeEdited","handleCloseAddGuide","handleShowAddGuide","handleDeleteGuide","guideS","handleAddGuide","mapingBranch","find","mapingCustomer","mapingDriver","toLowerCase","defaultValue","marginLeft","handleCheck","Card","marginBottom","Subtitle","mapingWarehouse","centered","ListGroup","marginTop","fechaEnvio","HandleGuides","GuideContainer","ToCollect","require","filteredGuides","setFilteredGuides","branchRef","driverRef","responseGuides","filtered","handleNewOrder","guideReference","InWarehouse","TrackingGuides","options","TOCOLLECT","COLLECTORDERS","HANDLEGUIDES","INWAREHOUSE","TRACKINGGUIDES","navOptions","ApplicationFull","page","setPage","App","MyRoute","Provider","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2773382.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext({});\r\n\r\nexport default AppContext;","export default __webpack_public_path__ + \"static/media/logo_largo_negro.37891668.svg\";","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport AppContext from '../context/AppContext';\r\n\r\nimport Logo from '../assets/logo_largo_negro.svg';\r\n\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    z-index: 15;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #fdd448;\r\n    width: 30%;\r\n    left: ${props => !props.visibleMenu ? '-30%' : '0'};\r\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\r\n    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\r\n    transition: 0.3s;\r\n    @media (max-width: 820px) {\r\n        width: 420px;\r\n        left: ${props => !props.visibleMenu ? '-420px' : '0'};\r\n    }\r\n    @media (max-width: 620px) {\r\n        width: 320px;\r\n        left: ${props => !props.visibleMenu ? '-320px' : '0'};\r\n    }\r\n    @media (max-width: 420px) {\r\n        width: 220px;\r\n        left: ${props => !props.visibleMenu ? '-220px' : '0'};\r\n    }\r\n    @media (max-width: 320px) {\r\n        width: 170px;\r\n        left: ${props => !props.visibleMenu ? '-170px' : '0'};\r\n    }\r\n`;\r\n\r\nconst BtnMenu = styled.button`\r\n    width: 100%;\r\n    height: 55px;\r\n    text-align: right;\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nconst ImgMenu = styled.img`\r\n    height: 60px;\r\n    margin-bottom: 50px;\r\n\r\n    @media (max-width: 820px) {\r\n        height: 60px;\r\n    }\r\n    @media (max-width: 620px) {\r\n        height: 60px;\r\n    }\r\n    @media (max-width: 420px) {\r\n        height: 40px;\r\n    }\r\n    @media (max-width: 320px) {\r\n        height: 40px;\r\n    }\r\n`\r\n\r\nconst Item = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n    color: black;\r\n    font-weight: bold;\r\n    width: 100%;\r\n    height: 55px;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n\r\n    &::active {\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst ItemText = styled.p`\r\n    margin: 0;\r\n    text-align: center;\r\n`;\r\n\r\nconst AppMenu = () => {\r\n    const { state: { visibleMenu, user }, toggleMenu } = useContext(AppContext);\r\n    \r\n    const handleClick = () => toggleMenu(visibleMenu);\r\n\r\n    const options = [\r\n        {id: 1, tittle:'ORDENES DE RECOLECCION', path: \"/orders\", access: [1,2]},\r\n        {id: 2, tittle:'GUIAS DE ENTREGA', path: \"/guides\", access: [1,2]},\r\n        {id: 3, tittle:'CATALOGOS',path: \"/catalogs\", access: [1]},\r\n        {id: 4, tittle:'REPORTES',path: \"/reports\", access: [1]},\r\n        {id: 5, tittle:'GUIAS DEVOLUCION',path: \"/returns\", access: [2]}\r\n    ];\r\n    \r\n    return (\r\n        <Container visibleMenu={visibleMenu}>\r\n            <BtnMenu onClick={handleClick}>\r\n                <MenuOpenIcon />\r\n            </BtnMenu>\r\n            <ImgMenu src={Logo} alt=\"Logo Monlog\"/>\r\n            {options.map( option =>\r\n               ( option.access.includes(user.tipo) ?\r\n                    <Item key={option.id}>\r\n                        <Link to={option.path} style={{ textDecoration: 'none', color: \"inherit\"}} onClick={handleClick}>\r\n                            <ItemText>\r\n                                {option.tittle}\r\n                            </ItemText>\r\n                        </Link>\r\n                    </Item>\r\n                :\r\n                <></>)\r\n            )}\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AppMenu;","export default __webpack_public_path__ + \"static/media/icono_blanco.210598a2.svg\";","import { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport AppContext from '../context/AppContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Logo from '../assets/icono_blanco.svg'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      color: 'white',\r\n    },\r\n  });\r\n\r\nconst Container = styled.nav`\r\n    position: fixed;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 55px;\r\n    background-color: black;\r\n    color: white;\r\n    width:100%;\r\n`;\r\n\r\nconst BtnMenu = styled.button`\r\n    box-sizing: border-box;\r\n    border: black solid 1px;\r\n    background-color: transparent;\r\n    margin: 0 15px;\r\n\r\n    &:hover {\r\n        border: white solid 1px;\r\n    }\r\n`;\r\n\r\nconst BadgeContainer = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: baseline;\r\n    max-width: 100px;\r\n`;\r\n\r\nconst Badge = styled.img`\r\n    width: 20px;\r\n    & svg {\r\n        fill: red;\r\n    }\r\n`;\r\n\r\nconst BadgeText = styled.p`\r\n    margin: 0 5px;\r\n    margin-right: 100px;\r\n`;\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const { state: { visibleMenu }, toggleMenu } = useContext(AppContext);\r\n\r\n    const handleClick = () => toggleMenu(visibleMenu);\r\n\r\n    return (\r\n        <Container>\r\n            <BtnMenu onClick={handleClick}>\r\n                <MenuIcon className={classes.root}/>\r\n            </BtnMenu>\r\n            <BadgeContainer>\r\n                <Badge src={Logo} alt=\"Logo\"/>\r\n                <BadgeText>Monlog</BadgeText>\r\n            </BadgeContainer>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import styled from 'styled-components';\r\nimport AppMenu from './AppMenu';\r\nimport Navbar from './Navbar';\r\n\r\nconst Container = styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    whidth: 100%;\r\n    background-color: white;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    z-index: 1;\r\n`;\r\n\r\nconst ChildrenContainer = styled.div`\r\n    padding-top: 55px;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <AppMenu />\r\n            <Main>\r\n                <Navbar />\r\n                <ChildrenContainer>\r\n                    {children}\r\n                </ChildrenContainer>\r\n            </Main>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Layout;","const config = {\r\n    urlBase: \"https://192.168.100.21:8000/api/\"\r\n}\r\n\r\nexport default config","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal,InputGroup, FormControl } from 'react-bootstrap';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogWarehouse = () => {\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            try {\r\n                let response = await fetch(`${config.urlBase}almacenes/`);\r\n                let warehouses = await response.json();\r\n                setElements(warehouses);   \r\n            } catch (error) {\r\n                return\r\n            }\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}almacenes/eliminar?almacen=${selectElement.almacen}`,{\r\n                method: 'DELETE'\r\n            });\r\n            let data = await response.json();\r\n            if (data.type === 'Error') {\r\n                throw Error(data.message);\r\n            }\r\n            setElements(elements.filter(element => element.almacen !== selectElement.almacen));\r\n            setShowDeleteModal(false);\r\n            toast.success(data.message);\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        try {\r\n            let newElement = {};\r\n            newElement.almacen = codigoAgregarRef.current.value;\r\n            newElement.descripcion = descripcionAgregarRef.current.value;\r\n            let response = await fetch(`${config.urlBase}almacenes/`,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newElement)\r\n            });\r\n            response = await response.json();\r\n            if (response.type === 'Error') {\r\n                throw Error(response.message)\r\n            }\r\n            setElements(elements.concat(response.data))\r\n            setShowAddModal(false);\r\n            toast.success(response.message) \r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            descripcion: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.almacen = selectElement.almacen;\r\n        newElement.descripcion = selectElement.descripcion;\r\n        let response = await fetch(`${config.urlBase}almacenes/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.almacen === selectElement.almacen) {\r\n                element.almacen = response.data.almacen;\r\n                element.descripcion = response.data.descripcion;\r\n                element.activo = response.data.activo;\r\n            }\r\n\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl aria-label=\"Codigo\" aria-describedby=\"inputGroup-sizing-sm\" ref={codigoAgregarRef} maxLength=\"10\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.almacen}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.descripcion}\r\n                            onChange={handleEditChange}\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.almacen} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>ALMACENES</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Descripcion</th>\r\n                        <th>{\" \"}</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( almacen => (\r\n                                <tr key={almacen.almacen}>\r\n                                    <td>\r\n                                        {almacen.almacen}\r\n                                    </td>\r\n                                    <td>{almacen.descripcion}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(almacen)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(almacen)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n            <Toaster />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogWarehouse;","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal,InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogArea = () => {\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n    const zonaAgregarRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let response = await fetch(`${config.urlBase}areas/`);\r\n            let areas = await response.json();\r\n            setElements(areas)\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}areas/eliminar?area=${selectElement.area}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.area !== selectElement.area));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.area = codigoAgregarRef.current.value;\r\n        newElement.descripcion = descripcionAgregarRef.current.value;\r\n        newElement.zona = zonaAgregarRef.current.value;\r\n        let response = await fetch(`${config.urlBase}areas/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            descripcion: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.area = selectElement.area;\r\n        newElement.descripcion = selectElement.descripcion;\r\n        newElement.activo = selectElement.activo;\r\n        let response = await fetch(`${config.urlBase}areas/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.area === selectElement.area) {\r\n                element.area = response.data.area;\r\n                element.descripcion = response.data.descripcion;\r\n            }\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text \r\n                            id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            ref={codigoAgregarRef} \r\n                            maxLength=\"10\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Zona</InputGroup.Text>\r\n                        <FormControl aria-label=\"Zona\" aria-describedby=\"inputGroup-sizing-sm\" ref={zonaAgregarRef} maxLength=\"50\"/>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.area}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.descripcion}\r\n                            onChange={handleEditChange}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Zona</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.zona}\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.area} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>AREAS</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Descripcion</th>\r\n                        <th>Zona</th>\r\n                        <th>{\" \"}</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( area => (\r\n                                <tr key={area.area}>\r\n                                    <td>\r\n                                        {area.area}\r\n                                    </td>\r\n                                    <td>{area.descripcion}</td>\r\n                                    <td>{area.zona}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(area)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(area)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogArea;","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal,InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogDriver = () => {\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n    const empresaAgregarRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let response = await fetch(`${config.urlBase}choferes/`);\r\n            let warehouses = await response.json();\r\n            setElements(warehouses)\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}choferes/eliminar?chofer=${selectElement.chofer}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.chofer !== selectElement.chofer));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.chofer = codigoAgregarRef.current.value;\r\n        newElement.nombre = descripcionAgregarRef.current.value;\r\n        newElement.empresa = empresaAgregarRef.current.value;\r\n        let response = await fetch(`${config.urlBase}choferes/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.chofer = selectElement.chofer;\r\n        newElement.nombre = selectElement.nombre;\r\n        newElement.empresa = selectElement.empresa;\r\n        let response = await fetch(`${config.urlBase}choferes/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.chofer === selectElement.chofer) {\r\n                element.chofer = response.data.chofer;\r\n                element.nombre = response.data.nombre;\r\n                element.empresa = response.data.empresa;\r\n                element.activo = response.data.activo;\r\n            }\r\n\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl aria-label=\"Codigo\" aria-describedby=\"inputGroup-sizing-sm\" ref={codigoAgregarRef} maxLength=\"10\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombre</InputGroup.Text>\r\n                        <FormControl aria-label=\"Nombre\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Empresa</InputGroup.Text>\r\n                        <FormControl aria-label=\"Empresa\" aria-describedby=\"inputGroup-sizing-sm\" ref={empresaAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.chofer}\r\n                            name=\"chofer\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombre</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Nombre\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.nombre}\r\n                            onChange={handleEditChange}\r\n                            name=\"nombre\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Empresa</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Empresa\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.empresa}\r\n                            onChange={handleEditChange}\r\n                            name=\"empresa\"\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.chofer} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>CHOFERES</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Nombre</th>\r\n                        <th>Empresa</th>\r\n                        <th>{\" \"}</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( chofer => (\r\n                                <tr key={chofer.chofer}>\r\n                                    <td>\r\n                                        {chofer.chofer}\r\n                                    </td>\r\n                                    <td>{chofer.nombre}</td>\r\n                                    <td>{chofer.empresa}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(chofer)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(chofer)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogDriver;","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal,InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogCustomer = () => {\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n    const direccionAgregarRef = useRef(null);\r\n    const numeroExtAgregarRef = useRef(null);\r\n    const numeroIntAgregarRef = useRef(null);\r\n    const coloniaAgregarRef = useRef(null);\r\n    const ciudadAgregarRef = useRef(null);\r\n    const estadoAgregarRef = useRef(null);\r\n    const codigoPostalAgregarRef = useRef(null);\r\n    const rfcAgregarRef = useRef(null);\r\n    const contactoAgregarRef = useRef(null);\r\n    const conTelefonoAgregarRef = useRef(null);\r\n    const conEmailAgregarRef = useRef(null);\r\n    const nombreCortoAgregarRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let response = await fetch(`${config.urlBase}clientes/`);\r\n            let customers = await response.json();\r\n            setElements(customers)\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}clientes/eliminar?cliente=${selectElement.cliente}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.cliente !== selectElement.cliente));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.cliente = codigoAgregarRef.current.value;\r\n        newElement.razonSocial = descripcionAgregarRef.current.value;\r\n        newElement.direccion = direccionAgregarRef.current.value;\r\n        newElement.numeroExt = numeroExtAgregarRef.current.value;\r\n        newElement.numeroInt = numeroIntAgregarRef.current.value;\r\n        newElement.colonia = coloniaAgregarRef.current.value;\r\n        newElement.ciudad = ciudadAgregarRef.current.value;\r\n        newElement.estado = estadoAgregarRef.current.value;\r\n        newElement.codigoPostal = codigoPostalAgregarRef.current.value;\r\n        newElement.rfc = rfcAgregarRef.current.value;\r\n        newElement.contacto = contactoAgregarRef.current.value;\r\n        newElement.conTelefono = conTelefonoAgregarRef.current.value;\r\n        newElement.conEmail = conEmailAgregarRef.current.value;\r\n        newElement.nombreCorto = nombreCortoAgregarRef.current.value;\r\n        let response = await fetch(`${config.urlBase}clientes/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.cliente = selectElement.cliente;\r\n        newElement.razonSocial = selectElement.razonSocial;\r\n        newElement.direccion = selectElement.direccion;\r\n        newElement.numeroExt = selectElement.numeroExt;\r\n        newElement.numeroInt = selectElement.numeroInt;\r\n        newElement.colonia = selectElement.colonia;\r\n        newElement.ciudad = selectElement.ciudad;\r\n        newElement.estado = selectElement.estado;\r\n        newElement.codigoPostal = selectElement.codigoPostal;\r\n        newElement.rfc = selectElement.rfc;\r\n        newElement.contacto = selectElement.contacto;\r\n        newElement.conTelefono = selectElement.conTelefono;\r\n        newElement.conEmail = selectElement.conEmail;\r\n        newElement.nombreCorto = selectElement.nombreCorto;\r\n        let response = await fetch(`${config.urlBase}clientes/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.cliente === selectElement.cliente) {\r\n                element.cliente = response.data.cliente;\r\n                element.razonSocial = response.data.razonSocial;\r\n                element.direccion = response.data.direccion;\r\n                element.numeroExt = response.data.numeroExt;\r\n                element.numeroInt = response.data.numeroInt;\r\n                element.colonia = response.data.colonia;\r\n                element.ciudad = response.data.ciudad;\r\n                element.estado = response.data.estado;\r\n                element.codigoPostal = response.data.codigoPostal;\r\n                element.rfc = response.data.rfc;\r\n                element.contacto = response.data.contacto;\r\n                element.conTelefono = response.data.conTelefono;\r\n                element.conEmail = response.data.conEmail;\r\n                element.activo = response.data.activo;\r\n            }\r\n\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl aria-label=\"Codigo\" aria-describedby=\"inputGroup-sizing-sm\" ref={codigoAgregarRef} maxLength=\"10\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Razon Social</InputGroup.Text>\r\n                        <FormControl aria-label=\"RazonSocial\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombre corto</InputGroup.Text>\r\n                        <FormControl aria-label=\"nombreCorto\" aria-describedby=\"inputGroup-sizing-sm\" ref={nombreCortoAgregarRef} maxLength=\"50\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Direccion</InputGroup.Text>\r\n                        <FormControl aria-label=\"Direccion\" aria-describedby=\"inputGroup-sizing-sm\" ref={direccionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Exterior</InputGroup.Text>\r\n                        <FormControl aria-label=\"NumeroExterior\" aria-describedby=\"inputGroup-sizing-sm\" ref={numeroExtAgregarRef} maxLength=\"50\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Interior</InputGroup.Text>\r\n                        <FormControl aria-label=\"NumeroInterior\" aria-describedby=\"inputGroup-sizing-sm\" ref={numeroIntAgregarRef} maxLength=\"50\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Colonia</InputGroup.Text>\r\n                        <FormControl aria-label=\"Colonia\" aria-describedby=\"inputGroup-sizing-sm\" ref={coloniaAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Ciudad</InputGroup.Text>\r\n                        <FormControl aria-label=\"Ciudad\" aria-describedby=\"inputGroup-sizing-sm\" ref={ciudadAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Estado</InputGroup.Text>\r\n                        <FormControl aria-label=\"Estado\" aria-describedby=\"inputGroup-sizing-sm\" ref={estadoAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo Postal</InputGroup.Text>\r\n                        <FormControl aria-label=\"CodigoPostal\" aria-describedby=\"inputGroup-sizing-sm\" ref={codigoPostalAgregarRef} maxLength=\"30\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">R.F.C.</InputGroup.Text>\r\n                        <FormControl aria-label=\"RFC\" aria-describedby=\"inputGroup-sizing-sm\" ref={rfcAgregarRef} maxLength=\"30\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Contacto</InputGroup.Text>\r\n                        <FormControl aria-label=\"Contacto\" aria-describedby=\"inputGroup-sizing-sm\" ref={contactoAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Telefono</InputGroup.Text>\r\n                        <FormControl aria-label=\"TelefonoDeContacto\" aria-describedby=\"inputGroup-sizing-sm\" ref={conTelefonoAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Correo electronico</InputGroup.Text>\r\n                        <FormControl aria-label=\"EmailDeContacto\" aria-describedby=\"inputGroup-sizing-sm\" ref={conEmailAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.cliente}\r\n                            name=\"cliente\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Razon Social</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"RazonSocial\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.razonSocial}\r\n                            onChange={handleEditChange}\r\n                            name=\"razonSocial\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombre corto</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"nombreCorto\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"50\" \r\n                            value={selectElement.nombreCorto}\r\n                            onChange={handleEditChange}\r\n                            name=\"nombreCorto\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Direccion</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Direccion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\"\r\n                            value={selectElement.direccion}\r\n                            onChange={handleEditChange}\r\n                            name=\"direccion\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Exterior</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"NumeroExterior\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"50\"\r\n                            value={selectElement.numeroExt}\r\n                            onChange={handleEditChange}\r\n                            name=\"numeroExt\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Interior</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"NumeroInterior\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"50\"\r\n                            value={selectElement.numeroInt}\r\n                            onChange={handleEditChange}\r\n                            name=\"numeroInt\"    \r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Colonia</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Colonia\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.colonia}\r\n                            onChange={handleEditChange}\r\n                            name=\"colonia\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Ciudad</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Ciudad\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.ciudad}\r\n                            onChange={handleEditChange}\r\n                            name=\"ciudad\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Estado</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Estado\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.estado}\r\n                            onChange={handleEditChange}\r\n                            name=\"estado\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo Postal</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"CodigoPostal\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"30\"\r\n                            value={selectElement.codigoPostal}\r\n                            onChange={handleEditChange}\r\n                            name=\"codigoPostal\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">R.F.C.</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"RFC\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"30\"\r\n                            value={selectElement.rfc}\r\n                            onChange={handleEditChange}\r\n                            name=\"rfc\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Contacto</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Contacto\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.contacto}\r\n                            onChange={handleEditChange}\r\n                            name=\"contacto\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Telefono</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"TelefonoDeContacto\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.conTelefono}\r\n                            onChange={handleEditChange}\r\n                            name=\"conTelefono\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Correo electronico</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"EmailDeContacto\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.conEmail}\r\n                            onChange={handleEditChange}\r\n                            name=\"conEmail\"\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.razonSocial} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>CLIENTES</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Razon Social</th>\r\n                        <th>{\" \"}</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( cliente => (\r\n                                <tr key={cliente.cliente}>\r\n                                    <td>\r\n                                        {cliente.cliente}\r\n                                    </td>\r\n                                    <td>{cliente.razonSocial}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(cliente)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(cliente)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogCustomer;","import dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal, InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\ndayjs.extend(utc);\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogUser = () => {\r\n\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n    const passwordAgregarRef = useRef(null);\r\n    const correoAgregarRef = useRef(null);\r\n    const tipoAgregarRef = useRef(null);\r\n    const choferRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let response = await fetch(`${config.urlBase}usuarios/`);\r\n            let users = await response.json();\r\n            setElements(users);\r\n            let choferes = await fetch(`${config.urlBase}choferes/`);\r\n            choferes = await choferes.json();\r\n            setDrivers(choferes);\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}usuarios/eliminar?usuario=${selectElement.usuario}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.usuario !== selectElement.usuario));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.usuario = codigoAgregarRef.current.value;\r\n        newElement.nombre = descripcionAgregarRef.current.value;\r\n        newElement.password = passwordAgregarRef.current.value;\r\n        newElement.correo = correoAgregarRef.current.value;\r\n        newElement.tipo = tipoAgregarRef.current.value;\r\n        let response = await fetch(`${config.urlBase}usuarios/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.usuario = selectElement.usuario;\r\n        newElement.nombre = selectElement.nombre;\r\n        newElement.password = selectElement.password;\r\n        newElement.correo = selectElement.correo;\r\n        newElement.tipo = selectElement.tipo;\r\n        let response = await fetch(`${config.urlBase}usuarios/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.usuario === selectElement.usuario) {\r\n                element.usuario = response.data.usuario;\r\n                element.nombre = response.data.nombre;\r\n                element.password = response.data.password;\r\n                element.correo = response.data.correo;\r\n                element.tipo = response.data.tipo;\r\n                element.activo = response.data.activo;\r\n                element.dentro = response.data.dentro;\r\n                element.ultimoAcceso = response.data.ultimoAcceso;\r\n            }\r\n\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Usuario</InputGroup.Text>\r\n                        <FormControl aria-label=\"Codigo\" aria-describedby=\"inputGroup-sizing-sm\" ref={codigoAgregarRef} maxLength=\"10\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombre</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Contraseña</InputGroup.Text>\r\n                        <FormControl aria-label=\"Password\" type=\"password\" aria-describedby=\"inputGroup-sizing-sm\" ref={passwordAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Correo</InputGroup.Text>\r\n                        <FormControl aria-label=\"Correo\" aria-describedby=\"inputGroup-sizing-sm\" ref={correoAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Tipo</InputGroup.Text>\r\n                        <Form.Select aria-label=\"Tipo\" ref={tipoAgregarRef} >\r\n                            <option value=\"1\">Administrador</option>\r\n                            <option value=\"2\">Chofer</option>\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Chofer</InputGroup.Text>\r\n                        <Form.Select aria-label=\"Tipo\" ref={choferRef} >\r\n                            <option value=\"\">...</option>\r\n                            {\r\n                                drivers.map(driver => <option value={driver.chofer}>{driver.nombre}</option>)\r\n                            }\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Usuario</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Usuario\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.usuario}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Nombre</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Nombre\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.nombre}\r\n                            onChange={handleEditChange}\r\n                            name=\"nombre\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Contraseña</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Password\" \r\n                            type=\"password\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={\"\"}\r\n                            onChange={handleEditChange}\r\n                            name=\"password\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Correo</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Correo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.correo}\r\n                            onChange={handleEditChange}\r\n                            name=\"correo\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Tipo</InputGroup.Text>\r\n                        <Form.Select \r\n                            aria-label=\"Tipo\"\r\n                            value={selectElement.tipo}\r\n                            onChange={handleEditChange}\r\n                            name=\"tipo\"\r\n                        >\r\n                            <option value=\"1\">Administrador</option>\r\n                            <option value=\"2\">Chofer</option>\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.usuario} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>USUARIOS</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Usuario</th>\r\n                            <th>Nombre</th>\r\n                            <th>Tipo</th>\r\n                            <th>Ultimo Acceso</th>\r\n                            <th>{\" \"}</th>\r\n                            <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( usuario => (\r\n                                <tr key={usuario.usuario}>\r\n                                    <td>\r\n                                        {usuario.usuario}\r\n                                    </td>\r\n                                    <td>{usuario.nombre}</td>\r\n                                    <td>{usuario.tipo === 1 ? 'Administrador' : 'Chofer'}</td>\r\n                                    <td>{usuario.ultimoAcceso ? dayjs.utc(usuario.ultimoAcceso).format('DD/MM/YY') : \" \"}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(usuario)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(usuario)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogUser;","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Table, Modal,InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogZip = () => {\r\n    const [areas, setAreas] = useState([]);\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let responseA = await fetch(`${config.urlBase}areas/`);\r\n            let areas = await responseA.json();\r\n            setAreas(areas);\r\n            let responseB = await fetch(`${config.urlBase}areasCP/`);\r\n            let zips = await responseB.json();\r\n            setElements(zips);\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}areasCP/eliminar?area=${selectElement.area}&codigoPostal=${selectElement.codigoPostal}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.codigoPostal !== selectElement.codigoPostal));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.area = descripcionAgregarRef.current.value;\r\n        newElement.codigoPostal = codigoAgregarRef.current.value;\r\n        let response = await fetch(`${config.urlBase}areasCP/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Area</InputGroup.Text>\r\n                        <Form.Select aria-label=\"Default select example\" ref={descripcionAgregarRef} >\r\n                            {\r\n                               areas.map(area => <option key={area.area} value={area.area}>{area.descripcion}</option>)\r\n                            }\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text \r\n                            id=\"inputGroup-sizing-sm\">Codigo Postal</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            ref={codigoAgregarRef} \r\n                            maxLength=\"10\"\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.area} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>CODIGOS POSTALES</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo Postal</th>\r\n                        <th>Area</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( zip => (\r\n                                <tr key={zip.codigoPostal}>\r\n                                    <td>\r\n                                        {zip.codigoPostal}\r\n                                    </td>\r\n                                    <td>{areas.map(area => zip.area === area.area ? area.descripcion : \"\")}</td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(zip)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogZip;","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal,InputGroup, FormControl, Form } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogBranch = () => {\r\n    const [elements, setElements] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const clienteRef = useRef(null);\r\n    const sucursalRef = useRef(null);\r\n    const descripcionlRef = useRef(null);\r\n    const direccionRef = useRef(null);\r\n    const numeroExtRef = useRef(null);\r\n    const numeroIntRef = useRef(null);\r\n    const coloniaRef = useRef(null);\r\n    const ciudadRef = useRef(null);\r\n    const estadoRef = useRef(null);\r\n    const codigoPostalRef = useRef(null);\r\n    const contactoRef = useRef(null);\r\n    const conTelefonoRef = useRef(null);\r\n    const conEmailRef = useRef(null);\r\n    const almacenRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`);\r\n            responseB = await responseB.json();\r\n            setElements(responseB.data);\r\n            let responseC = await fetch(`${config.urlBase}clientes/`);\r\n            responseC = await responseC.json();\r\n            setCustomers(responseC);\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setWarehouses(responseW);\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}sucursales/eliminar?sucursal=${selectElement.sucursal}&cliente=${selectElement.cliente}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.sucursal !== selectElement.sucursal));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.cliente = clienteRef.current.value;\r\n        newElement.sucursal = sucursalRef.current.value;\r\n        newElement.descripcion = descripcionlRef.current.value;\r\n        newElement.direccion = direccionRef.current.value;\r\n        newElement.numeroExt = numeroExtRef.current.value;\r\n        newElement.numeroInt = numeroIntRef.current.value;\r\n        newElement.colonia = coloniaRef.current.value;\r\n        newElement.ciudad = ciudadRef.current.value;\r\n        newElement.estado = estadoRef.current.value;\r\n        newElement.codigoPostal = codigoPostalRef.current.value;\r\n        newElement.contacto = contactoRef.current.value;\r\n        newElement.conTelefono = conTelefonoRef.current.value;\r\n        newElement.conEmail = conEmailRef.current.value;\r\n        newElement.almacen = almacenRef.current.value;\r\n        let response = await fetch(`${config.urlBase}sucursales/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.cliente = selectElement.cliente;\r\n        newElement.sucursal = selectElement.sucursal;\r\n        newElement.descripcion = selectElement.descripcion;\r\n        newElement.direccion = selectElement.direccion;\r\n        newElement.numeroExt = selectElement.numeroExt;\r\n        newElement.numeroInt = selectElement.numeroInt;\r\n        newElement.colonia = selectElement.colonia;\r\n        newElement.ciudad = selectElement.ciudad;\r\n        newElement.estado = selectElement.estado;\r\n        newElement.codigoPostal = selectElement.codigoPostal;\r\n        newElement.contacto = selectElement.contacto;\r\n        newElement.conTelefono = selectElement.conTelefono;\r\n        newElement.conEmail = selectElement.conEmail;\r\n        newElement.almacen = selectElement.almacen;\r\n        let response = await fetch(`${config.urlBase}sucursales/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.sucursal === selectElement.sucursal) {\r\n                element.cliente = response.data.cliente;\r\n                element.sucursal = response.data.sucursal;\r\n                element.descripcion = response.data.descripcion;\r\n                element.direccion = response.data.direccion;\r\n                element.numeroExt = response.data.numeroExt;\r\n                element.numeroInt = response.data.numeroInt;\r\n                element.colonia = response.data.colonia;\r\n                element.ciudad = response.data.ciudad;\r\n                element.estado = response.data.estado;\r\n                element.codigoPostal = response.data.codigoPostal;\r\n                element.contacto = response.data.contacto;\r\n                element.conTelefono = response.data.conTelefono;\r\n                element.conEmail = response.data.conEmail;\r\n                element.almacen = response.data.almacen;\r\n            }\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Cliente</InputGroup.Text>\r\n                        <Form.Select aria-label=\"cliente\" ref={clienteRef}>\r\n                            {customers.map(customer => (\r\n                                <option key={customer.cliente} value={customer.cliente}>{customer.razonSocial}</option>\r\n                            ))}\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text \r\n                            id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            ref={sucursalRef} \r\n                            maxLength=\"10\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionlRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Almacen</InputGroup.Text>\r\n                        <Form.Select aria-label=\"cliente\" ref={almacenRef}>\r\n                            {warehouses.map(warehouse => (\r\n                                <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>\r\n                            ))}\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Direccion</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={direccionRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Exterior</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={numeroExtRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Interior</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={numeroIntRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Colonia</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={coloniaRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Ciudad</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={ciudadRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Estado</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={estadoRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo Postal</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={codigoPostalRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Contaco</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={contactoRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Telefono</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={conTelefonoRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Email</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={conEmailRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Cliente</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={customers.map( customer => customer.cliente === selectElement.cliente ? customer.razonSocial : '')}\r\n                            readOnly\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text \r\n                            id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.sucursal}\r\n                            readOnly\r\n                            maxLength=\"10\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.descripcion}\r\n                            onChange={handleEditChange}\r\n                            name=\"descripcion\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl \r\n                                disabled \r\n                                aria-label=\"Almacen\" \r\n                                aria-describedby=\"inputGroup-sizing-sm\" \r\n                                value={warehouses.map( warehouse => warehouse.almacen === selectElement.almacen ? warehouse.descripcion : '')}\r\n                                readOnly\r\n                            />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Direccion</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\"\r\n                            value={selectElement.direccion}\r\n                            onChange={handleEditChange}\r\n                            name=\"direccion\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Exterior</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.numeroExt}\r\n                            onChange={handleEditChange}\r\n                            name=\"numeroExt\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Numero Interior</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.numeroInt}\r\n                            onChange={handleEditChange}\r\n                            name=\"numeroInt\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Colonia</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.colonia}\r\n                            onChange={handleEditChange}\r\n                            name=\"colonia\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Ciudad</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"  \r\n                            maxLength=\"100\"\r\n                            value={selectElement.ciudad}\r\n                            onChange={handleEditChange}\r\n                            name=\"ciudad\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Estado</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.estado}\r\n                            onChange={handleEditChange}\r\n                            name=\"estado\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo Postal</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.codigoPostal}\r\n                            onChange={handleEditChange}\r\n                            name=\"codigoPostal\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Contaco</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.contacto}\r\n                            onChange={handleEditChange}\r\n                            name=\"contacto\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Telefono</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                            maxLength=\"100\"\r\n                            value={selectElement.conTelefono}\r\n                            onChange={handleEditChange}\r\n                            name=\"conTelefono\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Email</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.conEmail}\r\n                            onChange={handleEditChange}\r\n                            maxLength=\"100\"\r\n                            name=\"conEmail\"\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.descripcion} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>SCURSALES</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Sucursal</th>\r\n                        <th>Contacto</th>\r\n                        <th>Telefono</th>\r\n                        <th>{\" \"}</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( branch => (\r\n                                <tr key={branch.sucursal}>\r\n                                    <td>\r\n                                        {branch.sucursal}\r\n                                    </td>\r\n                                    <td>{branch.descripcion}</td>\r\n                                    <td>{branch.contacto}</td>\r\n                                    <td>{branch.conTelefono}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(branch)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(branch)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogBranch;","import toast, { Toaster } from 'react-hot-toast';\r\nimport styled from 'styled-components';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { InputGroup, FormControl, Row, Col, Alert } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogParameters = () => {\r\n    const [parametros, setParametros] = useState({});\r\n    const limiteRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let response = await fetch(`${config.urlBase}parameters/`);\r\n            response = await response.json();\r\n            setParametros(response)\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleChange = async (event) => {\r\n        setParametros({\r\n            ...parametros,\r\n            [event.target.name]:limiteRef.current.value\r\n        })\r\n        if(event.target.name === 'CantidadDevoluciones'){\r\n            let response = await fetch(`${config.urlBase}parameters/update-limit`,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    limite: limiteRef.current.value\r\n                })\r\n            });\r\n            response = await response.json();\r\n            toast.success(response.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                <h1 className=\"mt-5\">PARAMETROS</h1>\r\n                <InputGroup className=\"mb-3 mt-5\">\r\n                    <InputGroup.Text id=\"basic-addon3\">\r\n                        Limite de devoluciones\r\n                    </InputGroup.Text>\r\n                    <FormControl \r\n                        type=\"number\" \r\n                        onChange={e => handleChange(e)} \r\n                        ref={limiteRef} \r\n                        value={parametros.CantidadDevoluciones}\r\n                        name=\"CantidadDevoluciones\"\r\n                    />\r\n                </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Toaster/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogParameters;","import { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Table, Modal,InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 780px;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n    background: transparent;\r\n    color: black;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: #fdd448;\r\n    }\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CatalogZone = () => {\r\n    const [elements, setElements] = useState([]);\r\n    const [selectElement, setSelectElement] = useState({});\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const codigoAgregarRef = useRef(null);\r\n    const descripcionAgregarRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let response = await fetch(`${config.urlBase}zonas/`);\r\n            let zonas = await response.json();\r\n            setElements(zonas)\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleCloseAddModal = () => setShowAddModal(false);\r\n    const handleShowAddModal = () => setShowAddModal(true);\r\n    const handleCloseEditModal = () => setShowEditModal(false);\r\n    const handleShowEditModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowEditModal(true);\r\n    };\r\n    const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n    const handleShowDeleteModal = (element) => {\r\n        setSelectElement(element);\r\n        setShowDeleteModal(true);\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        let response = await fetch(`${config.urlBase}zonas/eliminar?zona=${selectElement.zona}`,{\r\n            method: 'DELETE'\r\n        });\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setElements(elements.filter(element => element.zona !== selectElement.zona));\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        let newElement = {};\r\n        newElement.zona = codigoAgregarRef.current.value;\r\n        newElement.descripcion = descripcionAgregarRef.current.value;\r\n        let response = await fetch(`${config.urlBase}zonas/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        setElements(elements.concat(response.data))\r\n        setShowAddModal(false);\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        setSelectElement({\r\n            ...selectElement,\r\n            descripcion: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEdit = async () => {\r\n        let newElement = {};\r\n        newElement.zona = selectElement.zona;\r\n        newElement.descripcion = selectElement.descripcion;\r\n        newElement.activo = selectElement.activo;\r\n        let response = await fetch(`${config.urlBase}zonas/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newElement)\r\n        });\r\n        response = await response.json();\r\n        let newsElements = elements;\r\n        newsElements.map( element => {\r\n            if (element.zona === selectElement.zona) {\r\n                element.zona = response.data.zona;\r\n                element.descripcion = response.data.descripcion;\r\n            }\r\n            return element\r\n        })\r\n        setElements(newsElements)\r\n        setShowEditModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomButton onClick={handleShowAddModal}>AGREGAR</CustomButton>\r\n            <Modal\r\n                show={showAddModal}\r\n                onHide={handleCloseAddModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>AGREGAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text \r\n                            id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            ref={codigoAgregarRef} \r\n                            maxLength=\"10\"\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl aria-label=\"Descripcion\" aria-describedby=\"inputGroup-sizing-sm\" ref={descripcionAgregarRef} maxLength=\"100\"/>\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleAdd} >AGREGAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseAddModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showEditModal}\r\n                onHide={handleCloseEditModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>EDITAR REGISTRO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Codigo</InputGroup.Text>\r\n                        <FormControl \r\n                            disabled \r\n                            aria-label=\"Codigo\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            value={selectElement.zona}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Descripcion</InputGroup.Text>\r\n                        <FormControl \r\n                            aria-label=\"Descripcion\" \r\n                            aria-describedby=\"inputGroup-sizing-sm\" \r\n                            maxLength=\"100\" \r\n                            value={selectElement.descripcion}\r\n                            onChange={handleEditChange}\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleEdit} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseEditModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal\r\n                show={showDeleteModal}\r\n                onHide={handleCloseDeleteModal}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¡CONFIRMACION NECESARIA!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {`Al precionar aceptar, el registro ${selectElement.zona} será elminado permanentemente, ¿desea continuar?`}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton onClick={handleDelete} >ACEPTAR</CustomButton>\r\n                    <CustomButtonOutline onClick={handleCloseDeleteModal}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <TableContainer>\r\n                <h3>ZONAS</h3>\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Codigo</th>\r\n                        <th>Descripcion</th>\r\n                        <th>{\" \"}</th>\r\n                        <th>{\" \"}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            elements.length > 0 && elements.map( zona => (\r\n                                <tr key={zona.zona}>\r\n                                    <td>\r\n                                        {zona.zona}\r\n                                    </td>\r\n                                    <td>{zona.descripcion}</td>\r\n                                    <td>\r\n                                        <EditButton onClick={()=>handleShowEditModal(zona)}>\r\n                                            <EditIcon />\r\n                                        </EditButton>\r\n                                    </td>\r\n                                    <td>\r\n                                        <DeleteButton onClick={()=>handleShowDeleteModal(zona)}>\r\n                                            <DeleteIcon />\r\n                                        </DeleteButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                {\r\n                    elements.length === 0 && <h1>No hay datos por mostrar</h1>\r\n                }\r\n            </TableContainer>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CatalogZone;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Layout from \"../components/Layout\";\r\nimport CatalogWarehouse from '../components/CatalogWarehouse';\r\nimport CatalogArea from '../components/CatalogArea';\r\nimport CatalogDriver from '../components/CatalogDriver';\r\nimport CatalogCustomer from '../components/CatalogCustomer';\r\nimport CatalogUser from '../components/CatalogUser';\r\nimport CatalogZip from '../components/CatalogZip';\r\nimport CatalogBranch from '../components/CatalogBranch';\r\nimport CatalogParameters from '../components/CatalogParameters';\r\nimport CatalogZone from '../components/CatalogZone';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n    width: 90vw;\r\n\r\n    overflow-x: scroll;\r\n    ::-webkit-scrollbar {display: none;}\r\n`;\r\n\r\nconst NavApp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-contetn: space-around;\r\n`;\r\n\r\nconst NavElement = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: ${props => props.isActive ? \"bold;\" : \"initial;\"}\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst catalogos = [\r\n    {id:1,tittle:'ALMACENES',value:'ALMACENES'},\r\n    {id:2,tittle:'ZONAS',value:'ZONAS'}, \r\n    {id:3,tittle:'AREAS',value:'AREAS'},\r\n    {id:4,tittle:'CODIGOS POSTALES',value:'CP'}, \r\n    {id:5,tittle:'CHOFERES',value:'CHOFERES'}, \r\n    {id:6,tittle:'CLIENTES',value:'CLIENTES'}, \r\n    {id:7,tittle:'SUCURSALES',value:'SUCURSALES'}, \r\n    {id:8,tittle:'USUARIOS',value:'USUARIOS'}, \r\n    {id:9,tittle:'PARAMETROS',value:'PARAMETROS'}\r\n];\r\n\r\nconst opciones = {};\r\nopciones[\"ALMACENES\"] = <CatalogWarehouse />\r\nopciones[\"ZONAS\"] = <CatalogZone />\r\nopciones[\"AREAS\"] = <CatalogArea />\r\nopciones[\"CP\"] = <CatalogZip />\r\nopciones[\"CHOFERES\"] = <CatalogDriver />\r\nopciones[\"CLIENTES\"] = <CatalogCustomer />\r\nopciones[\"SUCURSALES\"] = <CatalogBranch />\r\nopciones[\"USUARIOS\"] = <CatalogUser />\r\nopciones[\"PARAMETROS\"] = <CatalogParameters />\r\n\r\nconst Catalogs = () => {\r\n\r\n    const [option, setOption] = useState(\"ALMACENES\");\r\n\r\n    const handleOption = (event) => {\r\n        setOption(event.target.name)\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>CATALAGOS</Tittle>\r\n                </Box>\r\n                <NavContainer>\r\n                    <NavApp>\r\n                        {\r\n                            catalogos.map(\r\n                                catalogo => (\r\n                                    <NavElement \r\n                                        key={catalogo.id} \r\n                                        name={catalogo.value} \r\n                                        isActive={catalogo.value === option ? true : false}\r\n                                        onClick={handleOption}\r\n                                    >\r\n                                        {catalogo.tittle}\r\n                                    </NavElement>\r\n                                )\r\n                            )\r\n                        }\r\n                    </NavApp>\r\n                </NavContainer>\r\n                {opciones[option]}\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Catalogs;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { Table, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'fecha'},\r\n    {id: 2, description: 'guia'},\r\n    {id: 3, description: 'recibio'},\r\n    {id: 4, description: 'chofer'},\r\n    {id: 5, description: 'estatus'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst GuideDelivered = () => {\r\n    let fecha = new Date();\r\n    const [guides, setGuides] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [selectedInitDate, setSelectedInitDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const [selectedFinDate, setSelectedFinDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const dateIniRef = useRef(null);\r\n    const dateFiniRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guias/entregadas?fechaIni=${selectedInitDate}&fechaFin=${selectedFinDate}`);\r\n            response = await response.json();\r\n            setGuides(response.data);\r\n            let responseD = await fetch(`${config.urlBase}choferes/`);\r\n            responseD = await responseD.json();\r\n            setDrivers(responseD);\r\n        }\r\n        fetchOrders()\r\n    },[selectedInitDate,selectedFinDate]);\r\n\r\n    const handleChangeDate = async (event) => {\r\n        let dateIni = new Date(dateIniRef.current.value)\r\n        dateIni.setDate(dateIni.getDate()+1)\r\n        let dateFin = new Date(dateFiniRef.current.value)\r\n        dateFin.setDate(dateFin.getDate()+1)\r\n        if (event.target.name === 'iniFecha') {\r\n            setSelectedInitDate(dayjs.utc(dateIni).local().format('YYYY-MM-DD'))   \r\n        }\r\n        if (event.target.name === 'finFecha') {\r\n            setSelectedFinDate(dayjs.utc(dateFin).local().format('YYYY-MM-DD'))\r\n        }\r\n        let response = await fetch(`${config.urlBase}guias/consulta/guias/entregadas?fechaIni=${dateIni}&fechaFin=${dateFin}`);\r\n        response = await response.json();\r\n        setGuides(response.data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Inicial</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateIniRef}\r\n                            value={selectedInitDate}\r\n                            name=\"iniFecha\"\r\n                            max={selectedFinDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Final</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateFiniRef}\r\n                            value={selectedFinDate}\r\n                            name=\"finFecha\"\r\n                            min={selectedInitDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            {\r\n                guides.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                guides.length > 0 && \r\n                (\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    {headers.map(header => (\r\n                                        <th key={header.id}>{header.description}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {guides.map(guide => (\r\n                                    <tr key={guide.guia}>\r\n                                        <td>\r\n                                            {dayjs.utc(guide.RecibeFecha).local().format('DD/MM/YYYY HH:mm')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.guia}\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.RecibePersona}\r\n                                        </td>\r\n                                        <td>\r\n                                            {drivers.map(driver => guide.choferEntrega === driver.chofer ? driver.nombre : \"\") }\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.estatus}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )\r\n            }\r\n        </>\r\n        )\r\n};\r\n\r\nexport default GuideDelivered;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useReducer, useRef } from 'react';\r\nimport { Table, Modal, Form } from 'react-bootstrap';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'fecha'},\r\n    {id: 2, description: 'guia'},\r\n    {id: 3, description: 'chofer'},\r\n    {id: 4, description: 'estatus'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst BoxTwo = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst BtnAssign = styled.button`\r\n    display: flex;\r\n    width: 200px;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    background-color: #fdd448;\r\n    color: white;\r\n    border: none;\r\n    padding: 5px;\r\n\r\n    &:active {\r\n        background-color: #d6b43e;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        width: 300px;\r\n        margin: 0 auto;\r\n    }\r\n    @media (max-width: 320px) {\r\n        width: 270px;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\nconst TextBtn = styled.p`\r\n    margin: 0;\r\n`;\r\n\r\nconst Display = styled.div`\r\n    border: solid 1.5px black;\r\n    height: 100px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst initialState = {\r\n    markedOrders: 0,\r\n    selectedOrders: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedOrders: state.markedOrders+1,\r\n                selectedOrders: state.selectedOrders.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedOrders: state.markedOrders-1,\r\n                selectedOrders: state.selectedOrders.filter(selectedOrder => selectedOrder.orden !== action.payload.orden)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedOrders: action.payload.length,\r\n                selectedOrders: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedOrders: 0,\r\n                selectedOrders: []\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst GuideInTransit = () => {\r\n    const [guides, setGuides] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n    const [assignShow, setAssignShow] = useState(false);\r\n    const [almacenes,setAlmacenes] = useState([]);\r\n    const almacenRef = useRef(null);\r\n\r\n    //TODO: Que solo vengan guias ligadas a almacen ligado a usuario.\r\n  \r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guias/entransito`);\r\n            response = await response.json();\r\n            setGuides(response.data);\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setAlmacenes(responseW);\r\n            let responseD = await fetch(`${config.urlBase}choferes/`);\r\n            responseD = await responseD.json();\r\n            setDrivers(responseD);\r\n        }\r\n\r\n        fetchOrders()\r\n    },[]);\r\n\r\n    const handleAssignClose = () => setAssignShow(false);\r\n    const handleAssignShow = () => setAssignShow(true);\r\n\r\n    const handleChange = (event, order) => {\r\n        if (event.target.checked) {\r\n            dispach({type: \"add_one\", payload: order})\r\n        } else {\r\n            dispach({type: \"substract_one\", payload: order})\r\n        }\r\n    };\r\n    \r\n    const handleAllChange = (event, orders) => {\r\n        if (event.target.checked) {\r\n            dispach({type: \"add_all\", payload: orders})\r\n        } else {\r\n            dispach({type: \"substract_all\"})\r\n        }\r\n    };\r\n\r\n    const handlingUnassignment = async () => {\r\n        let promises = state.selectedOrders.map(sO => fetch(`${config.urlBase}guias/desasignar`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                guia: sO.guia\r\n            })\r\n        }))\r\n        let responses = await Promise.all(promises);\r\n        console.log(responses)\r\n        let newOrders = guides;\r\n        dispach({type: \"substract_all\"})\r\n        state.selectedOrders.map(selectedOrder => newOrders = newOrders.filter(order => order.guia !== selectedOrder.guia))\r\n        setGuides(newOrders);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {state.markedOrders > 0 &&\r\n                <BoxTwo>\r\n                    <BtnAssign onClick={handleAssignShow}>\r\n                        <PersonAddDisabledIcon />\r\n                        <TextBtn>DESASIGNAR</TextBtn>\r\n                    </BtnAssign>\r\n                    <Modal show={assignShow} onHide={handleAssignClose} backdrop=\"static\">\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title>DESHACER ASIGNACION DE CHOFER</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Group className=\"mb-3\" >\r\n                                    <Form.Label>Ordenes que seran marcadas como nuevas:</Form.Label>\r\n                                    <Display>\r\n                                        <ul>\r\n                                            {state.selectedOrders.map(selectedOrder => <li key={selectedOrder.guia}>{selectedOrder.guia}</li>)}\r\n                                        </ul>\r\n                                    </Display>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <CustomButtonOutline onClick={handleAssignClose}>\r\n                            CERRAR\r\n                        </CustomButtonOutline>\r\n                        <CustomButton onClick={handlingUnassignment}>\r\n                            DESASIGNAR\r\n                        </CustomButton>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </BoxTwo>\r\n            }\r\n            {\r\n                guides.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                guides.length > 0 && \r\n                (\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                    {state.markedOrders > 0 && <small style={{marginRight: 10 + 'px'}}>{state.markedOrders}</small>}\r\n                                        <input type=\"checkbox\" onChange={(event) => handleAllChange(event,guides)} />\r\n                                    </th>\r\n                                    {headers.map(header => (\r\n                                        <th key={header.id}>{header.description}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {guides.map(guide => (\r\n                                    <tr key={guide.guia}>\r\n                                        <td>\r\n                                            <input type=\"checkbox\" checked={state.selectedOrders.includes(guide)} onChange={(event) => handleChange(event, guide)} name={guide.guia}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            {dayjs.utc(guide.FechaEntregaChofer).format('DD/MM/YYYY HH:mm a')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.guia}\r\n                                        </td>\r\n                                        <td>\r\n                                            {drivers.map(driver => guide.choferEntrega === driver.chofer ? driver.nombre : \"\") }\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.estatus}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )\r\n            }\r\n        </>\r\n        )\r\n};\r\n\r\nexport default GuideInTransit;","import dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useState, useRef, useEffect, useReducer } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport { Table, Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport config from '../config';\r\n\r\ndayjs.extend(utc)\r\n\r\nconst headers = [\r\n    {id:0, description: 'posicion'},\r\n    {id: 1, description: 'entrada a almacen'},\r\n    {id: 2, description: 'guia'},\r\n    {id: 3, description: 'codigo postal'},\r\n    {id: 4, description: 'estatus'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n    width: 60%;\r\n`;\r\n\r\nconst TableContainerTwo = styled.div`\r\n    height: 300px;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n`;\r\n\r\nconst PrintButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst AssignContainer = styled.div`\r\n    position: relative;\r\n    top: -170px;\r\n    width: 30%;\r\n    height: 300px;\r\n    padding: 10px;\r\n    text-align: center;\r\n`;\r\n\r\nconst RowSelected = styled.tr`\r\n    background-color: #ddffba\r\n`;\r\n\r\nconst OptionsButtons = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\n\r\nconst initialState = {\r\n    markedGuides: 0,\r\n    selectedGuides: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedGuides: state.markedGuides+1,\r\n                selectedGuides: state.selectedGuides.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedGuides: state.markedGuides-1,\r\n                selectedGuides: state.selectedGuides.filter(selectedGuide => selectedGuide.guia !== action.payload.guia)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedGuides: action.payload.length,\r\n                selectedGuides: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedGuides: 0,\r\n                selectedGuides: []\r\n            }\r\n        case \"reorder\":\r\n            return {\r\n                ...state,\r\n                selectedGuides: action.payload\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = [...list];\r\n    const [removed] = result.splice(startIndex,1);\r\n    result.splice(endIndex,0,removed);\r\n    return result;\r\n} \r\n\r\nconst zones = [\r\n    {zona: 'Z01', descripcion: 'Monterrey'},\r\n    {zona: 'Z02', descripcion: 'Guadalupe'},\r\n    {zona: 'Z03', descripcion: 'Escobedo'},\r\n    {zona: 'Z04', descripcion: 'Apodaca'}\r\n]\r\n\r\nconst GuideInWarehouse = () => {\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n    const [areas,setAreas] = useState([]);\r\n    const [guias,setGuias] = useState([]);\r\n    const [almacenes,setAlmacenes] = useState([]);\r\n    const [choferes,setChoferes] = useState([]);\r\n    const [guiasChofer,setGuiasChofer] = useState([]);\r\n    const [selectedGuide, setSelectedGuide] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const choferRef = useRef(null);\r\n    const posicionRef = useRef(null);\r\n    const almacenRef = useRef(null);\r\n\r\n    const handleClose = () => setShow(false);\r\n    \r\n    const handleShow = async (element) => {\r\n        if(state.selectedGuides.includes(element)) {\r\n            dispach({type: \"substract_one\", payload: element})\r\n        } else {\r\n            dispach({type: \"add_one\", payload: element})\r\n        }\r\n    };\r\n\r\n    const handleChangeDriver = async () => {\r\n        let assignedGuides = await fetch(`${config.urlBase}guias/consulta/guias/chofer?chofer=${choferRef.current.value}&fecha=${dayjs.utc().format('YYYY-MM-DD')}`)\r\n        assignedGuides = await assignedGuides.json();\r\n        setGuiasChofer(assignedGuides.data);\r\n    };\r\n\r\n    const handleAssignmentGuide = async () => {\r\n        let requests = state.selectedGuides.map((selectedGuide, index) => fetch(`${config.urlBase}guias/asignada`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                guia: selectedGuide.guia,\r\n                chofer: choferRef.current.value,\r\n                fecha: dayjs.utc().local().format('YYYY-MM-DDTHH:mm:ss'),\r\n                posicion: index+1\r\n            })\r\n        }));\r\n        let responses = await Promise.all(requests);\r\n        console.log(responses)\r\n        let newGuides = guias;\r\n        dispach({type: \"substract_all\"})\r\n        state.selectedGuides.map(selectedGuide => newGuides = newGuides.filter(guide => guide.guia !== selectedGuide.guia));\r\n        setGuias(newGuides);\r\n        handleClose();\r\n    };\r\n\r\n    const handleUnselectGuide = (event, element) => {\r\n        dispach({type: \"substract_one\", payload: element})\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let responseA = await fetch(`${config.urlBase}areas/`)\r\n            responseA = await responseA.json()\r\n            setAreas(responseA)\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setAlmacenes(responseW);\r\n            let responseD = await fetch(`${config.urlBase}choferes/`);\r\n            responseD = await responseD.json();\r\n            setChoferes(responseD);\r\n            let responseG = await fetch(`${config.urlBase}guias/consulta/reporte/guiasxarea/${responseW[0].almacen}`)\r\n            responseG = await responseG.json()\r\n            setGuias(responseG.data[0])\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handlePrint = () => {\r\n        let contenedor = document.getElementById('contenedor-print').innerHTML\r\n        let w = window.open();\r\n        w.document.write('<html><head>');\r\n        w.document.write('<style>table{width:100%;border-collapse:collapse;margin:16px 0 16px 0;}table th{border:1px solid #ddd;padding:4px;background-color:#d4eefd;text-align:left;font-size:15px;}table td{border:1px solid #ddd;text-align:left;padding:6px;}</style>');\r\n        w.document.write('</head><body >')\r\n        w.document.write(contenedor);\r\n        w.document.write('</body></html>');\r\n        w.document.close(); // necessary for IE >= 10\r\n        w.focus(); // necessary for IE >= 10\r\n\t\tw.print();\r\n\t\tw.close();\r\n        return true;\r\n    }\r\n\r\n    const handleChangeWarehouse = async () => {\r\n        let newGuidesList = await fetch(`${config.urlBase}guias/consulta/reporte/guiasxarea/${almacenRef.current.value}`)\r\n        newGuidesList = await newGuidesList.json();\r\n        setGuias(newGuidesList.data[0]);\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={result => {\r\n                const {source, destination} = result;\r\n                if (!destination) {\r\n                    return;\r\n                }\r\n                if (source.index === destination.index && source.droppableId === destination.droppableId) {\r\n                    return;\r\n                }\r\n                let element = reorder(state.selectedGuides,source.index,destination.index)\r\n                dispach({type: \"reorder\", payload: element})\r\n            }}\r\n        >  \r\n            <Row>\r\n                <Col xs={3}>\r\n                <p>Almacen:</p>\r\n                <Form.Select ref={almacenRef} onChange={handleChangeWarehouse}>\r\n                    {\r\n                        almacenes.map(almacen => <option key={almacen.almacen} value={almacen.almacen}>{almacen.descripcion}</option>)\r\n                    }\r\n                </Form.Select>\r\n                <p></p>\r\n                <OptionsButtons>\r\n                    <PrintButton onClick={handlePrint}><PrintIcon />{' '}IMPRIMIR</PrintButton>\r\n                </OptionsButtons>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                guias.length === 0 &&\r\n                <h4>No se encontraron registros</h4>\r\n            }\r\n            {\r\n                guias.length > 0 &&                            \r\n                <div style={{display: 'flex', justifyContent: 'space-around', padding: \"20px\"}}>\r\n                    <TableContainer id=\"contenedor-print\">\r\n                        {\r\n                            zones.map(zone => {\r\n                                let areasInZone = areas.filter(area => area.zona === zone.zona);\r\n                                let guidesInZone = guias.filter(guia => guia.zona === zone.zona);\r\n                                if (areasInZone.length > 0 && guidesInZone.length > 0) {\r\n                                    return (\r\n                                        <div key={zone.zona}>\r\n                                            <h4>{zone.zona}: {zone.descripcion}</h4>\r\n                                            {areasInZone.map(area => {\r\n                                                let guidesInArea = guias.filter(guia => guia.area === area.area)\r\n                                                if(guidesInArea.length > 0){\r\n                                                    return (\r\n                                                        <div key={`head-${area.area}`} >\r\n                                                            <h5>{area.area}: {area.descripcion}</h5>\r\n                                                            <Table hover responsive striped bordered>\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        {headers.map(header => (\r\n                                                                            <th key={header.id}>{header.description}</th>\r\n                                                                        ))}\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {guias.map(guia => {\r\n                                                                        if (area.area === guia.area) {                                                    \r\n                                                                                if(state.selectedGuides.includes(guia)) {\r\n                                                                                    return (\r\n                                                                                        <RowSelected key={guia.guia} onClick={() => handleShow(guia)}>\r\n                                                                                            <td>\r\n                                                                                                {state.selectedGuides.includes(guia) && state.selectedGuides.indexOf(guia)+1}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {dayjs.utc(guia.fechaEntregaAlmacen).format('DD/MM/YYYY HH:mm a')}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {guia.guia}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {guia.codigoPostal}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {guia.estatus}\r\n                                                                                            </td>\r\n                                                                                        </RowSelected>\r\n                                                                                    ) \r\n                                                                                }else {\r\n                                                                                    return (\r\n                                                                                        <tr key={guia.guia} onClick={() => handleShow(guia)}>\r\n                                                                                            <td>\r\n                                                                                                {state.selectedGuides.includes(guia) && state.selectedGuides.indexOf(guia)+1}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {dayjs.utc(guia.fechaEntregaAlmacen).format('DD/MM/YYYY HH:mm a')}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {guia.guia}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {guia.codigoPostal}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {guia.estatus}\r\n                                                                                            </td>\r\n                                                                                        </tr>\r\n                                                                                    ) \r\n                                                                                }\r\n                                                                        }\r\n                                                                        return \r\n                                                                    })}\r\n                                                                </tbody>\r\n                                                            </Table>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                return \r\n                                            })}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return <></>\r\n                            })\r\n                        }\r\n                    </TableContainer>\r\n                    <AssignContainer>\r\n                        {\r\n                            state.selectedGuides.length > 0 &&\r\n                            <CustomButton variant=\"primary\" onClick={handleAssignmentGuide}>\r\n                                ASIGNAR\r\n                            </CustomButton>\r\n                        }\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label><strong>CHOFER:</strong></Form.Label>\r\n                            <Form.Select ref={choferRef} onChange={handleChangeDriver}>\r\n                                {choferes.map(chofer => <option key={chofer.chofer} value={chofer.chofer}>{chofer.nombre}</option>)}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <TableContainerTwo>\r\n                            <Table hover responsive striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            posicion\r\n                                        </th>\r\n                                        <th>\r\n                                            guia\r\n                                        </th>\r\n                                        <th>\r\n                                            CP\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <Droppable droppableId=\"choferGuias\">\r\n                                {(droppableProvider) => (\r\n                                    <tbody \r\n                                        {...droppableProvider.droppableProps}\r\n                                        ref={droppableProvider.innerRef}\r\n                                    >\r\n                                        {\r\n                                            state.selectedGuides.map((guide,index) => (\r\n                                                <Draggable key={guide.guia} draggableId={guide.guia} index={index}>\r\n                                                    {\r\n                                                        (draggableProvider) => (\r\n                                                            <tr\r\n                                                                {...draggableProvider.draggableProps}\r\n                                                                ref={draggableProvider.innerRef}\r\n                                                                {...draggableProvider.dragHandleProps}\r\n                                                                onClick={(e) => handleUnselectGuide(e,guide)}\r\n                                                            >\r\n                                                                <td>\r\n                                                                    {index+1}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {guide.guia}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {guide.codigoPostal}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                </Draggable>\r\n                                            ))\r\n                                        }\r\n                                        {droppableProvider.placeholder}\r\n                                    </tbody>\r\n                                )}\r\n                                </Droppable>\r\n                            </Table>\r\n                        </TableContainerTwo>\r\n                    </AssignContainer>\r\n                </div>\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                fullscreen\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>ASIGNACION DE GUIA</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Chofer:</Form.Label>\r\n                    <Form.Select ref={choferRef} onChange={handleChangeDriver}>\r\n                        {choferes.map(chofer => <option key={chofer.chofer} value={chofer.chofer}>{chofer.nombre}</option>)}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Row className=\"mb-3\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Guia por asignar:</Form.Label>\r\n                        <Form.Control readOnly value={selectedGuide.guia} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Posicion:</Form.Label>\r\n                        <Form.Control type=\"number\" min={0} ref={posicionRef}/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Form.Group>\r\n                    <Form.Label>Guias asignadas:</Form.Label>\r\n                    {\r\n                        guiasChofer.length > 0 &&\r\n                        <div id=\"tabla-sorteable-chofer\">\r\n                            <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan=\"2\">Guia</th>\r\n                                    <th>Posicion</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    guiasChofer.map(guiaChofer => (        \r\n                                        <tr key={guiaChofer.guia}>\r\n                                            <td colSpan=\"2\">{guiaChofer.guia}</td>\r\n                                            <td>{guiaChofer.posicion}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        guiasChofer.length === 0 &&\r\n                        <h6>Aun no cuenta con guias asignadas.</h6>\r\n                    }\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <CustomButton variant=\"primary\" onClick={handleAssignmentGuide}>\r\n                        ASIGNAR\r\n                    </CustomButton>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleClose}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </DragDropContext>\r\n    )\r\n};\r\n\r\nexport default GuideInWarehouse;","import dayjs from 'dayjs';\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { InputGroup, FormControl, Button, Form, Row, Col, Modal, Table, FloatingLabel  } from \"react-bootstrap\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport config from '../config';\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst GuideRegistration = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [guide, setGuide] = useState({});\r\n    const [guides, setGuides] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [driver, setDriver] = useState({});\r\n    const guiaRef = useRef(null);\r\n    const choferRef = useRef(null);\r\n\r\n    const handleEditChange = (event) => {\r\n        setGuide({\r\n            ...guide,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleEnter = async (event) => {\r\n        if(event.key === \"Enter\") {\r\n            if(guiaRef.current.value === \"\") return;\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guia?guia=${guiaRef.current.value}`);\r\n            response = await response.json();\r\n            response = response.data\r\n            if(!response || response.estatus !== 'Recolectada') {\r\n                toast.error('Guia no marcada como recolectada');\r\n            } else {\r\n                response = {\r\n                    ...response,\r\n                    fechaEntregaAlmacen: dayjs().local().format('YYYY-MM-DDTHH:mm:ss')\r\n                }\r\n                setGuide(response);\r\n                handleShow();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        if(guiaRef.current.value === \"\") return\r\n        let response = await fetch(`${config.urlBase}guias/consulta/guia?guia=${guiaRef.current.value}`);\r\n        response = await response.json();\r\n        response = response.data\r\n        if(!response || response.estatus !== 'Recolectada') {\r\n            toast.error('Guia no marcada como recolectada');\r\n        } else {\r\n            response = {\r\n                ...response,\r\n                fechaEntregaAlmacen: dayjs().local().format('YYYY-MM-DDTHH:mm:ss')\r\n            }\r\n            setGuide(response);\r\n            handleShow();\r\n        }\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        guiaRef.current.value = \"\";\r\n        handleClose();\r\n    };\r\n\r\n    const handleRegistry = async () => {\r\n        let response = await fetch(`${config.urlBase}guias/almacen`,{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(guide)\r\n        });\r\n        response = await response.json();\r\n        guiaRef.current.value = \"\";\r\n        setGuides(guides.filter(guia => guia.guia !== guide.guia))\r\n        handleClose();\r\n        toast.success(response.message)\r\n    };\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleChangeDriver = () => {\r\n        setDriver(choferRef.current.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let choferes = await fetch(`${config.urlBase}choferes/`);\r\n            choferes = await choferes.json();\r\n            setDrivers(choferes);\r\n            setDriver(choferes[0].chofer);\r\n            let guias = await fetch(`${config.urlBase}guias/consulta/guias/recolectadas-all`);\r\n            guias = await guias.json();\r\n            guias = guias.data;\r\n            setGuides(guias);\r\n            let ordenes = await fetch(`${config.urlBase}ordenes/recolectadas/all`);\r\n            ordenes = await ordenes.json();\r\n            ordenes = ordenes.data;\r\n            setOrders(ordenes)\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col xs={6}>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"basic-addon1\"># Guia</InputGroup.Text>\r\n                    <FormControl\r\n                        aria-label=\"Guia\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        autoFocus\r\n                        ref={guiaRef}\r\n                        onKeyUp={handleEnter}\r\n                    />\r\n                    <Button variant=\"outline-secondary\" id=\"button-addon2\" className=\"d-sm-none\">\r\n                        <CropFreeIcon /> \r\n                        <small>ESCANEAR</small>\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={handleClick} className=\"d-none d-sm-block\">\r\n                        <CheckIcon /> \r\n                        <small>REGISTRAR</small>\r\n                    </Button>\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                <FloatingLabel controlId=\"floatingSelect\" label=\"CHOFER\">\r\n                    <Form.Select aria-label=\"Default select example\" ref={choferRef} onChange={handleChangeDriver}>\r\n                        {drivers.map(driver => <option value={driver.chofer}>{driver.nombre}</option>)}\r\n                    </Form.Select>\r\n                </FloatingLabel>\r\n                <Table responsive striped bordered className=\"mt-4\">\r\n                    {orders.map( order => {\r\n                        if (order.choferRecoleccion === driver) {\r\n                            return (\r\n                                <>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>orden {order.orden}</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        guides.map(guide => {\r\n                                            if (guide.orden === order.orden) {\r\n                                                return (\r\n                                                    <tr key={guide.guia}>\r\n                                                        <td>\r\n                                                            {guide.guia}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {guide.estatus}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            } else {\r\n                                                return <></>\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                                </>\r\n                            )\r\n                        } else {\r\n                            return <></>\r\n                        }\r\n                    })}\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>ENTRADA DE GUIA A ALMACEN</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form>\r\n            <Row>\r\n                <Col xs={3}>\r\n                    <Form.Label>Orden</Form.Label>\r\n                    <Form.Control readOnly value={guide.orden}/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Guia</Form.Label>\r\n                    <Form.Control readOnly value={guide.guia}/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label># De Pedido</Form.Label>\r\n                    <Form.Control value={guide.numeroPedido || \"\"} onChange={handleEditChange} name=\"numeroPedido\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Nombre del cliente</Form.Label>\r\n                    <Form.Control value={guide.nombreClienteFinal || \"\"} onChange={handleEditChange} name=\"nombreClienteFinal\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Calle</Form.Label>\r\n                    <Form.Control value={guide.direccion || \"\"} onChange={handleEditChange} name=\"direccion\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Numero Exterior</Form.Label>\r\n                    <Form.Control value={guide.numeroExt || \"\"} onChange={handleEditChange} name=\"numeroExt\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Numero Interior</Form.Label>\r\n                    <Form.Control value={guide.numeroInt || \"\"} onChange={handleEditChange} name=\"numeroInt\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Codigo Postal</Form.Label>\r\n                    <Form.Control value={guide.codigoPostal || \"\"} onChange={handleEditChange} name=\"codigoPostal\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Referencias de ubicacion</Form.Label>\r\n                    <Form.Control value={guide.referencias || \"\"} onChange={handleEditChange} name=\"referencias\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Colonia</Form.Label>\r\n                    <Form.Control value={guide.colonia || \"\"} onChange={handleEditChange} name=\"colonia\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Telefono</Form.Label>\r\n                    <Form.Control value={guide.telefono || \"\"} onChange={handleEditChange} name=\"telefono\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Estado</Form.Label>\r\n                    <Form.Control value={guide.estado || \"\"} onChange={handleEditChange} name=\"estado\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Ciudad</Form.Label>\r\n                    <Form.Control value={guide.ciudad || \"\"} onChange={handleEditChange} name=\"ciudad\"/>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CustomButtonOutline variant=\"secondary\" onClick={handleModalClose}>\r\n            CANCELAR\r\n          </CustomButtonOutline>\r\n          <CustomButton variant=\"primary\" onClick={handleRegistry}>REGISTRAR</CustomButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Toaster />\r\n      </>\r\n    )\r\n};\r\n\r\nexport default GuideRegistration;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { Table, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'fecha'},\r\n    {id: 2, description: 'guia'},\r\n    {id: 3, description: 'recibio'},\r\n    {id: 4, description: 'chofer'},\r\n    {id: 5, description: 'estatus'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst GuideReturned = () => {\r\n    let fecha = new Date();\r\n    const [guides, setGuides] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [selectedInitDate, setSelectedInitDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const [selectedFinDate, setSelectedFinDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const dateIniRef = useRef(null);\r\n    const dateFiniRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guias/devolucion-final?fechaIni=${selectedInitDate}&fechaFin=${selectedFinDate}`);\r\n            response = await response.json();\r\n            setGuides(response.data);\r\n            let responseD = await fetch(`${config.urlBase}choferes/`);\r\n            responseD = await responseD.json();\r\n            setDrivers(responseD);\r\n        }\r\n        fetchOrders()\r\n    },[selectedInitDate,selectedFinDate]);\r\n\r\n    const handleChangeDate = async (event) => {\r\n        let dateIni = new Date(dateIniRef.current.value)\r\n        dateIni.setDate(dateIni.getDate()+1)\r\n        let dateFin = new Date(dateFiniRef.current.value)\r\n        dateFin.setDate(dateFin.getDate()+1)\r\n        if (event.target.name === 'iniFecha') {\r\n            setSelectedInitDate(dayjs.utc(dateIni).local().format('YYYY-MM-DD'))   \r\n        }\r\n        if (event.target.name === 'finFecha') {\r\n            setSelectedFinDate(dayjs.utc(dateFin).local().format('YYYY-MM-DD'))\r\n        }\r\n        let response = await fetch(`${config.urlBase}guias/consulta/guias/devolucion-final?fechaIni=${dateIni}&fechaFin=${dateFin}`);\r\n        response = await response.json();\r\n        setGuides(response.data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Inicial</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateIniRef}\r\n                            value={selectedInitDate}\r\n                            name=\"iniFecha\"\r\n                            max={selectedFinDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Final</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateFiniRef}\r\n                            value={selectedFinDate}\r\n                            name=\"finFecha\"\r\n                            min={selectedInitDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            {\r\n                guides.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                guides.length > 0 && \r\n                (\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    {headers.map(header => (\r\n                                        <th key={header.id}>{header.description}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {guides.map(guide => (\r\n                                    <tr key={guide.guia}>\r\n                                        <td>\r\n                                            {dayjs.utc(guide.RecibeFecha).local().format('DD/MM/YYYY HH:mm')}\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.guia}\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.RecibePersona}\r\n                                        </td>\r\n                                        <td>\r\n                                            {drivers.map(driver => guide.choferEntrega === driver.chofer ? driver.nombre : \"\") }\r\n                                        </td>\r\n                                        <td>\r\n                                            {guide.estatus}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )\r\n            }\r\n        </>\r\n        )\r\n};\r\n\r\nexport default GuideReturned;","import { useRef, useState, useEffect } from \"react\";\r\nimport { InputGroup, FormControl, Button, Row, Col, Table, Modal } from \"react-bootstrap\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport config from '../config';\r\n\r\nconst GuideReturnRegistration = () => {\r\n    let guide;\r\n    const [guidesReturn, setGuidesReturn] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const guiaRef = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleEnter = async (event) => {\r\n        if(event.key === \"Enter\") {\r\n            if(guiaRef.current.value === \"\") return;\r\n            guide = await fetch(`${config.urlBase}guias/consulta/guia?guia=${guiaRef.current.value}`);\r\n            guide = await guide.json();\r\n            guide = guide.data;\r\n            if(!guide || guide.estatus !== 'Devuelta a Chofer') {\r\n                toast.error('Guia no marcada como devolucion');\r\n            } else {\r\n                handleShow()\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleReturnToWarehouse = async () => {\r\n        guide = await fetch(`${config.urlBase}guias/consulta/guia?guia=${guiaRef.current.value}`);\r\n        guide = await guide.json();\r\n        guide = guide.data;\r\n        let responseReturn = await fetch(`${config.urlBase}guias/almacen-devolucion`,{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({\r\n                  orden: guide.orden,\r\n                  guia: guide.guia\r\n              })\r\n        });\r\n        responseReturn = await responseReturn.json();\r\n        setGuidesReturn(guidesReturn.filter(g => g.guia !== guiaRef.current.value))\r\n        guiaRef.current.value = \"\";\r\n        toast.success(responseReturn.message);\r\n        setShow(false)\r\n    }\r\n\r\n    const handleReturnToCustomer = async () => {\r\n        guide = await fetch(`${config.urlBase}guias/consulta/guia?guia=${guiaRef.current.value}`);\r\n        guide = await guide.json();\r\n        guide = guide.data;\r\n        let responseReturn = await fetch(`${config.urlBase}guias/almacen-devolucion-directa`,{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({\r\n                  guia: guide.guia\r\n              })\r\n        });\r\n        responseReturn = await responseReturn.json();\r\n        setGuidesReturn(guidesReturn.filter(g => g.guia !== guiaRef.current.value))\r\n        guiaRef.current.value = \"\";\r\n        toast.success(responseReturn.message);\r\n        setShow(false)\r\n    }\r\n\r\n    const handleClick = async () => {\r\n        if(guiaRef.current.value === \"\") return\r\n        guide = await fetch(`${config.urlBase}guias/consulta/guia?guia=${guiaRef.current.value}`);\r\n        guide = await guide.json();\r\n        guide = guide.data;\r\n        if(!guide || guide.estatus !== 'Devuelta a Chofer') {\r\n            toast.error('Guia no marcada como devolucion');\r\n        } else {\r\n            handleShow()\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let responseG = await fetch(`${config.urlBase}guias/consulta/guias/devolucion-cliente`);\r\n            responseG = await responseG.json();\r\n            setGuidesReturn(responseG.data);\r\n            let choferes = await fetch(`${config.urlBase}choferes/`);\r\n            choferes = await choferes.json();\r\n            setDrivers(choferes);\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n        <InputGroup className=\"mb-3\">\r\n            <InputGroup.Text id=\"basic-addon1\"># Guia</InputGroup.Text>\r\n            <FormControl\r\n                aria-label=\"Guia\"\r\n                autoFocus\r\n                ref={guiaRef}\r\n                onKeyUp={handleEnter}\r\n            />\r\n            <Button variant=\"outline-secondary\" id=\"button-addon2\" className=\"d-sm-none\">\r\n                <CropFreeIcon /> \r\n                <small>ESCANEAR</small>\r\n            </Button>\r\n            <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={handleClick} className=\"d-none d-sm-block\">\r\n                <CheckIcon /> \r\n                <small>REGISTRAR</small>\r\n            </Button>\r\n        </InputGroup>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>DEVOLUCION A CLIENTE</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>¿Registrar guia como devolucion directa a cliente? <br />Al seleccionar NO la guia se registrara como devuelta a almacen.</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleReturnToWarehouse}>\r\n                    NO\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleReturnToCustomer}>\r\n                    SI\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <Row>\r\n            <Col> \r\n                {guidesReturn.length >0 && \r\n                    <Table responsive striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>guia</th>\r\n                                <th>chofer</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                guidesReturn.map(g => (\r\n                                    <tr key={g.guia}>\r\n                                        <td>\r\n                                            {g.guia}\r\n                                        </td>\r\n                                        <td>\r\n                                            {drivers.map(d => d.chofer === g.choferEntrega ? d.nombre : \"\")}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    }\r\n            </Col>\r\n        </Row>\r\n      <Toaster />\r\n      </>\r\n    )\r\n};\r\n\r\nexport default GuideReturnRegistration;","import dayjs from \"dayjs\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useReducer, useRef } from 'react';\r\nimport { Table, Row, Col, Form } from 'react-bootstrap';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'guia'},\r\n    {id: 2, description: 'estatus'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst RowSelected = styled.tr`\r\n    background-color: #ddffba\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n`;\r\n\r\nconst initialState = {\r\n    markedGuides: 0,\r\n    selectedGuides: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedGuides: state.markedGuides+1,\r\n                selectedGuides: state.selectedGuides.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedGuides: state.markedGuides-1,\r\n                selectedGuides: state.selectedGuides.filter(selectedGuide => selectedGuide.guia !== action.payload.guia)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedGuides: action.payload.length,\r\n                selectedGuides: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedGuides: 0,\r\n                selectedGuides: []\r\n            }\r\n        case \"reorder\":\r\n            return {\r\n                ...state,\r\n                selectedGuides: action.payload\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = [...list];\r\n    const [removed] = result.splice(startIndex,1);\r\n    result.splice(endIndex,0,removed);\r\n    return result;\r\n} \r\n\r\nconst GuideReturnToCustomer = () => {\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n    const [guides, setGuides] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const choferRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guias/devolucion`);\r\n            response = await response.json();\r\n            setGuides(response.data);\r\n            let responseD = await fetch(`${config.urlBase}choferes/`);\r\n            responseD = await responseD.json();\r\n            setDrivers(responseD);\r\n        }\r\n        fetchOrders()\r\n    },[]);\r\n\r\n    const handleShow = async (element) => {\r\n        if(state.selectedGuides.includes(element)) {\r\n            dispach({type: \"substract_one\", payload: element})\r\n        } else {\r\n            dispach({type: \"add_one\", payload: element})\r\n        }\r\n    };\r\n\r\n    const handleUnselectGuide = (event, element) => {\r\n        dispach({type: \"substract_one\", payload: element})\r\n    }\r\n\r\n    const handleAssignmentGuide = async () => {\r\n        let requests = state.selectedGuides.map((selectedGuide, index) => fetch(`${config.urlBase}guias/asignada-devolucion`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                guia: selectedGuide.guia,\r\n                chofer: choferRef.current.value,\r\n                fecha: dayjs.utc().local().format('YYYY-MM-DDTHH:mm:ss'),\r\n                posicion: index+1\r\n            })\r\n        }));\r\n        let responses = await Promise.all(requests);\r\n        console.log(responses)\r\n        let newGuides = guides;\r\n        dispach({type: \"substract_all\"})\r\n        state.selectedGuides.map(selectedGuide => newGuides = newGuides.filter(guide => guide.guia !== selectedGuide.guia));\r\n        setGuides(newGuides);\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={result => {\r\n            const {source, destination} = result;\r\n            if (!destination) {\r\n                return;\r\n            }\r\n            if (source.index === destination.index && source.droppableId === destination.droppableId) {\r\n                return;\r\n            }\r\n            let element = reorder(state.selectedGuides,source.index,destination.index)\r\n            dispach({type: \"reorder\", payload: element})\r\n        }}\r\n        > \r\n            <Row>\r\n                <Col xs={9}>\r\n                {\r\n                    guides.length === 0 && <h1>No se encontraron registros.</h1>\r\n                }\r\n                {\r\n                    guides.length > 0 && \r\n                    (\r\n                        <TableContainer>\r\n                            <Table hover responsive striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                        {headers.map(header => (\r\n                                            <th key={header.id}>{header.description}</th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {guides.map(guide => {\r\n                                        if (state.selectedGuides.includes(guide)) {\r\n                                            return (\r\n                                                <RowSelected key={guide.guia} onClick={() => handleShow(guide)}>\r\n                                                    <td>\r\n                                                        {guide.guia}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {guide.estatus}\r\n                                                    </td>\r\n                                                </RowSelected>\r\n                                            )    \r\n                                        } else {\r\n                                            return (\r\n                                                <tr key={guide.guia} onClick={() => handleShow(guide)}>\r\n                                                    <td>\r\n                                                        {guide.guia}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {guide.estatus}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )\r\n                }\r\n                </Col>\r\n                <Col>\r\n                    {\r\n                        state.selectedGuides.length > 0 &&\r\n                        <CustomButton variant=\"primary\" onClick={handleAssignmentGuide}>\r\n                            ASIGNAR\r\n                        </CustomButton>\r\n                    }\r\n                    <h6>Chofer:</h6>\r\n                    <Form.Select aria-label=\"Default select example\" className=\"mb-3\" ref={choferRef}>\r\n                        {\r\n                            drivers.map(d => <option value={d.chofer}>{d.nombre}</option>)\r\n                        }\r\n                    </Form.Select>\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        posicion\r\n                                    </th>\r\n                                    <th>\r\n                                        guia\r\n                                    </th>\r\n                                    <th>\r\n                                        cp\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <Droppable droppableId=\"choferGuias\">\r\n                                {(droppableProvider) => (\r\n                                    <tbody \r\n                                        {...droppableProvider.droppableProps}\r\n                                        ref={droppableProvider.innerRef}\r\n                                    >\r\n                                        {\r\n                                            state.selectedGuides.map((guide,index) => (\r\n                                                <Draggable key={guide.guia} draggableId={guide.guia} index={index}>\r\n                                                    {\r\n                                                        (draggableProvider) => (\r\n                                                            <tr\r\n                                                                {...draggableProvider.draggableProps}\r\n                                                                ref={draggableProvider.innerRef}\r\n                                                                {...draggableProvider.dragHandleProps}\r\n                                                                onClick={(e) => handleUnselectGuide(e,guide)}\r\n                                                            >\r\n                                                                <td>\r\n                                                                    {index+1}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {guide.guia}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {guide.codigoPostal}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                </Draggable>\r\n                                            ))\r\n                                        }\r\n                                        {droppableProvider.placeholder}\r\n                                    </tbody>\r\n                                )}\r\n                                </Droppable>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Col>\r\n            </Row>\r\n        </DragDropContext>\r\n        )\r\n};\r\n\r\nexport default GuideReturnToCustomer;","import dayjs from 'dayjs';\r\nimport { useState, useRef } from 'react';\r\nimport { Form, Table, Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport config from '../config';\r\n\r\nconst Container = styled.div`\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst GuideTracking = () => {\r\n    const [order, setOrder] = useState(null);\r\n    const orderRef = useRef(null);\r\n\r\n    const handleSubmit = async () => {\r\n        try {    \r\n            if(!orderRef) {\r\n                throw Error('Debe ingresar una guia valida')   \r\n            }\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guia?guia=${orderRef.current.value}`);\r\n            response = await response.json()\r\n            if(!response.data) {\r\n                throw Error(response.message)   \r\n            }\r\n            setOrder(response.data);\r\n        } catch (error) {\r\n            setOrder(null);\r\n            toast.error(error.message)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Form.Label><strong>GUIA:</strong></Form.Label>\r\n            <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                    ref={orderRef} \r\n                />\r\n                <Button variant=\"outline-secondary\" onClick={handleSubmit}>\r\n                    VALIDAR\r\n                </Button>\r\n            </InputGroup>\r\n            {\r\n                order &&\r\n                <Row>\r\n                    <Col>\r\n                        <h6>ORDEN: {order.orden}</h6>\r\n                    </Col>\r\n                    <Col>\r\n                        <h6>GUIA: {order.guia}</h6>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {\r\n                order &&\r\n                <Row>\r\n                    <Col>\r\n                        <Table striped bordered responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        estatus\r\n                                    </th>\r\n                                    <th>\r\n                                        fecha\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    order.fechaRecoleccion &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            Recolectada\r\n                                        </td>                                \r\n                                        <td>\r\n                                            {dayjs.utc(order.fechaRecoleccion).local().format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                                {\r\n                                    order.fechaEntregaAlmacen &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            Entregada a Almacen\r\n                                        </td>                                \r\n                                        <td>\r\n                                            {dayjs.utc(order.fechaEntregaAlmacen).local().format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                                {\r\n                                    order.FechaEntregaChofer &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            En transito\r\n                                        </td>                                \r\n                                        <td>\r\n                                            {dayjs.utc(order.FechaEntregaChofer).local().format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                                {\r\n                                    order.fechaDevueltaAlmacen &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            Devuelta a Almacen\r\n                                        </td>                                \r\n                                        <td>\r\n                                            {dayjs.utc(order.fechaDevueltaAlmacen).local().format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                                {\r\n                                    order.RecibeFecha &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            Entregado\r\n                                        </td>                                \r\n                                        <td>\r\n                                            {dayjs.utc(order.RecibeFecha).local().format('DD/MM/YYYY')}\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        <Toaster />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default GuideTracking;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport GuideDelivered from '../components/GuideDelivered';\r\nimport GuideInTransit from '../components/GuideInTransit';\r\nimport GuideInWarehouse from '../components/GuideInWarehouse';\r\nimport GuideRegistration from '../components/GuideRegistration';\r\nimport GuideReturned from '../components/GuideReturned';\r\nimport GuideReturnRegistration from '../components/GuideReturnRegistration';\r\nimport GuideReturnToCustomer from '../components/GuideReturnToCustomer';\r\nimport GuideTracking from '../components/GuideTracking';\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n    width: 90vw;\r\n\r\n    overflow-x: scroll;\r\n    ::-webkit-scrollbar {display: none;}\r\n`;\r\n\r\nconst NavApp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-contetn: space-around;\r\n`;\r\n\r\nconst NavElement = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: ${props => props.isActive ? \"bold;\" : \"initial;\"}\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst ordersOptions = [\r\n    {id:1,tittle:'ENTRADA DE GUIAS',value:'ENTRADA'},\r\n    {id:2,tittle:'DEVOLUCION DE GUIAS',value:'DEVOLUCION'},\r\n    {id:3,tittle:'EN ALMACEN',value:'ALMACEN'}, \r\n    {id:4,tittle:'EN TRANSITO',value:'TRANSITO'},\r\n    {id:5,tittle:'ENTREGADAS',value:'ENTREGADAS'}, \r\n    {id:6,tittle:'POR DEVOLVER',value:'DEVUELTACLIENTE'},\r\n    {id:7,tittle:'DEVUELTAS',value:'DEVUELTAS'},\r\n    {id:8,tittle:'SEGUIMIENTO',value:'SEGUIMIENTO'}\r\n]\r\n\r\nconst opciones = {};\r\nopciones[\"ENTRADA\"] = <GuideRegistration />\r\nopciones[\"DEVOLUCION\"] = <GuideReturnRegistration />\r\nopciones[\"ALMACEN\"] = <GuideInWarehouse />\r\nopciones[\"TRANSITO\"] = <GuideInTransit />\r\nopciones[\"ENTREGADAS\"] = <GuideDelivered />\r\nopciones[\"SEGUIMIENTO\"] = <GuideTracking />\r\nopciones[\"DEVUELTACLIENTE\"] = <GuideReturnToCustomer />\r\nopciones[\"DEVUELTAS\"] = <GuideReturned />\r\n\r\nconst Guides = () => {\r\n    const [option, setOption] = useState(\"ENTRADA\");\r\n\r\n    const handleOption = (event) => {\r\n        setOption(event.target.name)\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>GUIAS DE ENTREGA</Tittle>\r\n                </Box>\r\n                <NavContainer>\r\n                    <NavApp>\r\n                        {\r\n                            ordersOptions.map(\r\n                                oP => (\r\n                                    <NavElement \r\n                                        key={oP.id} \r\n                                        name={oP.value} \r\n                                        isActive={oP.value === option ? true : false}\r\n                                        onClick={handleOption}\r\n                                    >\r\n                                        {oP.tittle}\r\n                                    </NavElement>\r\n                                )\r\n                            )\r\n                        }\r\n                    </NavApp>\r\n                </NavContainer>\r\n                {opciones[option]}\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Guides;","export default __webpack_public_path__ + \"static/media/logo_largo_completo_negro_sub.bc355806.svg\";","import { useContext, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport AppContext from '../context/AppContext';\r\nimport styled from 'styled-components';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport Logo from '../assets/logo_largo_completo_negro_sub.svg';\r\n\r\nimport config from '../config'\r\n\r\nconst Container = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst Badge = styled.img`\r\n    padding: 10px;\r\n    margin-top: 80px;\r\n    width: 800px;\r\n    @media (max-width: 820px) {\r\n        width: 420px;\r\n    }\r\n    @media (max-width: 620px) {\r\n        width: 320px;\r\n    }\r\n    @media (max-width: 420px) {\r\n        width: 220px;\r\n    }\r\n    @media (max-width: 320px) {\r\n        width: 170px;\r\n    }\r\n`;\r\n\r\nconst Input = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 70%;\r\n    height: 40px;\r\n    margin-top: 15px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px black solid;\r\n    transition: 0.6s;\r\n\r\n    &:focus-within {\r\n        border-bottom: 3px black solid;\r\n    }\r\n`;\r\n\r\nconst Box = styled.input`\r\n    flex-grow: 1;\r\n    padding-left: 10px;\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n`;\r\n\r\nconst BtnLog = styled.button`\r\n    margin-top: 30px;\r\n    background-color: transparent;\r\n    width: 70%;\r\n    height: 40px;\r\n    border: solid 1px black;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: black;\r\n        color: white;\r\n    }\r\n\r\n`;\r\n\r\nconst Log = () => {\r\n    const history = useHistory();\r\n    const userRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n    const { signUser } = useContext(AppContext);\r\n\r\n    const handleSignUser = async () => {\r\n        let response = await fetch(`${config.urlBase}acceso/login`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                usuario: userRef.current.value,\r\n                password: passwordRef.current.value\r\n            })\r\n        });\r\n        response = await response.json();\r\n        if(response.data) {\r\n            signUser(response.data);\r\n            history.push(\"/application\")\r\n        }else {\r\n            toast.error(response.message);\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Badge src={Logo} alt=\"Logo Monlog\"/>\r\n            <Input>\r\n                <PersonIcon />\r\n                <Box type=\"text\" autoFocus ref={userRef}/>\r\n            </Input>\r\n            <Input>\r\n                <VpnKeyIcon />\r\n                <Box type=\"password\" ref={passwordRef}/>\r\n            </Input>\r\n            <BtnLog onClick={handleSignUser}>\r\n                iniciar sesion\r\n            </BtnLog>\r\n            <Toaster />\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Log;","import dayjs from 'dayjs';\r\nimport styled from 'styled-components';\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport config from '../config';\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst NewOrderModal = ({ show, handleClose, setOrders, orders }) => {\r\n    const fechaRef = useRef(null);\r\n    const almacenRef = useRef(null);\r\n    const clienteRef = useRef(null);\r\n    const sucursalRef = useRef(null);\r\n    const paquetesRef = useRef(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [almacenes, setAlmacenes] = useState([]);\r\n    const [clientes, setClientes] = useState([]);\r\n    const [clienteActivo, setClienteActivo] = useState(\"\");\r\n    const [sucursales, setSucursales] = useState([]);\r\n    const [sucursalActiva, setSucursalActiva] = useState(\"\");\r\n\r\n    console.log(loading)\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            let warehouses = await responseW.json();\r\n            setAlmacenes(warehouses);\r\n            let responseC = await fetch(`${config.urlBase}clientes/`);\r\n            let customers = await responseC.json();\r\n            setClientes(customers);\r\n            setClienteActivo(customers[0]);\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`);\r\n            let branches = await responseB.json();\r\n            setSucursales(branches.data);\r\n            setLoading(false);\r\n            let branchesByClient = branches.data.filter(b => b.cliente == customers[0].cliente)\r\n            setSucursalActiva(branchesByClient[0]);\r\n        }\r\n        fetchData()\r\n    },[]);\r\n\r\n    const handleOrder = async () => {\r\n        try {\r\n        let chofer = null;\r\n        if (paquetesRef.current.value.length < 1) {\r\n            throw Error('Se debe especificar la cantidad de paquetes')\r\n        }\r\n        //TODO: Agregar el usuario de la sesion\r\n        let response = await fetch(`${config.urlBase}ordenes/`,{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify({\r\n                orden: 0,\r\n                fecha: fechaRef.current.value,\r\n                almacen: almacenRef.current.value,\r\n                cliente: clienteRef.current.value,\r\n                sucursal: sucursalRef.current.value,\r\n                paquetes: paquetesRef.current.value,\r\n                usuarioCaptura: \"ERETIZ\",\r\n                estatus: \"Nueva\",\r\n                choferRecoleccion: chofer\r\n            })\r\n        })\r\n        let res = await response.json()\r\n        if (res.type === \"Error\") {\r\n            throw Error(res.message);\r\n        }\r\n        setOrders(orders.concat({\r\n            orden: res.data,\r\n            fecha: fechaRef.current.value,\r\n            almacen: almacenRef.current.value,\r\n            cliente: clienteRef.current.value,\r\n            sucursal: sucursalRef.current.value,\r\n            paquetes: paquetesRef.current.value,\r\n            usuarioCaptura: \"ERETIZ\",\r\n            estatus: \"Nueva\",\r\n            choferRecoleccion: chofer\r\n        }));\r\n        setMessage(res.message);\r\n        toast.success(res.message)\r\n        handleClose();   \r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }        \r\n    }\r\n\r\n    const handleChangeClient = () => {\r\n        let customerFiltered = clientes.filter(c => c.cliente === parseInt(clienteRef.current.value,10));\r\n        setClienteActivo(customerFiltered[0]);\r\n    }\r\n\r\n    const handleChangeBranch = (event) => {\r\n        let branchFiltered = sucursales.filter(sucursal => sucursal.sucursal == event.target.value)\r\n        setSucursalActiva(branchFiltered[0]);\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>NUEVA ORDEN DE RECOLECCION</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" >\r\n                    <Form.Label>Fecha</Form.Label>\r\n                    <Form.Control type=\"datetime-local\" ref={fechaRef} onChange={() => console.log(dayjs.utc().local().format('YYYY-MM-DDThh:mm:ss a'))} value={dayjs.utc().local().format('YYYY-MM-DDTHH:mm')}/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" >\r\n                    <Form.Label>Cliente</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" ref={clienteRef} onChange={handleChangeClient}>\r\n                        {clientes.map(cliente => <option key={cliente.cliente} value={cliente.cliente}>{cliente.razonSocial}</option>)}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" >\r\n                    <Form.Label>Origen</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" ref={sucursalRef} onChange={e => handleChangeBranch(e)}>\r\n                        {sucursales.map(sucursal => {\r\n                            if(sucursal.cliente == clienteActivo.cliente){\r\n                                return <option key={sucursal.sucursal} value={sucursal.sucursal}>{sucursal.descripcion}</option>\r\n                            }\r\n                            return <></>\r\n                            })}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" >\r\n                    <Form.Label>Destino</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" ref={almacenRef}>\r\n                        {\r\n                            almacenes.map(almacen => {\r\n                                if(almacen.almacen == sucursalActiva.almacen) {\r\n                                    return <option selected key={almacen.almacen} value={almacen.almacen}>{almacen.descripcion}</option>\r\n                                } else {\r\n                                    return <option key={almacen.almacen} value={almacen.almacen}>{almacen.descripcion}</option>;   \r\n                                }\r\n                            })\r\n                        }\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" >\r\n                    <Form.Label>Paquetes</Form.Label>\r\n                    <Form.Control type=\"number\" ref={paquetesRef}/>\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <CustomButtonOutline onClick={handleClose}>\r\n            CANCELAR\r\n        </CustomButtonOutline>\r\n        <CustomButton onClick={handleOrder}>\r\n            AGREGAR\r\n        </CustomButton>\r\n        </Modal.Footer>\r\n        <Toaster />\r\n    </Modal>\r\n    )\r\n};\r\n\r\nexport default NewOrderModal;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useReducer, useRef } from 'react';\r\nimport { Table, Form, FloatingLabel, Row, Col, Modal } from 'react-bootstrap';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport NewOrderModal from './Modal';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'orden'},\r\n    {id: 2, description: 'fecha'},\r\n    {id: 3, description: 'sucursal'},\r\n    {id: 4, description: 'paquetes'},\r\n    {id: 5, description: 'estatus'}\r\n];\r\n\r\nconst TextBtn = styled.p`\r\n    margin: 0;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    width: 60%;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst TableContainerTwo = styled.div`\r\n    width: 100%;\r\n    height: 350px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n`;\r\n\r\nconst AssignContainer = styled.div`\r\n    position: relative;\r\n    top: -170px;\r\n    width: 30%;\r\n    height: 300px;\r\n    padding: 10px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: start;\r\n    margin-bottom: 25px;\r\n    margin-top: 25px;\r\n`;\r\n\r\nconst BtnAdd = styled.button`\r\n    border: none;\r\n    background-color: #fdd448;\r\n    height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    \r\n    &:active {\r\n        background-color: #d6b43e;\r\n    }\r\n`;\r\n\r\nconst OutlineBtn = styled.button`\r\n    border: solid 1px #fdd448;\r\n    background-color: transparent;\r\n    height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    color: black;\r\n    \r\n    &:active {\r\n        background-color: #d6b43e;\r\n    }\r\n`;\r\n\r\nconst BtnDelete = styled.button`\r\n    border: none;\r\n    background: transparent;\r\n    color: #FF2626;\r\n    width: 100%;\r\n`;\r\n\r\nconst initialState = {\r\n    markedOrders: 0,\r\n    selectedOrders: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedOrders: state.markedOrders+1,\r\n                selectedOrders: state.selectedOrders.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedOrders: state.markedOrders-1,\r\n                selectedOrders: state.selectedOrders.filter(selectedOrder => selectedOrder.orden !== action.payload.orden)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedOrders: action.payload.length,\r\n                selectedOrders: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedOrders: 0,\r\n                selectedOrders: []\r\n            }\r\n        case \"reorder\":\r\n            return {\r\n                ...state,\r\n                selectedOrders: action.payload\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = [...list];\r\n    const [removed] = result.splice(startIndex,1);\r\n    result.splice(endIndex,0,removed);\r\n    return result;\r\n} \r\n\r\nconst TableNewOrder = () => {\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n    const [orders, setOrders] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [addShow, setAddShow] = useState(false);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n    const [activeWarehouse,setActiveWarehouse] = useState(\"\")\r\n    const choferRef = useRef(null);\r\n    const warehouseRef = useRef(null);\r\n    const allCheckboxRef = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [elementToBeDeleted, setElementToBeDeleted] = useState(\"\");\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (e) => {\r\n        setElementToBeDeleted(e);\r\n        setShow(true);\r\n    };\r\n\r\n    const handleAddClose = () => setAddShow(false);\r\n    const handleAddShow = () => setAddShow(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}ordenes/pendientes`);\r\n            response = await response.json();\r\n            setOrders(response.data);\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`);\r\n            responseB = await responseB.json();\r\n            setBranches(responseB.data);\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setWarehouses(responseW);\r\n            setActiveWarehouse(responseW[0].almacen);\r\n        }\r\n\r\n        fetchOrders()\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        async function fetchDrivers() {\r\n            let response = await fetch(`${config.urlBase}choferes/`)\r\n            response = await response.json()\r\n            setDrivers(response)\r\n        }\r\n\r\n        fetchDrivers()\r\n    },[]);\r\n\r\n    const handleChange = (event, order) => {\r\n        if (event.target.checked) {\r\n            dispach({type: \"add_one\", payload: order})\r\n            let ordersBySelectedWarehouse = orders.filter(order => order.almacen === activeWarehouse)\r\n            if((state.selectedOrders.length+1) === ordersBySelectedWarehouse.length) {\r\n                allCheckboxRef.current.checked = true;\r\n            }\r\n        } else {\r\n            dispach({type: \"substract_one\", payload: order})\r\n            if((state.selectedOrders.length-1) === 0) {\r\n                allCheckboxRef.current.checked = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleRow = (event, order) => {\r\n        dispach({type: \"substract_one\", payload: order})\r\n    }\r\n    \r\n    const handleAllChange = (event, orders) => {\r\n        if (event.target.checked) {\r\n            dispach({type: \"add_all\", payload: orders})\r\n        } else {\r\n            dispach({type: \"substract_all\"})\r\n        }\r\n    };\r\n    \r\n    const handlingAssignment = async () => {\r\n        let requests = state.selectedOrders.map(selectedOrder => fetch(`${config.urlBase}ordenes/asignar`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                orden: selectedOrder.orden,\r\n                chofer:choferRef.current.value\r\n            })\r\n        }));\r\n        let responses = await Promise.all(requests);\r\n        console.log(responses)\r\n        let newOrders = orders;\r\n        dispach({type: \"substract_all\"})\r\n        state.selectedOrders.map(selectedOrder => newOrders = newOrders.filter(order => order.orden !== selectedOrder.orden))\r\n        setOrders(newOrders);\r\n    }\r\n\r\n    const handleChangeWarehouse = () => {\r\n        setActiveWarehouse(warehouseRef.current.value)\r\n        dispach({type: \"substract_all\"})\r\n        allCheckboxRef.current.checked = false;\r\n    }\r\n\r\n    const handleDeleteOrder = async (orderNumber) => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}ordenes/eliminar?orden=${orderNumber}`,{\r\n                method: \"DELETE\"\r\n            });\r\n            response = await response.json();\r\n            setOrders(orders.filter(order => order.orden !== orderNumber));\r\n            setShow(false);\r\n            toast.success(response.message)\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={result => {\r\n            const {source, destination} = result;\r\n            if (!destination) {\r\n                return;\r\n            }\r\n            if (source.index === destination.index && source.droppableId === destination.droppableId) {\r\n                return;\r\n            }\r\n            let element = reorder(state.selectedOrders,source.index,destination.index)\r\n            dispach({type: \"reorder\", payload: element})\r\n        }}>\r\n            <Box>\r\n                <BtnAdd onClick={handleAddShow}>\r\n                    <TextBtn>NUEVA ORDEN</TextBtn>\r\n                </BtnAdd>\r\n                <NewOrderModal show={addShow} handleClose={handleAddClose} setOrders={setOrders} orders={orders}/>\r\n            </Box>\r\n            {\r\n                orders.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                orders.length > 0 &&\r\n                <Row>\r\n                    <Col xs={3}>\r\n                        <FloatingLabel controlId=\"floatingSelect\" label=\"Almacen\">\r\n                            <Form.Select aria-label=\"Floating label select example\" ref={warehouseRef} onChange={handleChangeWarehouse}>\r\n                                {\r\n                                    warehouses.map(warehouse => <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>)\r\n                                }\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            <div style={{display: 'flex', justifyContent: 'space-around', padding: \"20px\"}}>\r\n            {\r\n                orders.length > 0 && \r\n                (\r\n                    <>\r\n                        <TableContainer>\r\n                            <Table hover responsive striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            {state.markedOrders > 0 && <small style={{marginRight: 10 + 'px'}}>{state.markedOrders}</small>}\r\n                                            <input type=\"checkbox\" onChange={(event) => handleAllChange(event,orders)} ref={allCheckboxRef}/>\r\n                                        </th>\r\n                                        {headers.map(header => (\r\n                                            <th key={header.id}>{header.description}</th>\r\n                                        ))}\r\n                                        <th>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map(order => {\r\n                                        if(order.almacen === activeWarehouse) {\r\n                                            return (\r\n                                                <tr key={order.orden}>\r\n                                                    <td>\r\n                                                        <input type=\"checkbox\" checked={state.selectedOrders.includes(order)} onChange={(event) => handleChange(event, order)} name={order.orden}/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {order.orden}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {dayjs.utc(order.fecha).format('DD/MM/YYYY')}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {branches.map(branch => branch.sucursal === order.sucursal ? branch.descripcion : \"\")}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {order.paquetes}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {order.estatus}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <BtnDelete onClick={() => handleShow(order.orden)}>\r\n                                                            <DeleteForeverIcon />\r\n                                                        </BtnDelete>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                        return <></>\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>ELIMINAR REGISTRO</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>LA ORDEN {elementToBeDeleted} SERA ELIMINADA. ¿DESEA CONTINUAR?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <OutlineBtn variant=\"secondary\" onClick={handleClose}>\r\n                                    CANCELAR\r\n                                </OutlineBtn>\r\n                                <BtnAdd variant=\"primary\" onClick={() => handleDeleteOrder(elementToBeDeleted)}>\r\n                                    ELIMINAR\r\n                                </BtnAdd>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <AssignContainer>\r\n                            {\r\n                                state.markedOrders > 0 &&\r\n                                <CustomButton onClick={handlingAssignment}>\r\n                                    <PersonAddIcon />{' '}\r\n                                    ASIGNAR\r\n                                </CustomButton>\r\n                            }\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label><strong>CHOFER:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" ref={choferRef}>\r\n                                    {drivers.map(chofer => <option key={chofer.chofer} value={chofer.chofer}>{chofer.nombre}</option>)}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                            <TableContainerTwo>\r\n                                <Table hover responsive striped bordered>\r\n                                    <Droppable droppableId=\"choferOrdenes\">\r\n                                        {(droppableProvider) => (\r\n                                            <tbody\r\n                                                {...droppableProvider.droppableProps}\r\n                                                ref={droppableProvider.innerRef}\r\n                                            >\r\n                                                {\r\n                                                    state.selectedOrders.map((selectedOrder, index) => (\r\n                                                        <Draggable key={selectedOrder.orden} draggableId={`orden${selectedOrder.orden}`} index={index}>\r\n                                                            {\r\n                                                                (draggableProvider) => (\r\n                                                                <tr\r\n                                                                    {...draggableProvider.draggableProps}\r\n                                                                    ref={draggableProvider.innerRef}\r\n                                                                    {...draggableProvider.dragHandleProps} \r\n                                                                    onClick={(e) => handleRow(e,selectedOrder)}\r\n                                                                >\r\n                                                                    <td>{selectedOrder.orden}</td>\r\n                                                                    <td>{branches.map(branch => branch.sucursal === selectedOrder.sucursal ? branch.descripcion : \"\")}</td>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                        </Draggable>\r\n                                                    ))\r\n                                                }\r\n                                                {droppableProvider.placeholder}\r\n                                            </tbody>\r\n                                        )}\r\n                                    </Droppable>\r\n                                </Table>\r\n                            </TableContainerTwo>\r\n                        </AssignContainer>\r\n                    </>\r\n                )\r\n            }\r\n            </div>\r\n            <Toaster />\r\n        </DragDropContext>\r\n        )\r\n};\r\n\r\nexport default TableNewOrder;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useReducer, useRef } from 'react';\r\nimport { Table, Form, Modal, Row, Col, FloatingLabel, FormControl, InputGroup, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'orden'},\r\n    {id: 2, description: 'fecha'},\r\n    {id: 3, description: 'sucursal'},\r\n    {id: 4, description: 'paquetes'},\r\n    {id: 5, description: 'estatus'},\r\n    {id: 6, description: 'chofer'}\r\n];\r\n\r\nconst BoxTwo = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst BtnAssign = styled.button`\r\n    display: flex;\r\n    width: 200px;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    background-color: #fdd448;\r\n    color: white;\r\n    border: none;\r\n    padding: 5px;\r\n\r\n    &:active {\r\n        background-color: #d6b43e;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        width: 300px;\r\n        margin: 0 auto;\r\n    }\r\n    @media (max-width: 320px) {\r\n        width: 270px;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n\r\nconst TextBtn = styled.p`\r\n    margin: 0;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Display = styled.div`\r\n    border: solid 1.5px black;\r\n    height: 400px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst HoverElement = styled.td`\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst initialState = {\r\n    markedOrders: 0,\r\n    selectedOrders: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedOrders: state.markedOrders+1,\r\n                selectedOrders: state.selectedOrders.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedOrders: state.markedOrders-1,\r\n                selectedOrders: state.selectedOrders.filter(selectedOrder => selectedOrder.orden !== action.payload.orden)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedOrders: action.payload.length,\r\n                selectedOrders: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedOrders: 0,\r\n                selectedOrders: []\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nconst TableAssignOrder = () => {\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n    const [orders, setOrders] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n    const [activeWarehouse,setActiveWarehouse] = useState(\"\")\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [assignShow, setAssignShow] = useState(false);\r\n    const [modifyShow, setModifyShow] = useState(false);\r\n    const [selectedOrder, setSelectedOrder] = useState({});\r\n    const warehouseRef = useRef(null);\r\n    const allCheckboxRef = useRef(null);\r\n    const amountRef = useRef(null);\r\n\r\n    const handleAssignClose = () => setAssignShow(false);\r\n    const handleAssignShow = () => setAssignShow(true);\r\n\r\n    const handleModifyClose = () => setModifyShow(false);\r\n    const handleModifyShow = element => {\r\n        setSelectedOrder(element)\r\n        setModifyShow(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}ordenes/asignadas/all`)\r\n            response = await response.json()\r\n            setOrders(response.data)\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setWarehouses(responseW);\r\n            setActiveWarehouse(responseW[0].almacen);\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`);\r\n            responseB = await responseB.json()\r\n            setBranches(responseB.data)\r\n            let responseD = await fetch(`${config.urlBase}choferes/`)\r\n            responseD = await responseD.json()\r\n            setDrivers(responseD)\r\n        }\r\n\r\n        fetchOrders()\r\n    },[]);\r\n\r\n    const handleChange = (event, order) => {\r\n        if (event.target.checked) {\r\n            dispach({type: \"add_one\", payload: order})\r\n        } else {\r\n            dispach({type: \"substract_one\", payload: order})\r\n        }\r\n    };\r\n    \r\n    const handleAllChange = (event, orders) => {\r\n        if (event.target.checked) {\r\n            let filteredOrders = orders.filter(o => o.almacen === activeWarehouse)\r\n            dispach({type: \"add_all\", payload: filteredOrders})\r\n        } else {\r\n            dispach({type: \"substract_all\"})\r\n        }\r\n    };\r\n    \r\n    const handlingUnassignment = async () => {\r\n        let promises = state.selectedOrders.map(sO => fetch(`${config.urlBase}ordenes/desasignar`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                orden: sO.orden\r\n            })\r\n        }))\r\n        let responses = await Promise.all(promises);\r\n        console.log(responses)\r\n        let newOrders = orders;\r\n        dispach({type: \"substract_all\"})\r\n        state.selectedOrders.map(selectedOrder => newOrders = newOrders.filter(order => order.orden !== selectedOrder.orden))\r\n        setOrders(newOrders);\r\n    }\r\n\r\n    const handleChangeWarehouse = () => {\r\n        setActiveWarehouse(warehouseRef.current.value)\r\n        dispach({type: \"substract_all\"})\r\n        allCheckboxRef.current.checked = false;\r\n    }\r\n\r\n    const handleEditOrder = async () => {\r\n        try {\r\n            if(!amountRef.current.value) {\r\n                throw Error('La cantidad de paquetes no puede quedar vacia')\r\n            }\r\n            let response = await fetch(`${config.urlBase}ordenes/`,{\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify(selectedOrder)\r\n            })\r\n            response = await response.json();\r\n            if (response.type === \"Error\") {\r\n                throw Error(response.message)\r\n            }\r\n            orders.map(order => {\r\n                if (order.orden === selectedOrder.orden) {\r\n                    order.paquetes = selectedOrder.paquetes\r\n                }\r\n            })\r\n            setOrders(orders)\r\n            handleModifyClose();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleChangeAmount = () => {\r\n        setSelectedOrder({\r\n            ...selectedOrder,\r\n            paquetes: amountRef.current.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <Row>\r\n                {\r\n                    orders.length > 0 &&\r\n                    <Col xs={3}>\r\n                        <FloatingLabel controlId=\"floatingSelect\" label=\"Almacen\" className=\"mb-4 mt-4\">\r\n                            <Form.Select aria-label=\"Floating label select example\" ref={warehouseRef} onChange={handleChangeWarehouse}>\r\n                                {\r\n                                    warehouses.map(warehouse => <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>)\r\n                                }\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                    </Col>\r\n                }\r\n                   {/*<Col>\r\n                        <FloatingLabel controlId=\"floatingSelect\" label=\"Numero de Orden\" className=\"mb-4 mt-4\">\r\n                            <FormControl type=\"number\" min=\"1\" ref={orderNumberRef} onChange={handleFiltered}/>\r\n                        </FloatingLabel>\r\n                   </Col>*/}\r\n                </Row>\r\n            {state.markedOrders > 0 &&\r\n                <BoxTwo>\r\n                    <BtnAssign onClick={handleAssignShow}>\r\n                        <PersonAddDisabledIcon />\r\n                        <TextBtn>DESASIGNAR</TextBtn>\r\n                    </BtnAssign>\r\n                    <Modal show={assignShow} onHide={handleAssignClose} backdrop=\"static\">\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title>DESHACER ASIGNACION DE CHOFER</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Group className=\"mb-3\" >\r\n                                    <Form.Label>Ordenes que seran marcadas como nuevas:</Form.Label>\r\n                                    <Display>\r\n                                        <Table responsive striped bordered>\r\n                                            <tbody>\r\n                                                {state.selectedOrders.map(selectedOrder => (\r\n                                                    <tr key={selectedOrder.orden}>\r\n                                                        <td>\r\n                                                            <strong>{selectedOrder.orden}</strong>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {branches.map(branch => branch.sucursal === selectedOrder.sucursal ? branch.descripcion : \"\")}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Display>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <CustomButtonOutline onClick={handleAssignClose}>\r\n                            CERRAR\r\n                        </CustomButtonOutline>\r\n                        <CustomButton onClick={handlingUnassignment}>\r\n                            DESASIGNAR\r\n                        </CustomButton>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </BoxTwo>\r\n            }\r\n            {\r\n                orders.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                orders.length > 0 && \r\n                (\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        {state.markedOrders > 0 && <small style={{marginRight: 10 + 'px'}}>{state.markedOrders}</small>}\r\n                                        <input type=\"checkbox\" onChange={(event) => handleAllChange(event,orders)} ref={allCheckboxRef}/>\r\n                                    </th>\r\n                                    {headers.map(header => (\r\n                                        <th key={header.id}>{header.description}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => {\r\n                                    if(order.almacen === activeWarehouse){\r\n                                        return (\r\n                                            <tr key={order.orden}>\r\n                                                <td>\r\n                                                    <input type=\"checkbox\" checked={state.selectedOrders.includes(order)} onChange={(event) => handleChange(event, order)} name={order.orden}/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.orden}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {dayjs.utc(order.fecha).format('DD/MM/YYYY')}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {branches.map(branch => branch.sucursal === order.sucursal ? branch.descripcion : \"\")}\r\n                                                </td>\r\n                                                <OverlayTrigger\r\n                                                    placement=\"top\"\r\n                                                    overlay={\r\n                                                        <Popover>\r\n                                                            <Popover.Body>\r\n                                                                clic para editar cantidad de paquetes\r\n                                                            </Popover.Body>\r\n                                                        </Popover>\r\n                                                    }\r\n                                                >\r\n                                                    <HoverElement onClick={() => handleModifyShow(order)}>\r\n                                                        {order.paquetes}\r\n                                                    </HoverElement>\r\n                                                </OverlayTrigger>\r\n                                                <td>\r\n                                                    {order.estatus}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {drivers.map(driver => driver.chofer === order.choferRecoleccion ? driver.nombre : \"\")}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    } else {\r\n                                        return <></>\r\n                                    }\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Modal show={modifyShow} onHide={handleModifyClose} backdrop=\"static\">\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title>MODIFICACION DE PAQUETES</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Text id=\"inputGroup-sizing-default\">Orden</InputGroup.Text>\r\n                                <FormControl\r\n                                    readOnly\r\n                                    value={selectedOrder.orden}\r\n                                />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Text id=\"inputGroup-sizing-default\">Paquetes</InputGroup.Text>\r\n                                <FormControl\r\n                                    type=\"number\"\r\n                                    onChange={handleChangeAmount}\r\n                                    value={selectedOrder.paquetes}\r\n                                    ref={amountRef}\r\n                                />\r\n                            </InputGroup>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <CustomButtonOutline onClick={handleModifyClose}>\r\n                            CANCELAR\r\n                        </CustomButtonOutline>\r\n                        <CustomButton onClick={handleEditOrder}>\r\n                            ACEPTAR\r\n                        </CustomButton>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    </TableContainer>\r\n                )\r\n            }\r\n        </>\r\n        )\r\n};\r\n\r\nexport default TableAssignOrder;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { Table, Row, Col, FloatingLabel, Form } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'orden'},\r\n    {id: 2, description: 'fecha'},\r\n    {id: 3, description: 'sucursal'},\r\n    {id: 4, description: 'paquetes'},\r\n    {id: 5, description: 'paquetes reales'},\r\n    {id: 6, description: 'estatus'},\r\n    {id: 7, description: 'chofer'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst TableCollectedOrder = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n    const [activeWarehouse,setActiveWarehouse] = useState(\"\");\r\n    const warehouseRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}ordenes/recolectadas/all`)\r\n            response = await response.json()\r\n            setOrders(response.data)\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setWarehouses(responseW);\r\n            setActiveWarehouse(responseW[0].almacen);\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`)\r\n            responseB = await responseB.json()\r\n            setBranches(responseB.data)\r\n            let responseD = await fetch(`${config.urlBase}choferes/`)\r\n            responseD = await responseD.json()\r\n            setDrivers(responseD)\r\n        }\r\n\r\n        fetchOrders()\r\n    },[]);\r\n\r\n    const handleChangeWarehouse = () => {\r\n        setActiveWarehouse(warehouseRef.current.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                orders.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                orders.length > 0 &&\r\n                <Row>\r\n                    <Col xs={3}>\r\n                        <FloatingLabel controlId=\"floatingSelect\" label=\"Almacen\" className=\"mb-4 mt-4\">\r\n                            <Form.Select aria-label=\"Floating label select example\" ref={warehouseRef} onChange={handleChangeWarehouse}>\r\n                                {\r\n                                    warehouses.map(warehouse => <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>)\r\n                                }\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {\r\n                orders.length > 0 && \r\n                (\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    {headers.map(header => (\r\n                                        <th key={header.id}>{header.description}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => {\r\n                                    if(order.almacen === activeWarehouse){\r\n                                        return (\r\n                                            <tr key={order.orden}>\r\n                                                <td>\r\n                                                    {order.orden}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {dayjs.utc(order.fecha).format('DD/MM/YYYY')}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {branches.map(branch => branch.sucursal === order.sucursal ? branch.descripcion : \"\")}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.paquetes}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.paquetesReales}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.estatus}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {drivers.map(driver => driver.chofer === order.choferRecoleccion ? driver.nombre : \"\")}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    } else {\r\n                                        return <></>\r\n                                    }\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )\r\n            }\r\n        </>\r\n        )\r\n};\r\n\r\nexport default TableCollectedOrder;","import dayjs from 'dayjs';\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { Table, Row, Col, InputGroup, FormControl, FloatingLabel, Form } from 'react-bootstrap';\r\n\r\nimport config from '../config';\r\n\r\nconst headers = [\r\n    {id: 1, description: 'orden'},\r\n    {id: 2, description: 'fecha'},\r\n    {id: 3, description: 'sucursal'},\r\n    {id: 4, description: 'paquetes'},\r\n    {id: 5, description: 'estatus'},\r\n    {id: 6, description: 'chofer'}\r\n];\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst TableInWarehouseOrder = () => {\r\n    let fecha = new Date();\r\n    const [orders, setOrders] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n    const [activeWarehouse,setActiveWarehouse] = useState(\"\")\r\n    const [selectedInitDate, setSelectedInitDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const [selectedFinDate, setSelectedFinDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const dateIniRef = useRef(null);\r\n    const dateFiniRef = useRef(null);\r\n    const warehouseRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let response = await fetch(`${config.urlBase}ordenes/almacen/all?fechaIni=${selectedInitDate}&fechaFin=${selectedFinDate}`)\r\n            response = await response.json()\r\n            setOrders(response.data)\r\n            let responseW = await fetch(`${config.urlBase}almacenes/`);\r\n            responseW = await responseW.json();\r\n            setWarehouses(responseW);\r\n            setActiveWarehouse(responseW[0].almacen);\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`)\r\n            responseB = await responseB.json()\r\n            setBranches(responseB.data)\r\n            let responseD = await fetch(`${config.urlBase}choferes/`)\r\n            responseD = await responseD.json()\r\n            setDrivers(responseD)\r\n        }\r\n        fetchOrders()\r\n    },[selectedInitDate,selectedFinDate]);\r\n\r\n    const handleChangeDate = async (event) => {\r\n        let dateIni = new Date(dateIniRef.current.value)\r\n        dateIni.setDate(dateIni.getDate()+1)\r\n        let dateFin = new Date(dateFiniRef.current.value)\r\n        dateFin.setDate(dateFin.getDate()+1)\r\n        if (event.target.name === 'iniFecha') {\r\n            setSelectedInitDate(dayjs.utc(dateIni).local().format('YYYY-MM-DD'))   \r\n        }\r\n        if (event.target.name === 'finFecha') {\r\n            setSelectedFinDate(dayjs.utc(dateFin).local().format('YYYY-MM-DD'))\r\n        }\r\n        let response = await fetch(`${config.urlBase}ordenes/almacen/all?fechaIni=${dateIni}&fechaFin=${dateFin}`)\r\n        response = await response.json()\r\n        setOrders(response.data);\r\n    }\r\n\r\n    const handleChangeWarehouse = () => {\r\n        setActiveWarehouse(warehouseRef.current.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Inicial</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateIniRef}\r\n                            value={selectedInitDate}\r\n                            name=\"iniFecha\"\r\n                            max={selectedFinDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Final</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateFiniRef}\r\n                            value={selectedFinDate}\r\n                            name=\"finFecha\"\r\n                            min={selectedInitDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            {\r\n                orders.length > 0 &&\r\n                <Row>\r\n                    <Col xs={3}>\r\n                        <FloatingLabel controlId=\"floatingSelect\" label=\"Almacen\" className=\"mb-4 mt-4\">\r\n                            <Form.Select aria-label=\"Floating label select example\" ref={warehouseRef} onChange={handleChangeWarehouse}>\r\n                                {\r\n                                    warehouses.map(warehouse => <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>)\r\n                                }\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {\r\n                orders.length === 0 && <h1>No se encontraron registros.</h1>\r\n            }\r\n            {\r\n                orders.length > 0 && \r\n                (\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    {headers.map(header => (\r\n                                        <th key={header.id}>{header.description}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => {\r\n                                    if(order.almacen === activeWarehouse) {\r\n                                        return (\r\n                                            <tr key={order.orden}>\r\n                                                <td>\r\n                                                    {order.orden}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {dayjs.utc(order.fecha).format('DD/MM/YYYY')}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {branches.map(branch => branch.sucursal === order.sucursal ? branch.descripcion : \"\")}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.paquetes}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.estatus}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {drivers.map(driver => driver.chofer === order.choferRecoleccion ? driver.nombre : \"\")}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                        } else {\r\n                                            return <></>\r\n                                        }\r\n                                    }\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )\r\n            }\r\n        </>\r\n        )\r\n};\r\n\r\nexport default TableInWarehouseOrder;","import styled from \"styled-components\";\r\nimport { useState } from 'react';\r\nimport Layout from \"../components/Layout\";\r\nimport TableNewOrder from \"../components/TableNewOrder\";\r\nimport TableAssignOrder from \"../components/TableAssignOrder\";\r\nimport TableCollectedOrder from \"../components/TableCollectedOrder\";\r\nimport TableInWarehouseOrder from \"../components/TableInWarehouseOrder\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n    width: 90vw;\r\n\r\n    overflow-x: scroll;\r\n    ::-webkit-scrollbar {display: none;}\r\n`;\r\n\r\nconst NavApp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-contetn: space-around;\r\n`;\r\n\r\nconst NavElement = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: ${props => props.isActive ? \"bold;\" : \"initial;\"}\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst ordersOptions = [\r\n    {id:1,tittle:'NUEVAS',value:'NUEVAS'}, \r\n    {id:2,tittle:'ASIGNADAS',value:'ASIGNADAS'},\r\n    {id:3,tittle:'RECOLECTADAS',value:'RECOLECTADAS'}, \r\n    {id:4,tittle:'EN ALMACEN',value:'ALMACEN'}\r\n]\r\n\r\nconst opciones = {};\r\nopciones[\"NUEVAS\"] = <TableNewOrder />\r\nopciones[\"ASIGNADAS\"] = <TableAssignOrder />\r\nopciones[\"RECOLECTADAS\"] = <TableCollectedOrder />\r\nopciones[\"ALMACEN\"] = <TableInWarehouseOrder />\r\n\r\nconst Orders = () => {\r\n    const [option, setOption] = useState(\"NUEVAS\");\r\n\r\n    const handleOption = (event) => {\r\n        setOption(event.target.name)\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>ORDENES DE RECOLECCION</Tittle>\r\n                </Box>\r\n                <NavContainer>\r\n                    <NavApp>\r\n                        {\r\n                            ordersOptions.map(\r\n                                orderOption => (\r\n                                    <NavElement \r\n                                        key={orderOption.id} \r\n                                        name={orderOption.value} \r\n                                        isActive={orderOption.value === option ? true : false}\r\n                                        onClick={handleOption}\r\n                                    >\r\n                                        {orderOption.tittle}\r\n                                    </NavElement>\r\n                                )\r\n                            )\r\n                        }\r\n                    </NavApp>\r\n                </NavContainer>\r\n                {opciones[option]}\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Orders;","import Quagga from 'quagga';\r\nimport dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport { useState, useEffect, useContext, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport AppContext from '../context/AppContext';\r\nimport Layout from \"../components/Layout\";\r\nimport { Table, Modal, Form, Spinner, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nimport config from '../config';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst TextModal = styled.p`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst CameraArea = styled.div`\r\n    width: 90vw;\r\n`;\r\n\r\nconst ScanCodeButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: black;\r\n    border: none;\r\n    color: white;\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n`;\r\n\r\nconst SignField = styled.div`\r\n    max-width: 360px;\r\n    border: solid black 2px;\r\n`;\r\n\r\ndayjs.extend(utc);\r\n\r\nconst DriverOrders = () => {\r\n    const { state: { user } } = useContext(AppContext);\r\n    const [orders, setOrders] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [selectedElement, setSelectedElement] = useState({});\r\n    const [scanGuide, setScanGuide]= useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [showGuideModal, setShowGuideModal] =  useState(false);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [guidesCollected, setGuidesCollected] = useState([]);\r\n    const [quaggaInit, setQuaggaInit] = useState(false);\r\n    const signCanvas = useRef({});\r\n    const nombreFirmaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchOrders() {\r\n            let responseO = await fetch(`${config.urlBase}ordenes/asignadas/all/${user.chofer}`);\r\n            responseO = await responseO.json();\r\n            setOrders(responseO.data);\r\n            let responseB = await fetch(`${config.urlBase}sucursales/`);\r\n            responseB = await responseB.json();\r\n            setBranches(responseB.data);\r\n            let responseC = await fetch(`${config.urlBase}clientes/`);\r\n            responseC = await responseC.json();\r\n            setCustomers(responseC);\r\n        }\r\n        fetchOrders()\r\n    },[user.chofer]);\r\n\r\n    const handleClose = () => {\r\n        if(quaggaInit) {\r\n            Quagga.stop()\r\n        }\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = async (element) => {\r\n        setSelectedElement(element);\r\n        let responseG = await fetch(`${config.urlBase}guias/consulta/guias/recolectadas?orden=${element.orden}`);\r\n        responseG = await responseG.json();\r\n        setGuidesCollected(responseG.data);\r\n        setShow(true);\r\n    }\r\n\r\n    const handleGuideModalClose = () => {\r\n        setShowGuideModal(false);\r\n    }\r\n\r\n    const handleGuideModalShow = () => {\r\n        setShowGuideModal(true);\r\n    }\r\n\r\n    const handleChangeGuide = (event) => {\r\n        setScanGuide(event.target.value)\r\n    }\r\n\r\n    const handleGuideRegistration = async () => {\r\n        let postObject = {\r\n            orden: selectedElement.orden,\r\n            guia: scanGuide,\r\n            fecha: dayjs.utc().local().format('YYYY-MM-DDTHH:mm:ss')\r\n        }\r\n        let response = await fetch(`${config.urlBase}guias/recolectada`,{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify(postObject)\r\n        });\r\n        response = await response.json()\r\n        console.log(response)\r\n        setScanGuide(\"\");\r\n        setGuidesCollected(guidesCollected.concat(response.data))\r\n        handleGuideModalClose();\r\n    }\r\n\r\n    const handleOrderRegistration = async () => {\r\n        try {\r\n            if(!nombreFirmaRef.current.value){\r\n                throw Error('El nombre y la firma deben ser registrados')\r\n            }\r\n            if (signCanvas.current.isEmpty()) {\r\n                throw Error('El nombre y la firma deben ser registrados')\r\n            }\r\n            let response = await fetch(`${config.urlBase}ordenes/marcar/recolectada`,{\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify({\r\n                    orden: selectedElement.orden,\r\n                    quienValida: nombreFirmaRef.current.value,\r\n                    firmaValida: signCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\").replace(/^data:image\\/[a-z]+;base64,/, \"\")\r\n                })\r\n            });\r\n            response = await response.json()\r\n            setOrders(orders.filter(order => order.orden !== selectedElement.orden));\r\n            handleClose();\r\n            toast.success(response.message)\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(error.message)\r\n        }\r\n    };\r\n\r\n   Quagga.onDetected(function(result) {\r\n       setScanGuide(`${result.codeResult.code}`);\r\n       handleGuideModalShow();\r\n    });\r\n\r\n    const handleBarCodeReader = () => {\r\n        setShowMessage(true);\r\n        Quagga.init({\r\n            inputStream: {\r\n                type : \"LiveStream\",\r\n                target: document.querySelector('#camera'),\r\n                constraints: {\r\n                    aspectRatio: {min: 0.70, max: 0.70},\r\n                    facingMode: \"environment\" // or user\r\n                }\r\n            },\r\n            locator: {\r\n                patchSize: \"medium\",\r\n                halfSample: true\r\n            },\r\n            numOfWorkers: 4,\r\n            frequency: 2,\r\n            decoder: {\r\n                readers : [{\r\n                    format: \"code_128_reader\",\r\n                    config: {}\r\n                }]\r\n            },\r\n            locate: true\r\n        }, function(err) {\r\n              if (err) {\r\n                  console.log(err);\r\n                  return\r\n              }\r\n              console.log(\"Initialization finished. Ready to start\");\r\n              Quagga.start();\r\n              setQuaggaInit(true);\r\n              setShowMessage(false);\r\n          });\r\n    }\r\n\r\n    const handleCleanSignature = () => {\r\n        signCanvas.current.clear();\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>SOLICITUDES DE RECOLECCION</Tittle>\r\n                </Box>\r\n                {\r\n                    orders.length > 0 &&\r\n                    <h6 className=\"mb-3\">TOTAL DE ORDENES: {orders.length}</h6>\r\n                }\r\n                {\r\n                    orders.length > 0 && (\r\n                        <TableContainer>\r\n                            <Table hover responsive striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>cliente</th>\r\n                                        <th>sucursal</th>\r\n                                        <th>direccion</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order.orden} onClick={() => handleShow(order)}>\r\n                                            <td>\r\n                                                {customers.map(customer => customer.cliente === order.cliente ? customer.nombreCorto : \"\")}\r\n                                            </td>\r\n                                            <td>\r\n                                                {branches.map(branch => branch.sucursal === order.sucursal ? branch.descripcion : \"\")}\r\n                                            </td>\r\n                                            <td>\r\n                                                {branches.map(branch => branch.sucursal === order.sucursal ? `${branch.direccion} ${branch.numeroExt}, ${branch.colonia}, ${branch.numeroInt}` : \"\")}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )\r\n                }\r\n                {\r\n                    orders.length === 0 && <h5>No cuenta con ordenes asignadas</h5>\r\n                }\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    fullscreen\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>DETALLE DE ORDEN</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <TextModal><strong>ORDEN:</strong> {selectedElement.orden}</TextModal>\r\n                        <TextModal><strong>{branches.map( branch => branch.sucursal === selectedElement.sucursal ? branch.descripcion.toUpperCase() : \"\")}</strong></TextModal>\r\n                        <TextModal><strong>FECHA:</strong> {dayjs(selectedElement.fecha).format('DD/MM/YYYY')}</TextModal>\r\n                        <TextModal><strong>PAQUETES:</strong> {selectedElement.paquetes}</TextModal>\r\n                        <p>Guias recolectadas de la orden:</p>\r\n                        <ul>\r\n                            {\r\n                                guidesCollected.length > 0 &&\r\n                                guidesCollected.map(guide => <li key={guide.guia}>{guide.guia}</li>)\r\n                            }\r\n                        </ul>\r\n                        <ScanCodeButton onClick={handleBarCodeReader}>\r\n                            <CropFreeIcon />\r\n                            {\" \"}\r\n                            ESCANEAR\r\n                        </ScanCodeButton>\r\n                        {\r\n                            showMessage && (\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                                    <p></p>\r\n                                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                                    <p><strong>CARGANDO</strong></p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        <CameraArea id=\"camera\"></CameraArea>\r\n                        {\r\n                            guidesCollected.length === selectedElement.paquetes &&\r\n\r\n                            <SignField>\r\n                                  <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Text id=\"inputGroup-sizing-default\">Nombre:</InputGroup.Text>\r\n                                    <FormControl\r\n                                        ref={nombreFirmaRef}\r\n                                    />\r\n                                </InputGroup>\r\n                                <SignatureCanvas\r\n                                    ref={signCanvas} \r\n                                    canvasProps={{width: 'inherit', height: 125}}\r\n                                />\r\n                                <button onClick={handleCleanSignature} >Limpiar</button>\r\n                            </SignField>\r\n                        }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButton variant=\"primary\" onClick={handleOrderRegistration}>\r\n                        REGISTRAR\r\n                    </CustomButton>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleClose}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                    <Toaster/>\r\n                </Modal>\r\n                <Modal\r\n                    show={showGuideModal}\r\n                    onHide={handleGuideModalClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>GUIA POR REGISTRAR</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>El siguiente numero de guía sera registrado</Form.Label>\r\n                            <Form.Control type=\"text\" onChange={handleChangeGuide} value={scanGuide}/>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButton variant=\"primary\" onClick={handleGuideRegistration}>\r\n                        REGISTRAR\r\n                    </CustomButton>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleGuideModalClose}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toaster/>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default DriverOrders;","import QrScan from 'react-qr-reader'\r\nimport { useState, useContext, useEffect, useRef } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport styled from 'styled-components';\r\nimport { Table, Modal, InputGroup, FormControl, Row, Col, Alert, Form } from 'react-bootstrap';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport AppContext from '../context/AppContext';\r\nimport Layout from \"../components/Layout\";\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nimport config from '../config';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst TextModal = styled.p`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst ScanCodeButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: black;\r\n    border: none;\r\n    color: white;\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n`;\r\n\r\nconst ImgGContainer = styled.img`\r\n    display: ${props => props.visible ? 'block' : 'none'};\r\n`;\r\n\r\nconst opciones = {};\r\nopciones[\"ENTRADA\"] = <h1>GUIA</h1>\r\n\r\nconst DriverGuides = () => {\r\n    const { state: { user } } = useContext(AppContext);\r\n    const [guides,setGuides] = useState([]);\r\n    const [selectedElement, setSelectedElement] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const [showFotoCasa, setShowFotoCasa] = useState(false);\r\n    const [showFotoIfe, setShowFotoIfe] = useState(false);\r\n    const [showFotoOtro, setShowFotoOtro] = useState(false);\r\n    const quienRecibeRef = useRef(null);\r\n    const fotoCasaRef = useRef(null);\r\n    const fotoIfeRef = useRef(null);\r\n    const fotoOtroRef = useRef(null);\r\n    const [body, setBody] = useState({});\r\n    const motivoRef = useRef(null);\r\n    const [showModalReturn, setShowModalReturn] = useState(false);\r\n    const [showModalVerify, setShowModalVerify] = useState(false);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [badGuideMessage, setBadGuideMessage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            console.log(dayjs.utc().local().format('YYYY-MM-DD'))\r\n            let responseG = await fetch(`${config.urlBase}guias/consulta/guias/chofer?chofer=${user.chofer}&fecha=${dayjs.utc().local().format('YYYY-MM-DD')}`);\r\n            responseG = await responseG.json();\r\n            setGuides(responseG.data);\r\n        }\r\n        fetchData()\r\n    },[user.chofer]);\r\n\r\n    const handleChange = (e) => {\r\n        let reader = new FileReader();\r\n        reader.onload = event => {\r\n            setBody({\r\n                ...body,\r\n                [`foto${e.target.name}`]:event.target.result.replace(/^data:image\\/[a-z]+;base64,/, \"\")\r\n            });\r\n            if(e.target.name === \"Ife\") {\r\n                fotoIfeRef.current.src = event.target.result\r\n                setShowFotoIfe(true);\r\n            }\r\n            if(e.target.name === \"Casa\") {\r\n                fotoCasaRef.current.src = event.target.result\r\n                setShowFotoCasa(true);\r\n            }\r\n            if(e.target.name === \"Otro\") {\r\n                fotoOtroRef.current.src = event.target.result\r\n                setShowFotoOtro(true);\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const handleOrderRegistration = async () => {\r\n        //TODO: VALIDAR QUE LOS CAMPOS NO ESTEN EN BLANCO\r\n        try {\r\n            if (!quienRecibeRef.current.value) {\r\n                throw Error('Se debe indicar quien recibe el paquete')\r\n            }\r\n            let newBody = {\r\n                ...body,\r\n                orden: selectedElement.orden,\r\n                guia: selectedElement.guia,\r\n                fecha: dayjs.utc().local().format('YYYY-MM-DDTHH:mm:ss'),\r\n                recibePersona: quienRecibeRef.current.value\r\n            }\r\n            let responseRG = await fetch(`${config.urlBase}guias/entregada`,{\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newBody)\r\n            });\r\n            responseRG = await responseRG.json();\r\n            setGuides(guides.filter(guide => guide.guia !== selectedElement.guia));\r\n            handleClose();\r\n            toast.success(responseRG.message);\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setBadGuideMessage(false);\r\n        setShowFotoCasa(false);\r\n        setShowFotoIfe(false);\r\n        setShowFotoOtro(false);\r\n        setShowMessage(false);\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const handleCloseModalReturn = () => {\r\n        setShowMessage(false);\r\n        setBadGuideMessage(false);\r\n        setShowModalReturn(false);\r\n    }\r\n\r\n    const handleShowModalReturn = async () => {\r\n        setShowModalReturn(true);\r\n    }\r\n\r\n    const handleShowModalVerify = (element) => {\r\n        setSelectedElement(element);\r\n        setShowModalVerify(true)\r\n    }\r\n\r\n    const handleCloseModalVerify = () => {\r\n        setShowMessage(false);\r\n        setBadGuideMessage(false);\r\n        setShowModalVerify(false);\r\n    }\r\n\r\n    const handleScan = data => {\r\n        if (data) {\r\n            if(data === selectedElement.guia) {\r\n                setShowModalVerify(false);\r\n                handleShow();\r\n            } else {\r\n                setBadGuideMessage(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleError = err => {\r\n        console.error(err)\r\n    }\r\n\r\n    const handleVerify = () => {\r\n        setBadGuideMessage(false);\r\n        setShowMessage(true);\r\n    }\r\n\r\n    const handleReturn = async () => {\r\n        try {\r\n            if(motivoRef.current.value.length === 0){\r\n                throw new Error('El motivo debe ser especificado')\r\n            }\r\n            let response = await fetch(`${config.urlBase}guias/devolucion`,{\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    guia: selectedElement.guia,\r\n                    fecha: dayjs.utc().local().format('YYYY-MM-DDTHH:mm:ss'),\r\n                    motivo: motivoRef.current.value\r\n                })\r\n            });\r\n            response = await response.json();\r\n            setGuides(guides.filter(guide => guide.guia !== selectedElement.guia));\r\n            handleClose();\r\n            handleCloseModalReturn();\r\n            toast.success(response.message)   \r\n        } catch (error) {\r\n            toast.error(error.message) \r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>GUIAS DE ENTREGA</Tittle>\r\n                </Box>\r\n                {\r\n                    guides.length > 0 &&\r\n                    <h6 className=\"mb-3\">TOTAL DE GUIAS: {guides.length}</h6>\r\n                }\r\n                {\r\n                    guides.length > 0 && (\r\n                        <TableContainer>\r\n                            <Table hover responsive striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>nombre</th>\r\n                                        <th>direccion</th>\r\n                                        <th>telofono</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {guides.map(guide => (\r\n                                        <tr key={guide.guia} onClick={() => handleShowModalVerify(guide)}>\r\n                                            <td>\r\n                                                {guide.nombreClienteFinal}\r\n                                            </td>\r\n                                            <td>\r\n                                                {`${guide.direccion} ${guide.numeroExt}, Col. ${guide.colonia}, ${guide.ciudad}, ${guide.estado}. ${guide.codigoPostal}`}\r\n                                            </td>\r\n                                            <td>\r\n                                                {guide.telefono}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )\r\n                }\r\n                {\r\n                    guides.length === 0 && <h5>No cuenta con guias asignadas</h5>\r\n                }\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    fullscreen\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>DETALLE DE GUIA</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <TextModal><strong>GUIA:</strong> {selectedElement.guia}</TextModal>\r\n                        <TextModal><strong>CLIENTE:</strong> {selectedElement.nombreClienteFinal}</TextModal>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Quien recibe</InputGroup.Text>\r\n                            <FormControl\r\n                                aria-label=\"Default\"\r\n                                aria-describedby=\"inputGroup-sizing-default\"\r\n                                ref={quienRecibeRef}\r\n                            />\r\n                        </InputGroup>\r\n                        <Row className=\"g-2\">\r\n                            <Col md>\r\n                                <Form.Group>\r\n                                    <Form.Label>FOTO INE</Form.Label>\r\n                                    <Form.Control type=\"file\" accept=\"image/*\" capture=\"camera\" onChange={handleChange} name=\"Ife\"/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <ImgGContainer alt=\"foto Ife\" ref={fotoIfeRef} visible={showFotoIfe}/>\r\n                            <Col md>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        FOTO CASA\r\n                                    </Form.Label>\r\n                                    <Form.Control type=\"file\" accept=\"image/*\" capture=\"camera\" onChange={handleChange} name=\"Casa\"/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <ImgGContainer alt=\"foto casa\" ref={fotoCasaRef} visible={showFotoCasa}/>\r\n                            <Col md>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        FOTO\r\n                                    </Form.Label>\r\n                                    <Form.Control type=\"file\" accept=\"image/*\" capture=\"camera\" onChange={handleChange} name=\"Otro\"/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <ImgGContainer alt=\"foto casa\" ref={fotoOtroRef} visible={showFotoOtro}/>\r\n                        </Row>\r\n                        <p></p>\r\n                        <CustomButtonOutline variant=\"secondary\" onClick={handleShowModalReturn}>\r\n                            MARCAR COMO DEVOLUCION \r\n                        </CustomButtonOutline>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButton variant=\"primary\" onClick={handleOrderRegistration}>\r\n                        ENTREGADA\r\n                    </CustomButton>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleClose}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    show={showModalReturn}\r\n                    onHide={handleCloseModalReturn}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    fullscreen\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>DEVOLUCION</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <TextModal><strong>GUIA:</strong>{' '+selectedElement.guia}</TextModal>\r\n                        <TextModal><strong>CLIENTE:</strong>{' '+selectedElement.nombreClienteFinal}</TextModal>\r\n                        <TextModal><strong>MOTIVO:</strong></TextModal>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                aria-label=\"Default\"\r\n                                aria-describedby=\"inputGroup-sizing-default\"\r\n                                ref={motivoRef}\r\n                            />\r\n                        </InputGroup>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButton variant=\"primary\" onClick={handleReturn}>\r\n                        DEVOLVER\r\n                    </CustomButton>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleCloseModalReturn}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                    <Toaster />\r\n                </Modal>\r\n                <Modal\r\n                    show={showModalVerify}\r\n                    onHide={handleCloseModalVerify}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    fullscreen\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>ENTREGA DE GUIA</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <TextModal><strong>GUIA:</strong>{' '+selectedElement.guia}</TextModal>\r\n                        <TextModal><strong>DIRECCION:</strong>{` ${selectedElement.direccion} ${selectedElement.numeroExt}, Col. ${selectedElement.colonia}, ${selectedElement.ciudad}, ${selectedElement.estado}. ${selectedElement.codigoPostal}`}</TextModal>\r\n                        <TextModal><strong>TELEFONO:</strong> <a href={`tel:${selectedElement.telefono}`}>{selectedElement.telefono}</a></TextModal>\r\n                        <Alert className=\"mt-3\" variant=\"warning\">Para poder realizar la entrega del paquete es necesario confirmar el numero de guia. Por favor presione escanear para verificarlo.</Alert>\r\n                        <ScanCodeButton onClick={handleVerify}>ESCANEAR</ScanCodeButton>\r\n                        {\r\n                            badGuideMessage && \r\n                                <Alert variant=\"danger\">\r\n                                    <Alert.Heading>¡Atencion!</Alert.Heading>\r\n                                    <p>\r\n                                        El numero de guia no corresponde al paquete por entregar. <br/>\r\n                                        Para intentarlo de nuevo presione escanear.\r\n                                    </p>\r\n                                </Alert>\r\n                        }\r\n                        {\r\n                            showMessage &&\r\n                            <QrScan\r\n                                delay={300}\r\n                                onError={handleError}\r\n                                onScan={handleScan}\r\n                                style={{ height: 240, width: 320 }}\r\n                            />\r\n                        }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleCloseModalVerify}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toaster />\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default DriverGuides;","import { useState } from 'react';\r\n\r\nconst useInitialState = () => {\r\n    const [state, setState] = useState({\r\n        visibleMenu: false,\r\n        user: {},\r\n        signedUser: false\r\n    });\r\n\r\n    const toggleMenu = payload => {\r\n        setState({\r\n            ...state,\r\n            visibleMenu: !payload\r\n        });\r\n    };\r\n\r\n    const signUser = payload => {\r\n        setState({\r\n            ...state,\r\n            user: payload,\r\n            signedUser: true\r\n        })\r\n    };\r\n\r\n    return {\r\n        toggleMenu,\r\n        signUser,\r\n        state\r\n    };\r\n\r\n};\r\n\r\nexport default useInitialState;","import styled from 'styled-components'\r\nimport dayjs, { utc } from 'dayjs';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Table, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport config from '../config'\r\nimport '../assets/css/excell-btn.css'\r\n\r\ndayjs.extend(utc);\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 95vw;\r\n    height: 400px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst PrintButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-left: 15px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ReportControl = () => {\r\n    let fecha = new Date();\r\n    const [data, setData] = useState([]);\r\n    const [selectedInitDate, setSelectedInitDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const [selectedFinDate, setSelectedFinDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const dateIniRef = useRef(null);\r\n    const dateFiniRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let response = await fetch(`${config.urlBase}reportes/control?fechaIni=${selectedInitDate}&fechaFin=${selectedFinDate}`)\r\n            response = await response.json();\r\n            setData(response.data);\r\n        }\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const handleChange = async (event) => {\r\n        let dateIni = new Date(dateIniRef.current.value)\r\n        dateIni.setDate(dateIni.getDate()+1)\r\n        let dateFin = new Date(dateFiniRef.current.value)\r\n        dateFin.setDate(dateFin.getDate()+1)\r\n        if (event.target.name === 'iniFecha') {\r\n            setSelectedInitDate(dayjs.utc(dateIni).local().format('YYYY-MM-DD'))   \r\n        }\r\n        if (event.target.name === 'finFecha') {\r\n            setSelectedFinDate(dayjs.utc(dateFin).local().format('YYYY-MM-DD'))\r\n        }\r\n        let response = await fetch(`${config.urlBase}reportes/control?fechaIni=${dateIni}&fechaFin=${dateFin}`)\r\n        response = await response.json();\r\n        setData(response.data);\r\n    };\r\n\r\n    const handlePrint = () => {\r\n        let contenedor = document.getElementById('reporte-control').innerHTML\r\n        let w = window.open();\r\n        w.document.write('<html><head>');\r\n        w.document.write('<style>body{writing-mode: rl;}table{width:100%;border-collapse:collapse;margin:16px 0 16px 0;}table th{border:1px solid #ddd;padding:4px;background-color:#d4eefd;text-align:left;font-size:15px;}table td{border:1px solid #ddd;text-align:left;padding:6px;}</style>');\r\n        w.document.write('</head><body >')\r\n        w.document.write(contenedor);\r\n        w.document.write('</body></html>');\r\n        w.document.close(); // necessary for IE >= 10\r\n        w.focus(); // necessary for IE >= 10\r\n\t\tw.print();\r\n\t\tw.close();\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>REPORTE DE CONTROL DE SERVICIO</h4>\r\n            <div style={{margin: \"15px\"}}>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"btnExportar\"\r\n                    table=\"tabla-control\"\r\n                    filename=\"testExcel\"\r\n                    sheet=\"Hoja Uno\"\r\n                    buttonText=\"Exportar a excel\"\r\n                    className=\"btn-excell\"\r\n                />\r\n                <PrintButton onClick={handlePrint}><PrintIcon />{' '}Imprimir</PrintButton>\r\n            </div>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Inicial</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChange(e)}\r\n                            ref={dateIniRef}\r\n                            value={selectedInitDate}\r\n                            name=\"iniFecha\"\r\n                            max={selectedFinDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Final</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChange(e)}\r\n                            ref={dateFiniRef}\r\n                            value={selectedFinDate}\r\n                            name=\"finFecha\"\r\n                            min={selectedInitDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <TableContainer id=\"reporte-control\">\r\n                <Table striped bordered hover responsive id=\"tabla-control\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CHOFER RECOLECTA</th>\r\n                            <th>FECHA RECOLECCION</th>\r\n                            <th>HORA RECOLECCION</th>\r\n                            <th>TIENDA</th>\r\n                            <th>ORIGEN</th>\r\n                            <th>DESTINO</th>\r\n                            <th>CP</th>\r\n                            <th>MUNICIPIO</th>\r\n                            <th># PEDIDO</th>\r\n                            <th># GUIA</th>\r\n                            <th>CHOFER ENTREGA</th>\r\n                            <th>FECHA ENTREGA</th>\r\n                            <th>HORA ENTREGA</th>\r\n                            <th>COMENTARIO</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((element,index) => (\r\n                                <tr key={`${index}${element.guia}${element.colonia}${element.codigoPostal}`}>\r\n                                    <td>\r\n                                        {element.choferRecolecta}\r\n                                    </td>\r\n                                    <td>\r\n                                        {dayjs.utc(element.fecha).format('DD/MM/YYYY')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {dayjs.utc(element.fecha).format('HH:mm A')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.descripcion}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.origen}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.destino}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.codigoPostal}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.ciudad}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.orden}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.guia}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.choferEntrega}\r\n                                    </td>\r\n                                    <td>\r\n                                        {dayjs.utc(element.RecibeFecha).local().format('DD/MM/YYYY')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {dayjs.utc(element.RecibeFecha).format('HH:mm A')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.motivoDevolucion}\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportControl;","import styled from 'styled-components'\r\nimport dayjs, { utc } from 'dayjs';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Table, InputGroup, FormControl, Row, Col } from 'react-bootstrap';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport config from '../config'\r\nimport '../assets/css/excell-btn.css'\r\n\r\ndayjs.extend(utc);\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 95vw;\r\n    height: 400px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst PrintButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-left: 15px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ReportReturns = () => {\r\n    let fecha = new Date();\r\n    const [data, setData] = useState([]);\r\n    const [selectedInitDate, setSelectedInitDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const [selectedFinDate, setSelectedFinDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const dateIniRef = useRef(null);\r\n    const dateFiniRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let response = await fetch(`${config.urlBase}reportes/devoluciones?iniFecha=${selectedInitDate}&finFecha=${selectedFinDate}`)\r\n            response = await response.json();\r\n            setData(response.data);\r\n        }\r\n        fetchData();\r\n    },[selectedInitDate,selectedFinDate]);\r\n\r\n    const handlePrint = () => {\r\n        let contenedor = document.getElementById('reporte-devoluciones').innerHTML\r\n        let w = window.open();\r\n        w.document.write('<html><head>');\r\n        w.document.write('<style>body{writing-mode: rl;}table{width:100%;border-collapse:collapse;margin:16px 0 16px 0;}table th{border:1px solid #ddd;padding:4px;background-color:#d4eefd;text-align:left;font-size:15px;}table td{border:1px solid #ddd;text-align:left;padding:6px;}</style>');\r\n        w.document.write('</head><body >')\r\n        w.document.write(contenedor);\r\n        w.document.write('</body></html>');\r\n        w.document.close(); // necessary for IE >= 10\r\n        w.focus(); // necessary for IE >= 10\r\n\t\tw.print();\r\n\t\tw.close();\r\n        return true;\r\n    }\r\n\r\n    const handleChangeDate = async (event) => {\r\n        let dateIni = new Date(dateIniRef.current.value)\r\n        dateIni.setDate(dateIni.getDate()+1)\r\n        let dateFin = new Date(dateFiniRef.current.value)\r\n        dateFin.setDate(dateFin.getDate()+1)\r\n        if (event.target.name === 'iniFecha') {\r\n            setSelectedInitDate(dayjs.utc(dateIni).local().format('YYYY-MM-DD'))   \r\n        }\r\n        if (event.target.name === 'finFecha') {\r\n            setSelectedFinDate(dayjs.utc(dateFin).local().format('YYYY-MM-DD'))\r\n        }\r\n        let response = await fetch(`${config.urlBase}reportes/devoluciones?iniFecha=${dayjs.utc(dateIni).local().format('YYYY-MM-DD')}&finFecha=${dayjs.utc(dateFin).local().format('YYYY-MM-DD')}`)\r\n        response = await response.json();\r\n        setData(response.data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>REPORTE DE PAQUETES DEVUELTOS A TIENDA</h4>\r\n            <div style={{margin: \"15px\"}}>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"btnExportar\"\r\n                    table=\"tabla-devoluciones\"\r\n                    filename=\"testExcel\"\r\n                    sheet=\"Hoja Uno\"\r\n                    buttonText=\"Exportar a excel\"\r\n                    className=\"btn-excell\"\r\n                />\r\n                <PrintButton onClick={handlePrint}><PrintIcon />{' '}Imprimir</PrintButton>\r\n            </div>\r\n            <div>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Inicial</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateIniRef}\r\n                            value={selectedInitDate}\r\n                            name=\"iniFecha\"\r\n                            max={selectedFinDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Final</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateFiniRef}\r\n                            value={selectedFinDate}\r\n                            name=\"finFecha\"\r\n                            min={selectedInitDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            <TableContainer id=\"reporte-devoluciones\">\r\n                <Table striped bordered hover id=\"tabla-devoluciones\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CHOFER DEVOLUCION</th>\r\n                            <th>CLIENTE</th>\r\n                            <th>TIENDA</th>\r\n                            <th>DESTINO</th>\r\n                            <th>MUNICIPIO</th>\r\n                            <th>CP</th>\r\n                            <th># PEDIDO</th>\r\n                            <th># GUIA</th>\r\n                            <th>RECOLECTA TIENDA</th>\r\n                            <th>RECOLECTA TIENDA</th>\r\n                            <th>DEVOLUCION TIENDA</th>\r\n                            <th>DEVOLUCION TIENDA</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map(element => (\r\n                                <tr key={element.guia}>\r\n                                    <td>\r\n                                        {element.nombre}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.nombreCorto}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.descripcion}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.direccion}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.ciudad}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.codigoPostal}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.orden}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.guia}\r\n                                    </td>\r\n                                    <td>\r\n                                        {dayjs.utc(element.fechaRecoleccion).local().format('DD/MM/YYYY')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {dayjs.utc(element.fechaRecoleccion).format('HH:mm A')}\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportReturns;","import styled from 'styled-components'\r\nimport dayjs, { utc } from 'dayjs';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Table, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport config from '../config'\r\nimport '../assets/css/excell-btn.css'\r\n\r\ndayjs.extend(utc);\r\n\r\nconst TableContainer = styled.div`\r\n    margin: auto;\r\n    width: 95vw;\r\n    height: 400px;\r\n    overflow-y: scroll;\r\n    @media (max-width: 860px) {\r\n        width: 780px;\r\n    }\r\n    @media (max-width: 760px) {\r\n        width: 580px;\r\n    }\r\n    @media (max-width: 560px) {\r\n        width: 380px;\r\n    }\r\n    @media (max-width: 360px) {\r\n        width: 280px;\r\n    }\r\n`;\r\n\r\nconst PrintButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-left: 15px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ReportTimes = () => {\r\n    let fecha = new Date();\r\n    const [data, setData] = useState([]);\r\n    const [selectedInitDate, setSelectedInitDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const [selectedFinDate, setSelectedFinDate] = useState(dayjs.utc(fecha).local().format('YYYY-MM-DD'))\r\n    const dateIniRef = useRef(null);\r\n    const dateFiniRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let response = await fetch(`${config.urlBase}reportes/tiempos?iniFecha=${selectedInitDate}&finFecha=${selectedFinDate}`)\r\n            response = await response.json();\r\n            setData(response.data);\r\n        }\r\n\r\n        fetchData();\r\n    },[])\r\n\r\nconst handlePrint = () => {\r\n    let contenedor = document.getElementById('reporte-tiempos').innerHTML\r\n    let w = window.open();\r\n    w.document.write('<html><head>');\r\n    w.document.write('<style>table{width:100%;border-collapse:collapse;margin:16px 0 16px 0;}table th{border:1px solid #ddd;padding:4px;background-color:#d4eefd;text-align:left;font-size:15px;}table td{border:1px solid #ddd;text-align:left;padding:6px;}</style>');\r\n    w.document.write('</head><body >')\r\n    w.document.write(contenedor);\r\n    w.document.write('</body></html>');\r\n    w.document.close(); // necessary for IE >= 10\r\n    w.focus(); // necessary for IE >= 10\r\n    w.print();\r\n    w.close();\r\n    return true;\r\n}\r\n\r\nconst handleChangeDate = async (event) => {\r\n    let dateIni = new Date(dateIniRef.current.value)\r\n    dateIni.setDate(dateIni.getDate()+1)\r\n    let dateFin = new Date(dateFiniRef.current.value)\r\n    dateFin.setDate(dateFin.getDate()+1)\r\n    if (event.target.name === 'iniFecha') {\r\n        setSelectedInitDate(dayjs.utc(dateIni).local().format('YYYY-MM-DD'))   \r\n    }\r\n    if (event.target.name === 'finFecha') {\r\n        setSelectedFinDate(dayjs.utc(dateFin).local().format('YYYY-MM-DD'))\r\n    }\r\n    let response = await fetch(`${config.urlBase}reportes/tiempos?iniFecha=${dayjs.utc(dateIni).local().format('YYYY-MM-DD')}&finFecha=${dayjs.utc(dateFin).local().format('YYYY-MM-DD')}`)\r\n    response = await response.json();\r\n    setData(response.data);\r\n}\r\n\r\n    return (\r\n        <>\r\n            <h4>REPORTE DE TIEMPOS</h4>\r\n            <div style={{margin: \"15px\"}}>\r\n                <ReactHTMLTableToExcel\r\n                    id=\"btnExportar\"\r\n                    table=\"tabla-tiempos\"\r\n                    filename=\"testExcel\"\r\n                    sheet=\"Hoja Uno\"\r\n                    buttonText=\"Exportar a excel\"\r\n                    className=\"btn-excell\"\r\n                />\r\n                <PrintButton onClick={handlePrint}><PrintIcon />{' '}Imprimir</PrintButton>\r\n            </div>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Inicial</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateIniRef}\r\n                            value={selectedInitDate}\r\n                            name=\"iniFecha\"\r\n                            max={selectedFinDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Fecha Final</InputGroup.Text>\r\n                        <FormControl\r\n                            type=\"date\"\r\n                            onChange={(e) => handleChangeDate(e)}\r\n                            ref={dateFiniRef}\r\n                            value={selectedFinDate}\r\n                            name=\"finFecha\"\r\n                            min={selectedInitDate}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <TableContainer id=\"reporte-tiempos\">\r\n                <Table striped bordered hover responsive id=\"tabla-tiempos\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CHOFER DEVOLUCION</th>\r\n                            <th>CLIENTE</th>\r\n                            <th>TIENDA</th>\r\n                            <th>DESTINO</th>\r\n                            <th>MUNICIPIO</th>\r\n                            <th>CP</th>\r\n                            <th># PEDIDO</th>\r\n                            <th># GUIA</th>\r\n                            <th>RECOLECCION VS ALMACEN</th>\r\n                            <th>ALMACEN VS CHOFER</th>\r\n                            <th>CHOFER VS CLIENTE</th>\r\n                            <th>CHOFER VS ALMACEN</th>\r\n                            <th>ALMACEN VS DEVOLUCION</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map(element => (\r\n                                <tr key={element.guia}>\r\n                                    <td>\r\n                                        {element.nombre}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.nombreCorto}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.descripcion}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.direccion}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.ciudad}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.codigoPostal}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.numeroPedido}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.guia}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.recoleccionAlmacen}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.almacenChofer}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.choferCliente}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.choferAlmacen}\r\n                                    </td>\r\n                                    <td>\r\n                                        {element.almacenDevolucion}\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportTimes;","import { useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport Layout from \"../components/Layout\";\r\nimport ReportControl from '../components/ReportControl';\r\nimport ReportReturns from '../components/ReportReturns';\r\nimport ReportTimes from '../components/ReportTimes';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n    width: 90vw;\r\n\r\n    overflow-x: scroll;\r\n    ::-webkit-scrollbar {display: none;}\r\n`;\r\n\r\nconst NavApp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-contetn: space-around;\r\n`;\r\n\r\nconst NavElement = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: ${props => props.isActive ? \"bold;\" : \"initial;\"}\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst ordersOptions = [\r\n    {id:1,tittle:'DEVOLUCION A TIENDA',value:'DEVOLUCION'}, \r\n    {id:2,tittle:'TIEMPOS',value:'TIEMPOS'},\r\n    {id:3,tittle:'CONTROL DE SERVICIOS',value:'CONTROL'}\r\n]\r\n\r\nconst opciones = {};\r\nopciones[\"DEVOLUCION\"] = <ReportReturns />\r\nopciones[\"TIEMPOS\"] = <ReportTimes />\r\nopciones[\"CONTROL\"] = <ReportControl />\r\n\r\nconst Reports = () => {\r\n    const [option, setOption] = useState(\"DEVOLUCION\");\r\n\r\n    const handleOption = (event) => {\r\n        setOption(event.target.name)\r\n    };\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>ORDENES DE RECOLECCION</Tittle>\r\n                </Box>\r\n                <NavContainer>\r\n                    <NavApp>\r\n                        {\r\n                            ordersOptions.map(\r\n                                orderOption => (\r\n                                    <NavElement \r\n                                        key={orderOption.id} \r\n                                        name={orderOption.value} \r\n                                        isActive={orderOption.value === option ? true : false}\r\n                                        onClick={handleOption}\r\n                                    >\r\n                                        {orderOption.tittle}\r\n                                    </NavElement>\r\n                                )\r\n                            )\r\n                        }\r\n                    </NavApp>\r\n                </NavContainer>\r\n                {opciones[option]}\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Reports;","import Quagga from 'quagga';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport styled from 'styled-components';\r\nimport { Table, Modal, Spinner, Alert } from 'react-bootstrap';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport AppContext from '../context/AppContext';\r\nimport Layout from \"../components/Layout\";\r\n\r\nimport config from '../config';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tittle = styled.h3`\r\n    @media (max-width: 340px) {\r\n        font-size: calc(1.3rem + .3vw);\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    width: 100%;\r\n    text-align: end;\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst CustomButtonOutline = styled.button`\r\n    background-color: transparent;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    align-self: flex-end;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst TextModal = styled.p`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst CameraArea = styled.div`\r\n    width: 90vw;\r\n`;\r\n\r\nconst ScanCodeButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: black;\r\n    border: none;\r\n    color: white;\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n`;\r\n\r\nconst opciones = {};\r\nopciones[\"ENTRADA\"] = <h1>GUIA</h1>\r\n\r\nconst DriverReturns = () => {\r\n    const { state: { user } } = useContext(AppContext);\r\n    const [guides,setGuides] = useState([]);\r\n    const [selectedElement, setSelectedElement] = useState({});\r\n    const [show, setShow] = useState(false);\r\n    const [showModalVerify, setShowModalVerify] = useState(false);\r\n    const [quaggaInit, setQuaggaInit] = useState(false);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [badGuideMessage, setBadGuideMessage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            console.log(dayjs.utc().local().format('YYYY-MM-DD'))\r\n            let responseG = await fetch(`${config.urlBase}guias/consulta/guias/chofer-devolucion?chofer=${user.chofer}&fecha=${dayjs.utc().local().format('YYYY-MM-DD')}`);\r\n            responseG = await responseG.json();\r\n            setGuides(responseG.data);\r\n        }\r\n        fetchData()\r\n    },[user.chofer]);\r\n\r\n    const handleOrderRegistration = async () => {\r\n        let newBody = {\r\n            orden: selectedElement.orden,\r\n            guia: selectedElement.guia,\r\n            fecha: dayjs.utc().local().format('YYYY-MM-DDTHH:mm:ss'),\r\n        }\r\n        let responseRG = await fetch(`${config.urlBase}guias/devuelta-cliente`,{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newBody)\r\n        });\r\n        responseRG = await responseRG.json();\r\n        setGuides(guides.filter(guide => guide.guia !== selectedElement.guia));\r\n        handleClose();\r\n        toast.success(responseRG.message);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setBadGuideMessage(false);\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const handleShowModalVerify = (element) => {\r\n        setSelectedElement(element);\r\n        setShowModalVerify(true)\r\n    }\r\n\r\n    const handleCloseModalVerify = () => {\r\n        if(quaggaInit) {\r\n            Quagga.stop()\r\n        }\r\n        setBadGuideMessage(false);\r\n        setShowModalVerify(false);\r\n    }\r\n\r\n    Quagga.onDetected(function(result) {\r\n        if(result.codeResult.code === selectedElement.guia) {\r\n            Quagga.stop();\r\n            setShowModalVerify(false);\r\n            handleShow();\r\n        } else {\r\n            setBadGuideMessage(true);\r\n            Quagga.stop()\r\n        }\r\n     });\r\n\r\n    const handleVerify = () => {\r\n        setBadGuideMessage(false);\r\n        setShowMessage(true);\r\n        Quagga.init({\r\n            inputStream: {\r\n                type : \"LiveStream\",\r\n                target: document.querySelector('#camerdevolcuincliente'),\r\n                constraints: {\r\n                    aspectRatio: {min: 0.70, max: 0.70},\r\n                    facingMode: \"environment\" // or user\r\n                }\r\n            },\r\n            locator: {\r\n                patchSize: \"medium\",\r\n                halfSample: true\r\n            },\r\n            numOfWorkers: 4,\r\n            frequency: 1,\r\n            decoder: {\r\n                readers : [{\r\n                    format: \"code_128_reader\",\r\n                    config: {}\r\n                }]\r\n            },\r\n            locate: true\r\n        }, function(err) {\r\n              if (err) {\r\n                  console.log(err);\r\n                  return\r\n              }\r\n              console.log(\"Initialization finished. Ready to start\");\r\n              Quagga.start();\r\n              setQuaggaInit(true);\r\n              setShowMessage(false);\r\n          });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Box>\r\n                    <Tittle>GUIAS A DEVOLVER</Tittle>\r\n                </Box>\r\n                {\r\n                    guides.length > 0 && (\r\n                        <TableContainer>\r\n                            <Table hover responsive striped bordered>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>nombre</th>\r\n                                        <th>direccion</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {guides.map(guide => (\r\n                                        <tr key={guide.guia} onClick={() => handleShowModalVerify(guide)}>\r\n                                            <td>\r\n                                                {guide.nombreCorto}\r\n                                            </td>\r\n                                            <td>\r\n                                                {`${guide.direccion}, Col. ${guide.colonia}, ${guide.ciudad}, ${guide.estado}. ${guide.codigoPostal}`}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )\r\n                }\r\n                {\r\n                    guides.length === 0 && <h5>No cuenta con guias asignadas</h5>\r\n                }\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    fullscreen\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>DETALLE DE GUIA</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <TextModal><strong>GUIA:</strong> {selectedElement.guia}</TextModal>\r\n                        <TextModal><strong>CLIENTE:</strong> {selectedElement.nombreCorto}</TextModal>\r\n                        <Alert variant=\"warning\">\r\n                            <Alert.Heading>Aviso</Alert.Heading>\r\n                            <p>\r\n                            Estas a punto de <strong>marcar</strong> la guia como <strong>devuelta al cliente.</strong><br/>\r\n                            Esta accion es irreversible por lo que te aconsejamos validar los datos antes de dar clic en <strong>DEVOLVER</strong>\r\n                            </p>\r\n                        </Alert>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButton variant=\"primary\" onClick={handleOrderRegistration}>\r\n                        DEVOLVER\r\n                    </CustomButton>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleClose}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    show={showModalVerify}\r\n                    onHide={handleCloseModalVerify}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    fullscreen\r\n                >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>DEVOLUCION DE GUIA</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <TextModal>Para poder realizar la devolucion del paquete es necesario confirmar el numero de guia. Por favor presione escanear para verificarlo.</TextModal>\r\n                        <ScanCodeButton onClick={handleVerify}>ESCANEAR</ScanCodeButton>\r\n                        {\r\n                            showMessage && (\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                                    <p></p>\r\n                                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                                    <p><strong>CARGANDO</strong></p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            badGuideMessage && \r\n                                <Alert variant=\"danger\">\r\n                                    <Alert.Heading>¡Atencion!</Alert.Heading>\r\n                                    <p>\r\n                                        El numero de guia no corresponde al paquete por devolver. <br/>\r\n                                        Para intentarlo de nuevo presione escanear.\r\n                                    </p>\r\n                                </Alert>\r\n                        }\r\n                        <CameraArea id=\"camerdevolcuincliente\"></CameraArea>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <CustomButtonOutline variant=\"secondary\" onClick={handleCloseModalVerify}>\r\n                        CANCELAR\r\n                    </CustomButtonOutline>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toaster />\r\n            </Container>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default DriverReturns;","import { useState,useEffect,useRef,useReducer } from \"react\";\r\nimport { Row, Col, FloatingLabel, Form, Table, Modal, Button, Card, List, ListGroup } from \"react-bootstrap\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport styled from \"styled-components\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/AddBoxSharp'\r\nimport RemoveIcon from '@material-ui/icons/RemoveCircle'\r\n\r\nimport config from \"../../config\";\r\n\r\n//Config objects\r\nconst initialState = {\r\n    markedOrders: 0,\r\n    selectedOrders: []\r\n};\r\n\r\n//Reducers\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedOrders: state.markedOrders+1,\r\n                selectedOrders: state.selectedOrders.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedOrders: state.markedOrders-1,\r\n                selectedOrders: state.selectedOrders.filter(selectedOrder => selectedOrder.orden !== action.payload.orden)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedOrders: action.payload.length,\r\n                selectedOrders: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedOrders: 0,\r\n                selectedOrders: []\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\n//Styled components\r\nconst CustomButton = styled.button`\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst AddGuideButton = styled.button`\r\n    color: #6ECB63;\r\n    background-color: transparent;\r\n    border: none;\r\n    margin: 0;\r\n`;\r\n\r\nconst RemoveGuideButton = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n    margin: 0;\r\n    color: #FF5A5A;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    width: 100%;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n    width: 100%;\r\n    height: 300px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst IconContainer = styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: #000;\r\n    cursor: pointer;\r\n`\r\n\r\n//Component\r\nconst CollectOrders = () => {\r\n    //Reducer\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n\r\n    //Refs\r\n    const warehouseRef = useRef(null);\r\n    const allCheckboxRef = useRef(null);\r\n\r\n    //State\r\n    const [customers, setCustomers] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    const [selectedOrder, setSelectedOrder] = useState({});\r\n    const [guidesOfSelectedOrder, setGuidesOfSelectedOrder] = useState([]);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n    const [filteredOrders, setFilteredOrders] = useState([]);\r\n    const [pendingGuidesToCollect, setPendingGuidesToCollect] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n    const [showAddGuide, setShowAddGuide] = useState(false);\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            //Fetch customers\r\n            let responseCustomers = await fetch(`${config.urlBase}clientes/`);\r\n            responseCustomers = await responseCustomers.json();\r\n            setCustomers(responseCustomers);\r\n            //Fetch branches\r\n            let responseBranches = await fetch(`${config.urlBase}sucursales/`);\r\n            responseBranches = await responseBranches.json();\r\n            setBranches(responseBranches.data);\r\n            //Fetch drivers\r\n            let responseDrivers = await fetch(`${config.urlBase}choferes/`);\r\n            responseDrivers = await responseDrivers.json();\r\n            setDrivers(responseDrivers);\r\n            //Fetch warehouses\r\n            let responseWarehouses = await fetch(`${config.urlBase}almacenes/`);\r\n            responseWarehouses = await responseWarehouses.json();\r\n            setWarehouses(responseWarehouses);\r\n            //Fetch orders\r\n            let responseOrders = await fetch(`${config.urlBase}ordenes/asignadas/all/`);\r\n            responseOrders = await responseOrders.json();\r\n            setOrders(responseOrders.data);\r\n            setFilteredOrders(responseOrders.data);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    //Functions\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => {\r\n        if (state.selectedOrders.length === 0) {\r\n            toast.error(\"No se ha seleccionado ninguna orden\");\r\n            return;\r\n        }\r\n        setShow(true)\r\n    };\r\n\r\n    const handleCloseEdit = () => setShowEdit(false);\r\n\r\n    const handleShowEdit = async (order) => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}guias/${order.orden}/`);\r\n            response = await response.json();\r\n            let orderToBeEdited = {\r\n                ...order,\r\n                guias: response\r\n            }\r\n            setSelectedOrder(orderToBeEdited);\r\n            setGuidesOfSelectedOrder(response);\r\n            setShowEdit(true);\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(\"Error al obtener la información de la orden\");\r\n        }\r\n    };\r\n\r\n    const handleCloseAddGuide = () => setShowAddGuide(false);\r\n\r\n    const handleShowAddGuide = async () => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}guias/consulta/guias/por-sucursal?sucursal=${selectedOrder.sucursal}`);\r\n            response = await response.json();\r\n            if (response.type === \"Error\") {\r\n                toast.error(\"No hay guías disponibles para la sucursal seleccionada\");\r\n                return;\r\n            }\r\n            setPendingGuidesToCollect(response.data);\r\n            setShowAddGuide(true)\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        switch(name) {\r\n            case \"warehouse\":\r\n                if (value === \"all\") {\r\n                    setFilteredOrders(orders);\r\n                } else {\r\n                    setFilteredOrders(orders.filter(order => order.almacen.toLowerCase().includes(value.toLowerCase())));\r\n                }\r\n                dispach({type: \"substract_all\"});\r\n                allCheckboxRef.current.checked = false;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleCheck = (e, order) => {\r\n        if (e.target.checked) {\r\n            dispach({type: \"add_one\", payload: order});\r\n            if (state.selectedOrders.length+1 === filteredOrders.length) {\r\n                allCheckboxRef.current.checked = true;\r\n            }\r\n        } else {\r\n            dispach({type: \"substract_one\", payload: order});\r\n            if (state.selectedOrders.length-1 < filteredOrders.length) {\r\n                allCheckboxRef.current.checked = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAllCheck = (e) => {\r\n        if (e.target.checked) {\r\n            dispach({type: \"add_all\", payload: filteredOrders});\r\n        } else {\r\n            dispach({type: \"substract_all\", payload: filteredOrders});\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}ordenes/eliminar`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    ordenes: state.selectedOrders\r\n                })\r\n            });\r\n            response = await response.json();\r\n            if (response.type === \"Success\") {\r\n                setShow(false);\r\n                dispach({type: \"substract_all\", payload: state.selectedOrders});\r\n                let responseOrders = await fetch(`${config.urlBase}ordenes/asignadas/all/`);\r\n                responseOrders = await responseOrders.json();\r\n                setOrders(responseOrders.data);\r\n                setFilteredOrders(responseOrders.data);\r\n                toast.success(\"Ordenes eliminadas\");\r\n            } else {\r\n                throw new Error(\"Error al eliminar las ordenes\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const handleDeleteGuide = async (guide) => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}guias/`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    guia: guide.guia\r\n                })\r\n            });\r\n            response = await response.json();\r\n            if (response.type === \"Succes\") {\r\n                let responseOrders = await fetch(`${config.urlBase}ordenes/asignadas/all/`);\r\n                responseOrders = await responseOrders.json();\r\n                setGuidesOfSelectedOrder(guidesOfSelectedOrder.filter(guideS => guideS.guia !== guide.guia));\r\n                setOrders(responseOrders.data);\r\n                setFilteredOrders(responseOrders.data);\r\n                toast.success(\"Guía removida\");\r\n            } else {\r\n                throw new Error(\"Error al remover la guía\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const handleAddGuide = async (guide) => {\r\n        try {\r\n            let response = await fetch(`${config.urlBase}guias/asignar-guia-a-orden/`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    guia: guide.guia,\r\n                    orden: selectedOrder\r\n                })\r\n            });\r\n            response = await response.json();\r\n            if (response.type === \"Success\") {\r\n                let responseOrders = await fetch(`${config.urlBase}ordenes/asignadas/all/`);\r\n                responseOrders = await responseOrders.json();\r\n                setPendingGuidesToCollect(pendingGuidesToCollect.filter(guideS => guideS.guia !== guide.guia));\r\n                setGuidesOfSelectedOrder([...guidesOfSelectedOrder, guide]);\r\n                setOrders(responseOrders.data);\r\n                setFilteredOrders(responseOrders.data);\r\n                toast.success(\"Guía agregada\");\r\n            } else {\r\n                throw new Error(\"Error al agregar la guía\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const mapingBranch = (order) => {\r\n        let branch = branches.find(branch => branch.sucursal === order.sucursal);\r\n        if (branch) {\r\n            return branch.descripcion;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    const mapingCustomer = (order) => {\r\n        let customer = customers.find(customer => customer.cliente === order.cliente);\r\n        if (customer) {\r\n            return customer.nombreCorto;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    const mapingDriver = (order) => {\r\n        let driver = drivers.find(driver => driver.chofer === order.choferRecoleccion);\r\n        if (driver) {\r\n            return driver.nombre;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    const mapingWarehouse = (order) => {\r\n        let warehouse = warehouses.find(warehouse => warehouse.almacen === order.almacen);\r\n        if (warehouse) {\r\n            return warehouse.descripcion;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={6}>\r\n                    <FloatingLabel controlId=\"floatingSelect\" label=\"Almacen\" className=\"mb-4 mt-4\">\r\n                        <Form.Select aria-label=\"Floating label select example\" ref={warehouseRef} onChange={handleChange} name=\"warehouse\">\r\n                            <option defaultValue key=\"default\" value=\"all\">Todas</option>\r\n                            {\r\n                                warehouses.map(warehouse => <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>)\r\n                            }\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <CustomButton onClick={handleShow}>\r\n                        ELIMINAR ORDENES SELECCIONADAS\r\n                    </CustomButton>\r\n                    <Modal\r\n                        show={show}\r\n                        onHide={handleClose}\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Eliminar Ordenes</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>¿Está seguro que desea eliminar las ordenes seleccionadas?</p>\r\n                            <p>Ordenes seleccionadas:</p>\r\n                            <Table bordered responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Orden</th>\r\n                                        <th>Paquetes</th>\r\n                                        <th>Chofer</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        state.selectedOrders.map(order => (\r\n                                            <tr key={order.orden}>\r\n                                                <td>{order.orden}</td>\r\n                                                <td>{order.paquetes}</td>\r\n                                                <td>{mapingDriver(order)}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                CANCELAR\r\n                            </Button>\r\n                            <Button variant=\"warning\" onClick={handleDelete}>\r\n                                <strong>ELMIMINAR</strong>\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <TableContainer>\r\n                        <Table hover responsive bordered striped>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input type=\"checkbox\" onChange={(event) => handleAllCheck(event)} ref={allCheckboxRef}/>\r\n                                        {state.markedOrders > 0 && <small style={{marginLeft:\"5px\"}}><strong> {state.markedOrders}</strong></small>}\r\n                                    </th>\r\n                                    <th>Orden</th>\r\n                                    <th>Cliente</th>\r\n                                    <th>Sucursal</th>\r\n                                    <th>Paquetes</th>\r\n                                    <th>Registro</th>\r\n                                    <th>Chofer</th>\r\n                                    <th>Editar</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    filteredOrders.map(order => \r\n                                        <tr key={order.id}>\r\n                                            <td><input type=\"checkbox\"  checked={state.selectedOrders.includes(order)} onChange={(event) => handleCheck(event, order)}/></td>\r\n                                            <td>{order.orden}</td>\r\n                                            <td>{mapingCustomer(order)}</td>\r\n                                            <td>{mapingBranch(order)}</td>\r\n                                            <td>{order.paquetes}</td>\r\n                                            <td>{dayjs(order.fecha).format('DD/MM/YYYY hh:mm a')}</td>\r\n                                            <td>{mapingDriver(order)}</td>\r\n                                            <td><IconContainer onClick={() => handleShowEdit(order)}><EditIcon /></IconContainer></td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                        <Modal\r\n                            show={showEdit}\r\n                            onHide={handleCloseEdit}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            fullscreen\r\n                        >   \r\n                            <Toaster />\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <p><strong>ORDEN # {selectedOrder.orden}</strong></p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Card style={{marginBottom:\"0.5rem\"}}>\r\n                                            <Card.Body style={{padding:\"0.5rem\"}}>\r\n                                                <Card.Subtitle>\r\n                                                    Fecha\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    {dayjs(selectedOrder.fecha).format('DD/MM/YYYY')}\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Card style={{marginBottom:\"0.5rem\"}}>\r\n                                            <Card.Body style={{padding:\"0.5rem\"}}>\r\n                                                <Card.Subtitle>\r\n                                                    Cliente\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    {mapingCustomer(selectedOrder)}\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Card style={{marginBottom:\"0.5rem\"}}>\r\n                                            <Card.Body style={{padding:\"0.5rem\"}}>\r\n                                                <Card.Subtitle>\r\n                                                    Origen\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    {mapingBranch(selectedOrder)}\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Card style={{marginBottom:\"0.5rem\"}}>\r\n                                            <Card.Body style={{padding:\"0.5rem\"}}>\r\n                                                <Card.Subtitle>\r\n                                                    Destino\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    {mapingWarehouse(selectedOrder)}\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Card style={{marginBottom:\"0.5rem\"}}>\r\n                                            <Card.Body style={{padding:\"0.5rem\"}}>\r\n                                                <Card.Subtitle>\r\n                                                    Chofer\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    {mapingDriver(selectedOrder)}\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Card style={{marginBottom:\"0.5rem\"}}>\r\n                                            <Card.Body style={{padding:\"0.5rem\"}}>\r\n                                                <Card.Text>\r\n                                                    <AddGuideButton onClick={handleShowAddGuide}>\r\n                                                        <AddIcon />\r\n                                                        <strong>Agregar Guia</strong>\r\n                                                    </AddGuideButton>\r\n                                                    <Modal\r\n                                                        show={showAddGuide}\r\n                                                        onHide={handleCloseAddGuide}\r\n                                                        backdrop=\"static\"\r\n                                                        keyboard={false}\r\n                                                        centered\r\n                                                    >\r\n                                                        <Modal.Body>\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <strong><p>AGREGAR GUIA</p></strong>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <p>Guias pendientes de la sucursal {mapingBranch(selectedOrder)}:</p>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <ListGroup>\r\n                                                                        {\r\n                                                                            pendingGuidesToCollect.length > 0 ?\r\n                                                                                pendingGuidesToCollect.map(guide => \r\n                                                                                    <ListGroup.Item key={guide.id}>\r\n                                                                                        <Row>\r\n                                                                                            <Col>\r\n                                                                                                <strong>{guide.guia}</strong>\r\n                                                                                                <AddGuideButton\r\n                                                                                                    onClick={() => handleAddGuide(guide)}\r\n                                                                                                >\r\n                                                                                                    <AddIcon />\r\n                                                                                                </AddGuideButton>\r\n                                                                                            </Col>\r\n                                                                                        </Row>\r\n                                                                                    </ListGroup.Item>\r\n                                                                                ) : <p>No hay guias registradas</p>\r\n                                                                        }\r\n                                                                    </ListGroup>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Modal.Body>\r\n                                                        <Modal.Footer>\r\n                                                            <Button variant=\"secondary\" onClick={handleCloseAddGuide}>\r\n                                                                Cerrar\r\n                                                            </Button>\r\n                                                        </Modal.Footer>\r\n                                                    </Modal>\r\n                                                </Card.Text>\r\n                                                <Card.Subtitle>\r\n                                                    Paquetes:\r\n                                                </Card.Subtitle>\r\n                                                <Card.Text style={{marginTop:\"0.5rem\"}}>\r\n                                                    <ListContainer>\r\n                                                        { guidesOfSelectedOrder.length > 0 ? guidesOfSelectedOrder.map(guide => \r\n                                                            <ListGroup>\r\n                                                                <ListGroup.Item key={guide.guia}>\r\n                                                                    <strong>{guide.guia}</strong>\r\n                                                                    {' '}\r\n                                                                    {dayjs(guide.fechaEnvio).format('DD/MM/YYYY hh:mm a')}\r\n                                                                    <RemoveGuideButton onClick={() => handleDeleteGuide(guide)}><RemoveIcon /><strong><small>Eliminar</small></strong></RemoveGuideButton>\r\n                                                                </ListGroup.Item>\r\n                                                            </ListGroup>\r\n                                                        ) : <p>No hay guiasasignadas a esta orden</p>}\r\n                                                    </ListContainer>\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleCloseEdit}>\r\n                                    ACEPTAR\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </TableContainer>\r\n                </Col>\r\n            </Row>\r\n            <Toaster />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectOrders;","const HandleGuides = () => {\r\n    return (\r\n        <div>\r\n            HandleGuides\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HandleGuides;","import { useState,useEffect,useRef,useReducer,useContext } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { Row, Col, FloatingLabel, Form, Table } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport AppContext from \"../../context/AppContext\";\r\n\r\nimport config from \"../../config\";\r\n\r\n//Config objects\r\nconst headers = [\r\n    {\r\n        id: 1,\r\n        name: \"Cliente\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Sucursal\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Guía\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Fecha\"\r\n    },\r\n];\r\n\r\nconst initialState = {\r\n    markedGuides: 0,\r\n    selectedGuides: []\r\n};\r\n\r\n//Reducers\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"add_one\":\r\n            return {\r\n                markedGuides: state.markedGuides+1,\r\n                selectedGuides: state.selectedGuides.concat(action.payload)\r\n            }\r\n        case \"substract_one\":\r\n            return {\r\n                markedGuides: state.markedGuides-1,\r\n                selectedGuides: state.selectedGuides.filter(selectedGuide => selectedGuide.guia !== action.payload.guia)\r\n            }\r\n        case \"add_all\":\r\n            return {\r\n                markedGuides: action.payload.length,\r\n                selectedGuides: action.payload\r\n            }\r\n        case \"substract_all\":\r\n            return {\r\n                markedGuides: 0,\r\n                selectedGuides: []\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\n//Styled components\r\nconst TableContainer = styled.div`\r\n    width: 100%;\r\n    height: 400px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst Display = styled.div`\r\n    position: fixed;\r\n    width: 45%;\r\n    padding: 10px;\r\n    border: solid 1.5px black;\r\n    height: 510px;\r\n`;\r\n\r\nconst GuideContainer = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst CustomButton = styled.button`\r\n    position: absolute;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    background-color: #fdd448;\r\n    border: solid 1.5px #fdd448;\r\n    color: black;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n`;\r\n\r\n//Component\r\nconst ToCollect = () => {\r\n    let utc = require(\"dayjs/plugin/utc\");\r\n    dayjs.extend(utc);\r\n\r\n    //Context\r\n    const { state: { user } } = useContext(AppContext);\r\n\r\n    //Reducer\r\n    const [state, dispach] = useReducer(reducer,initialState);\r\n\r\n    //States\r\n    const [customers, setCustomers] = useState([]);\r\n    const [branches, setBranches] = useState([]);\r\n    const [guides, setGuides] = useState([]);\r\n    const [filteredGuides, setFilteredGuides] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [warehouses, setWarehouses] = useState([]);\r\n\r\n    //Refs\r\n    const branchRef = useRef(null);\r\n    const driverRef = useRef(null);\r\n    const warehouseRef = useRef(null);\r\n    const allCheckboxRef = useRef(null);\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            //Fetch customers\r\n            let responseCustomers = await fetch(`${config.urlBase}clientes/`);\r\n            responseCustomers = await responseCustomers.json();\r\n            setCustomers(responseCustomers);\r\n            //Fetch branches\r\n            let responseBranches = await fetch(`${config.urlBase}sucursales/`);\r\n            responseBranches = await responseBranches.json();\r\n            setBranches(responseBranches.data);\r\n            //Fetch guides\r\n            let responseGuides = await fetch(`${config.urlBase}guias/consulta/guias/por-recolectar`);\r\n            responseGuides = await responseGuides.json();\r\n            setGuides(responseGuides.data);\r\n            setFilteredGuides(responseGuides.data);\r\n            //Fetch drivers\r\n            let responseDrivers = await fetch(`${config.urlBase}choferes/`);\r\n            responseDrivers = await responseDrivers.json();\r\n            setDrivers(responseDrivers);\r\n            //Fetch warehouses\r\n            let responseWarehouses = await fetch(`${config.urlBase}almacenes/`);\r\n            responseWarehouses = await responseWarehouses.json();\r\n            setWarehouses(responseWarehouses);\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    //Functions\r\n    const handleChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        switch (name) {\r\n            case \"branch\":\r\n                dispach({type: \"substract_all\"});\r\n                allCheckboxRef.current.checked = false;\r\n                if (value === \"all\") {\r\n                    setFilteredGuides(guides);    \r\n                } else {\r\n                    let filtered = guides.filter(guide => guide.sucursal === value);\r\n                    setFilteredGuides(filtered);\r\n                }\r\n                break;\r\n            case \"driver\":\r\n                \r\n                break;\r\n            case \"warehouse\":\r\n                \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const handleCheck = (e, guide) => {\r\n        if (e.target.checked) {\r\n            let filtered = guides.filter(guideReference => guideReference.sucursal === guide.sucursal);\r\n            setFilteredGuides(filtered);\r\n            branchRef.current.value = guide.sucursal;\r\n            let warehouse = branches.find(branch => branch.sucursal === guide.sucursal);\r\n            warehouseRef.current.value = warehouse.almacen;\r\n            dispach({type: \"add_one\", payload: guide});\r\n            if (state.selectedGuides.length+1 === filteredGuides.length) {\r\n                allCheckboxRef.current.checked = true;\r\n            }\r\n        } else {\r\n            dispach({type: \"substract_one\", payload: guide});\r\n            if (state.selectedGuides.length-1 < filteredGuides.length) {\r\n                allCheckboxRef.current.checked = false;\r\n            }\r\n            /*if (state.selectedGuides.length-1 === 0) {\r\n                branchRef.current.value = \"all\";\r\n                setFilteredGuides(guides);\r\n            }*/\r\n        }\r\n\r\n    }\r\n\r\n    const handleAllCheck = (e) => {\r\n        if (e.target.checked) {\r\n            dispach({type: \"add_all\", payload: filteredGuides})\r\n        } else {\r\n            dispach({type: \"substract_all\"})\r\n        }\r\n    }\r\n\r\n    const handleClick = (e, guide) => {\r\n        dispach({type: \"substract_one\", payload: guide});\r\n        if (state.selectedGuides.length-1 < filteredGuides.length) {\r\n            allCheckboxRef.current.checked = false;\r\n        }\r\n    }\r\n\r\n    const handleNewOrder = async () => {\r\n        try {\r\n            if (state.selectedGuides.length === 0) {\r\n                throw new Error(\"No hay guías seleccionadas\");\r\n            }\r\n            let response = await fetch(`${config.urlBase}ordenes/`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    orden: 0,\r\n                    fecha: dayjs().utc().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                    almacen: warehouseRef.current.value,\r\n                    cliente: state.selectedGuides[0].cliente,\r\n                    sucursal: branchRef.current.value,\r\n                    paquetes: state.selectedGuides.length,\r\n                    usuarioCaptura: user.usuario,\r\n                    estatus: \"Asignada\",\r\n                    choferRecoleccion: driverRef.current.value,\r\n                    guias: state.selectedGuides\r\n                })\r\n            });\r\n            response = await response.json();\r\n            if (response.type === \"Success\") {\r\n                toast.success(\"Orden creada con éxito\");\r\n                dispach({type: \"substract_all\"});\r\n                allCheckboxRef.current.checked = false;\r\n                branchRef.current.value = \"all\";\r\n                let responseGuides = await fetch(`${config.urlBase}guias/consulta/guias/por-recolectar`);\r\n                responseGuides = await responseGuides.json();\r\n                setGuides(responseGuides.data);\r\n                setFilteredGuides(responseGuides.data);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(\"Error al crear la orden, intente de nuevo\");\r\n        } \r\n    }\r\n\r\n    const mapingBranch = (guide) => {\r\n        let branch = branches.find(branch => branch.sucursal === guide.sucursal);\r\n        return branch.descripcion;\r\n    }\r\n\r\n    const mapingCustomer = (guide) => {\r\n        let customer = customers.find(customer => customer.cliente === guide.cliente);\r\n        return customer.nombreCorto;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={6}>\r\n                    <FloatingLabel controlId=\"floatingSelect\" label=\"Sucursal\" className=\"mb-4 mt-4\">\r\n                        <Form.Select aria-label=\"Floating label select example\" ref={branchRef} onChange={handleChange} name=\"branch\">\r\n                            <option defaultValue key=\"default\" value=\"all\">Todas</option>\r\n                            {\r\n                                branches.map(branch => <option key={branch.sucursal} value={branch.sucursal}>{branch.descripcion}</option>)\r\n                            }\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                </Col>\r\n                <Col>\r\n                    <Display>\r\n                        <Row>\r\n                            <Col>\r\n                                <h6>NUEVA ORDEN DE RECOLECCION</h6> \r\n                            </Col>\r\n                            <Col>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <FloatingLabel controlId=\"floatingSelect\" label=\"Chofer\" className=\"mb-4 mt-4\">\r\n                                    <Form.Select aria-label=\"Floating label select example\" ref={driverRef} onChange={handleChange} name=\"driver\">\r\n                                        {\r\n                                            drivers.map(driver => <option key={driver.chofer} value={driver.chofer}>{driver.nombre}</option>)\r\n                                        }\r\n                                    </Form.Select>\r\n                                </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                                <FloatingLabel controlId=\"floatingSelect\" label=\"Destino\" className=\"mb-4 mt-4\">\r\n                                    <Form.Select aria-label=\"Floating label select example\" ref={warehouseRef} onChange={handleChange} name=\"warehouse\">\r\n                                        {\r\n                                            warehouses.map(warehouse => <option key={warehouse.almacen} value={warehouse.almacen}>{warehouse.descripcion}</option>)\r\n                                        }\r\n                                    </Form.Select>\r\n                                </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n                        <h6>TOTAL DE GUIAS ASIGNADAS A LA ORDEN: {state.selectedGuides.length}</h6>\r\n                        <GuideContainer>\r\n                            <Table hover responsive bordered>\r\n                                <tbody>\r\n                                    {\r\n                                        state.selectedGuides.map(guide => <tr key={guide.guia} onClick={(e) => handleClick(e,guide)}>\r\n                                            <td>{mapingCustomer(guide)}</td>\r\n                                            <td>{mapingBranch(guide)}</td>\r\n                                            <td>{guide.guia}</td>\r\n                                            <td>{dayjs.utc(guide.fechaEnvio).format('DD/MM/YYYY')}</td>\r\n                                        </tr>)\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </GuideContainer>\r\n                        <CustomButton onClick={handleNewOrder}>\r\n                            AGREGAR\r\n                        </CustomButton> \r\n                    </Display>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <TableContainer>\r\n                        <Table hover responsive striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <input type=\"checkbox\" onChange={(event) => handleAllCheck(event)} ref={allCheckboxRef}/>\r\n                                        {state.markedGuides > 0 && <small style={{marginLeft:\"5px\"}}><strong> {state.markedGuides}</strong></small>}\r\n                                    </th>\r\n                                    {\r\n                                        headers.map(header => <th key={header.id}>{header.name}</th>)\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    filteredGuides.map(guide => <tr key={guide.guia}>\r\n                                        <td>\r\n                                            <input type=\"checkbox\" checked={state.selectedGuides.includes(guide)} onChange={(event) => handleCheck(event, guide)}/>\r\n                                        </td>\r\n                                        <td>{mapingCustomer(guide)}</td>\r\n                                        <td>{mapingBranch(guide)}</td>\r\n                                        <td>{guide.guia}</td>\r\n                                        <td>{dayjs.utc(guide.fechaEnvio).format('DD/MM/YYYY')}</td>\r\n                                    </tr>)\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Toaster />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToCollect;","const InWarehouse = () => {\r\n    return (\r\n        <div>\r\n            InWarehouse\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InWarehouse;","const TrackingGuides = () => {\r\n    return (\r\n        <div>\r\n            TrackingGuides\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackingGuides;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport CollectOrders from \"../components/Guides/CollectOrders\";\r\nimport HandleGuides from \"../components/Guides/HandleGuides\";\r\nimport ToCollect from \"../components/Guides/ToCollect\";\r\nimport InWarehouse from \"../components/Guides/InWarehouse\";\r\nimport TrackingGuides from \"../components/Guides/TrackingGuides\";\r\n\r\n\r\nconst options = {\r\n    TOCOLLECT: <ToCollect />,\r\n    COLLECTORDERS: <CollectOrders />,\r\n    HANDLEGUIDES: <HandleGuides />,\r\n    INWAREHOUSE: <InWarehouse />,\r\n    TRACKINGGUIDES: <TrackingGuides />\r\n};\r\n\r\nconst navOptions = [\r\n    { id:1, name:'GUIAS POR RECOLECTAR',value:'TOCOLLECT'},\r\n    { id:2, name:'ORDENES DE RECOLECCION',value:'COLLECTORDERS'},\r\n    { id:3, name:'ENTRADA/DEVOLUCION DE GUIAS',value:'HANDLEGUIDES'},\r\n    { id:4, name:'GUIAS EN ALMACEN',value:'INWAREHOUSE'},\r\n    { id:5, name:'TRACKING DE GUIAS',value:'TRACKINGGUIDES'}\r\n];\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n    width: 90vw;\r\n    margin-bottom: 10px;\r\n\r\n    overflow-x: scroll;\r\n    ::-webkit-scrollbar {display: none;}\r\n`;\r\n\r\nconst NavApp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-contetn: space-around;\r\n`;\r\n\r\nconst NavElement = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    font-weight: ${props => props.isActive ? \"bold;\" : \"initial;\"}\r\n\r\n    &:hover {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst ApplicationFull = () => {\r\n    const [page, setPage] = useState(\"TOCOLLECT\");\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <NavContainer>\r\n                    <NavApp>\r\n                        {navOptions.map(option => (\r\n                            <NavElement\r\n                                key={option.id}\r\n                                name={option.name}\r\n                                isActive={page === option.value}\r\n                                onClick={() => setPage(option.value)}\r\n                            >\r\n                                {option.name}\r\n                            </NavElement>\r\n                        ))}\r\n                    </NavApp>\r\n                </NavContainer>\r\n                {\r\n                    options[page] \r\n                }  \r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ApplicationFull;","import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Catalogs from '../containers/Catalogs';\r\nimport Guides from '../containers/Guides';\r\nimport Log from '../containers/Log';\r\nimport Orders from '../containers/Orders';\r\nimport DriverOrders from '../containers/DriverOrders';\r\nimport DriverGuides from '../containers/DriverGuides'\r\nimport AppContext from '../context/AppContext';\r\nimport useInitialState from '../hooks/useInitialState';\r\nimport Reports from '../containers/Reports';\r\nimport DriverReturns from '../containers/DriverReturns';\r\nimport ApplicationFull from '../containers/ApplicationFull';\r\n\r\nconst App = () => {\r\n    const initialState = useInitialState();\r\n\r\n    const MyRoute = (props) => {\r\n        return (\r\n            initialState.state.signedUser ? \r\n               <Route {...props} />\r\n               :\r\n               <Redirect to=\"/\"/> \r\n        )\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={initialState}>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Log} />\r\n                    <MyRoute exact path=\"/orders\" component={initialState.state.user.tipo === 1 ? Orders : DriverOrders} />\r\n                    <MyRoute exact path=\"/catalogs\" component={Catalogs} />\r\n                    <MyRoute exact path=\"/reports\" component={Reports} />\r\n                    <MyRoute exact path=\"/guides\" component={initialState.state.user.tipo === 1 ? Guides : DriverGuides} />\r\n                    <MyRoute exact path=\"/returns\" component={DriverReturns} />\r\n                    <MyRoute exact path=\"/application\" component={initialState.state.user.tipo === 1 ? ApplicationFull : DriverOrders} />\r\n                    {/*<Route component={} /> */}\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </AppContext.Provider>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './routes/index';\r\nimport ApplicationFull from './containers/ApplicationFull';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}